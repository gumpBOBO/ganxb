<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>廿壴博客 - 小波个人分享圈子</title>
  
  <subtitle>探讨WEB技术.交流日常生活.感悟短暂人生.分享简单快乐</subtitle>
  <link href="https://blog.ganxb2.com/rss/atom.xml" rel="self"/>
  
  <link href="https://blog.ganxb2.com/"/>
  <updated>2024-12-30T18:48:24.548Z</updated>
  <id>https://blog.ganxb2.com/</id>
  
  <author>
    <name>chopin gump</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何在uniapp小程序和app中支持pad扫码枪</title>
    <link href="https://blog.ganxb2.com/33231.html"/>
    <id>https://blog.ganxb2.com/33231.html</id>
    <published>2024-12-31T01:31:25.000Z</published>
    <updated>2024-12-30T18:48:24.548Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p>扫条码通常直接调用uniapp的官方api接口拉起摄像头来实现，但是新出的平板型pda扫码枪中，操作员可能更习惯pda操作模式，而不是通过点击UI交互使用摄像头，这时应该如何在uniapp小程序和app中支持pad扫码枪？本文分享实现uniapp小程序和app中支持pad扫码枪的方法步骤。</p><p>基于vue2项目代码中添加，vue3语法糖的组合式写法差异点业务代码页面，其他都是一致的，晚点小波会同步更新在<a href="https://gitee.com/ganxb2/uniapp_vue3_vite_pinia" target="_blank" rel="noopener external nofollow noreferrer">vue3+vite+typescript+pinia+uni-ui+pnpm</a>项目中。</p><br><h3 id="🙂第一步：utils文件夹创建个pdaScan-js文件"><a href="#🙂第一步：utils文件夹创建个pdaScan-js文件" class="headerlink" title="🙂第一步：utils文件夹创建个pdaScan.js文件"></a>🙂第一步：utils文件夹创建个pdaScan.js文件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> main<br><span class="hljs-keyword">let</span> filter<br><span class="hljs-keyword">let</span> receiver<br><span class="hljs-keyword">let</span> tag = <span class="hljs-literal">false</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 开始广播监听扫码</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">regScan</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  main.<span class="hljs-title function_">registerReceiver</span>(receiver, filter)<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 停止广播监听扫码</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">unRegScan</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  main.<span class="hljs-title function_">unregisterReceiver</span>(receiver)<br>&#125;<br><span class="hljs-comment">/**  剩余下个变量已经做了全局变量</span><br><span class="hljs-comment"> * // PDA扫描广播码</span><br><span class="hljs-comment">  appScanAction: &#x27;android.intent.action.SCANRESULT&#x27;,</span><br><span class="hljs-comment">  // PDA 扫码广播值字段</span><br><span class="hljs-comment">  appScanExtra: &#x27;value&#x27;,</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">initScan</span> = (<span class="hljs-params">onReceive</span>) =&gt; &#123;Q<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;initScan&#x27;</span>)<br>  main = plus.<span class="hljs-property">android</span>.<span class="hljs-title function_">runtimeMainActivity</span>() <span class="hljs-comment">//获取activity</span><br>  <span class="hljs-keyword">var</span> <span class="hljs-title class_">IntentFilter</span> = plus.<span class="hljs-property">android</span>.<span class="hljs-title function_">importClass</span>(<span class="hljs-string">&#x27;android.content.IntentFilter&#x27;</span>)<br>  filter = <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntentFilter</span>()<br>  <span class="hljs-comment">// filter.addAction(&#x27;android.intent.action.SCANRESULT&#x27;) // 换你的广播动作</span><br>  <span class="hljs-comment">// 东大集团 常见扫码枪广播 https://blog.csdn.net/echizao1839/article/details/115962599</span><br>  filter.<span class="hljs-title function_">addAction</span>(<span class="hljs-string">&#x27;com.android.server.scannerservice.broadcast&#x27;</span>) <span class="hljs-comment">// 换你的广播动作</span><br>  receiver = plus.<span class="hljs-property">android</span>.<span class="hljs-title function_">implements</span>(<br>    <span class="hljs-string">&#x27;io.dcloud.feature.internal.reflect.BroadcastReceiver&#x27;</span>,<br>    &#123;<br>      <span class="hljs-attr">onReceive</span>: <span class="hljs-function">(<span class="hljs-params">context, intent</span>) =&gt;</span> &#123;<br>        plus.<span class="hljs-property">android</span>.<span class="hljs-title function_">importClass</span>(intent)<br>        <span class="hljs-comment">// let code = intent.getStringExtra(&#x27;value&#x27;) // 换你的广播标签</span><br>        <span class="hljs-keyword">let</span> code = intent.<span class="hljs-title function_">getStringExtra</span>(<span class="hljs-string">&#x27;scannerdata&#x27;</span>) <span class="hljs-comment">// 换你的广播标签</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;pdaScan:1&#x27;</span>, code)<br><br>        <span class="hljs-comment">// 必须延迟一下，不然无法调用</span><br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>          uni.$emit(<span class="hljs-string">&#x27;scancodedate&#x27;</span>, &#123;<br>            code,<br>            <span class="hljs-attr">result</span>: code<br>          &#125;)<br>        &#125;, <span class="hljs-number">300</span>)<br>      &#125;<br>    &#125;<br>  )<br>&#125;<br><br><span class="hljs-keyword">export</span> &#123; initScan, regScan, unRegScan &#125;<br></code></pre></td></tr></table></figure><br><h3 id="🧐第二步：入口main-js文件添加代码"><a href="#🧐第二步：入口main-js文件添加代码" class="headerlink" title="🧐第二步：入口main.js文件添加代码"></a>🧐第二步：入口main.js文件添加代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// main.js</span><br><span class="hljs-keyword">import</span> &#123; initScan, regScan, unRegScan &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/utils/pdaScan.js&quot;</span>;<br><br><span class="hljs-comment">// APP PDA扫描</span><br><span class="hljs-comment">// #ifdef APP-PLUS</span><br><span class="hljs-title function_">initScan</span>();<br><span class="hljs-title function_">regScan</span>();<br><span class="hljs-comment">// #endif</span><br></code></pre></td></tr></table></figure><br><h3 id="🤔第三步：业务代码文件x-vue中调用"><a href="#🤔第三步：业务代码文件x-vue中调用" class="headerlink" title="🤔第三步：业务代码文件x.vue中调用"></a>🤔第三步：业务代码文件x.vue中调用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//  #ifdef APP-PLUS</span><br><span class="hljs-comment">// 针对pda扫码监控获取值</span><br><span class="hljs-title function_">onShow</span>(<span class="hljs-params"></span>) &#123;<br>  uni.$off(<span class="hljs-string">&#x27;scancodedate&#x27;</span>) <span class="hljs-comment">// 每次进来先 移除全局自定义事件监听器</span><br>  uni.$on(<span class="hljs-string">&#x27;scancodedate&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// data最好前后截取空格，扫码枪扫出来的code可能会有空格</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">scan</span>(data)<br>  &#125;)<br>&#125;,<br><span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>) &#123;&#125;,<br><span class="hljs-title function_">onHide</span>(<span class="hljs-params"></span>) &#123;<br>  uni.$off(<span class="hljs-string">&#x27;scancodedate&#x27;</span>)<br>&#125;,<br><span class="hljs-title function_">onUnload</span>(<span class="hljs-params"></span>) &#123;<br>  uni.$off(<span class="hljs-string">&#x27;scancodedate&#x27;</span>)<br>&#125;,<br><span class="hljs-title function_">destroyed</span>(<span class="hljs-params"></span>) &#123;<br>  uni.$off(<span class="hljs-string">&#x27;scancodedate&#x27;</span>)<br>&#125;<br><span class="hljs-comment">//  #endif</span><br></code></pre></td></tr></table></figure><br><h3 id="😚常见pda扫码枪对应的广播名称code"><a href="#😚常见pda扫码枪对应的广播名称code" class="headerlink" title="😚常见pda扫码枪对应的广播名称code"></a>😚常见pda扫码枪对应的广播名称code</h3><p>引用:  常见扫码枪广播名称<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="常见扫码枪广播名称（更多欢迎投稿）">[1]</span></a></sup>  </p><table><thead><tr><th>品牌</th><th>品牌名称</th><th>型号</th><th>版本号</th><th>广播名</th><th>广播接收名</th></tr></thead><tbody><tr><td>智联天地</td><td>alps</td><td>simphone</td><td>base_v1.3.13</td><td>android.intent.action.RECEIVE_SCANDATA_BROADCAST</td><td>android.intent.extra.SCAN_BROADCAST_DATA</td></tr><tr><td>智联天地</td><td>alps</td><td>simphone</td><td>base-m8_v1.6.13</td><td>android.intent.action.RECEIVE_SCANDATA_BROADCAST</td><td>android.intent.extra.SCAN_BROADCAST_DATA</td></tr><tr><td>智联天地</td><td>alps</td><td>thimfone</td><td></td><td>android.intent.action.RECEIVE_SCANDATA_BROADCAST</td><td>android.intent.extra.SCAN_BROADCAST_DATA</td></tr><tr><td>智联天地</td><td>alps</td><td>N5</td><td></td><td>android.intent.action.RECEIVE_SCANDATA_BROADCAST</td><td>android.intent.extra.SCAN_BROADCAST_DATA</td></tr><tr><td>智联天地</td><td>alps</td><td>n5</td><td></td><td>android.intent.action.RECEIVE_SCANDATA_BROADCAST</td><td>android.intent.extra.SCAN_BROADCAST_DATA</td></tr><tr><td>智联天地</td><td></td><td>N5S</td><td></td><td></td><td></td></tr><tr><td>智联天地</td><td>zltd</td><td>N7e</td><td></td><td>nlscan.action.SCANNER_RESULT</td><td>SCAN_BARCODE1</td></tr><tr><td>智联天地</td><td>NEOLEX</td><td></td><td></td><td>android.intent.action.SCANRESULT</td><td>value</td></tr><tr><td>智联天地</td><td></td><td>Android TD</td><td></td><td>android.intent.action.SCANRESULT</td><td>value</td></tr><tr><td>智联天地</td><td></td><td>Alps Android</td><td></td><td>android.intent.action.SCANRESULT</td><td>value</td></tr><tr><td>智联天地</td><td></td><td>Android</td><td></td><td>android.intent.action.SCANRESULT</td><td>value</td></tr><tr><td>智联天地</td><td></td><td>X7</td><td></td><td>android.intent.action.SCANRESULT</td><td>value</td></tr><tr><td>新大陆</td><td>Newland</td><td>NLS-MT65W</td><td></td><td>nlscan.action.SCANNER_RESULT</td><td>SCAN_BARCODE1或SCAN_BARCODE2</td></tr><tr><td>新大陆</td><td>NEWLAND</td><td>NLS-MT60</td><td></td><td>android.intent.action.RECEIVE_SCANDATA_BROADCAST</td><td>android.intent.extra.SCAN_BROADCAST_DATA</td></tr><tr><td>新大陆</td><td>NEWLAND</td><td>n5</td><td></td><td>android.intent.action.RECEIVE_SCANDATA_BROADCAST</td><td>android.intent.extra.SCAN_BROADCAST_DATA</td></tr><tr><td>新大陆</td><td>NEWLAND</td><td>simphone</td><td></td><td>android.intent.action.RECEIVE_SCANDATA_BROADCAST</td><td>android.intent.extra.SCAN_BROADCAST_DATA</td></tr><tr><td>新大陆</td><td>NEWLAND</td><td>N5</td><td></td><td>android.intent.action.RECEIVE_SCANDATA_BROADCAST</td><td>android.intent.extra.SCAN_BROADCAST_DATA</td></tr><tr><td>新大陆</td><td>NEWLAND</td><td>N5S</td><td></td><td>android.intent.action.RECEIVE_SCANDATA_BROADCAST</td><td>android.intent.extra.SCAN_BROADCAST_DATA</td></tr><tr><td>新大陆</td><td>NEWLAND</td><td>NLS-MT60E</td><td></td><td>ACTION_BAR_SCAN  EXTRA_SCAN_DATA</td><td></td></tr><tr><td>新大陆</td><td>NEWLAND</td><td>thimfone</td><td></td><td>nlscan.action.SCANNER_RESULT</td><td>SCAN_BARCODE1,SCAN_BARCODE2</td></tr><tr><td>新大陆</td><td>NEWLAND</td><td>MT65</td><td></td><td>nlscan.action.SCANNER_RESULT</td><td>SCAN_BARCODE1,SCAN_BARCODE3</td></tr><tr><td>新大陆</td><td>NEWLAND</td><td>NLS-MT65</td><td></td><td>nlscan.action.SCANNER_RESULT</td><td>SCAN_BARCODE1,SCAN_BARCODE4</td></tr><tr><td>新大陆</td><td>NEWLAND</td><td>NLS-MT66</td><td></td><td>nlscan.action.SCANNER_RESULT</td><td>SCAN_BARCODE1,SCAN_BARCODE5</td></tr><tr><td>新大陆</td><td>NEWLAND</td><td>NLS-MT90</td><td></td><td>nlscan.action.SCANNER_RESULT</td><td>SCAN_BARCODE1,SCAN_BARCODE6</td></tr><tr><td>东大</td><td></td><td>AUTOID Q7</td><td></td><td>com.android.server.scannerservice.broadcast,com.android.server.aa</td><td>scannerdata</td></tr><tr><td>东大</td><td>AUTOID</td><td>msm8610</td><td></td><td>com.android.server.scannerservice.broadcast,com.android.server.aa</td><td>scannerdata</td></tr><tr><td>东大</td><td>AUTOID</td><td>PDT-900</td><td></td><td>com.android.server.scannerservice.broadcast,com.android.server.aa</td><td>scannerdata</td></tr><tr><td>东大</td><td>AUTOID</td><td>PDT-90P</td><td></td><td>com.android.server.scannerservice.broadcast,com.android.server.aa</td><td>scannerdata</td></tr><tr><td>东大</td><td>AUTOID</td><td>AUTOID9</td><td></td><td>com.android.server.scannerservice.broadcast,com.android.server.aa</td><td>scannerdata</td></tr><tr><td>东大</td><td>AUTOID</td><td>PDT-90F</td><td></td><td>com.android.server.scannerservice.broadcast,com.android.server.aa</td><td>scannerdata</td></tr><tr><td>东大</td><td>SEUIC</td><td>AUTOID Q9</td><td></td><td>com.android.server.scannerservice.broadcast,com.android.server.aa</td><td>scannerdata</td></tr><tr><td>东大</td><td>SEUIC</td><td>D310C</td><td></td><td>com.android.server.scannerservice.broadcast,com.android.server.aa</td><td>scannerdata</td></tr><tr><td>东大</td><td>SEUIC</td><td>CRUISE Ge</td><td></td><td>com.android.server.scannerservice.broadcast,com.android.server.aa</td><td>scannerdata</td></tr><tr><td>优博讯</td><td>qcom</td><td>Android Handheld Terminal</td><td></td><td>com.barcode.sendBroadcast</td><td>BARCODE</td></tr><tr><td>优博讯</td><td>qcom</td><td>CRUISE</td><td></td><td>com.android.server.scannerservice.broadcast,com.android.server.aa</td><td>scannerdata</td></tr><tr><td>优博讯</td><td>qcom</td><td>i6200S</td><td></td><td>android.intent.ACTION_DECODE_DATA</td><td>barcode_string,scannerdata</td></tr><tr><td>优博讯</td><td>qcom</td><td>i6200A</td><td></td><td>android.intent.ACTION_DECODE_DATA</td><td>barcode_string,scannerdata</td></tr><tr><td>优博讯</td><td>qcom</td><td>I6200A</td><td></td><td>android.intent.ACTION_DECODE_DATA</td><td>barcode_string,scannerdata</td></tr><tr><td>优博讯</td><td>qcom</td><td>i6200S</td><td>安卓4.1版本</td><td>urovo.rcv.message</td><td>barcode</td></tr><tr><td>优博讯</td><td>Urovo</td><td>DT40</td><td></td><td>android.intent.ACTION_DECODE_DATA</td><td>barcode_string</td></tr><tr><td>肖邦</td><td>SUPOIN</td><td>PDA</td><td></td><td>com.android.server.scannerservice.broadcast</td><td>scannerdata</td></tr><tr><td>肖邦</td><td>SUPOIN</td><td>SHT30</td><td></td><td>com.android.server.scannerservice.broadcast</td><td>scannerdata</td></tr><tr><td>肖邦</td><td>SUPOIN</td><td>SHT36</td><td></td><td>com.android.server.scannerservice.broadcast</td><td>scannerdata</td></tr><tr><td>霍尼韦尔</td><td>Honeywell</td><td>EDA</td><td></td><td>com.honeywell.scan.broadcast</td><td>data</td></tr><tr><td>捷宝</td><td>JB</td><td></td><td></td><td>com.jb.action.GET_SCANDATA</td><td>data</td></tr><tr><td>商米</td><td>SUNMI</td><td>L2</td><td></td><td>com.sunmi.scanner.ACTION_DATA_CODE_RECEIVED</td><td>data</td></tr><tr><td>商米</td><td>SUNMI</td><td>V2_PRO</td><td></td><td>com.sunmi.scanner.ACTION_DATA_CODE_RECEIVED</td><td>data</td></tr><tr><td>凯立</td><td>KAICOM,kaicom</td><td>W660</td><td></td><td>com.android.receive_scan_action</td><td>data</td></tr><tr><td>凯立</td><td>KAICOM,kaicom</td><td>K211</td><td></td><td>com.android.receive_scan_action</td><td>data</td></tr><tr><td>凯立</td><td>KAICOM,kaicom</td><td>K7</td><td></td><td>com.android.receive_scan_action</td><td>data</td></tr><tr><td>盈达</td><td>iData</td><td>K1</td><td></td><td>android.intent.action.SCANRESULT</td><td>value</td></tr><tr><td>盈达</td><td>Android</td><td></td><td></td><td>android.intent.action.SCANRESULT</td><td>value</td></tr><tr><td>思必拓</td><td>KT40 se4500</td><td>KT40 se4500</td><td></td><td>条码action&#x3D;com.se4500.onDecodeComplete,string数据key&#x3D;se4500,开启扫描action&#x3D;com.geomobile.se4500barcode,停止扫描action&#x3D;com.geomobile.se4500barcode.poweroff</td><td>se4500</td></tr><tr><td>得景</td><td></td><td></td><td></td><td>条码action&#x3D;techain.intent.action.DISPLAY_SCAN_RESULT,string数据key&#x3D;decode_data</td><td>decode_data</td></tr><tr><td>新石器</td><td></td><td></td><td></td><td>条码action&#x3D;techain.intent.action.DISPLAY_SCAN_RESULT,string数据key&#x3D;decode_data</td><td>decode_data</td></tr><tr><td>安能定制广播</td><td></td><td></td><td></td><td>条码action&#x3D;com.android.receive_scan_action,string数据key&#x3D;data</td><td>data</td></tr><tr><td>圆通定制广播</td><td></td><td></td><td></td><td>条码action&#x3D;com.yto.action.GET_SCANDATA,string数据key&#x3D;data,开启扫描action&#x3D;com.yto.action.SCAN_SWITCH,开启扫描传值int，key&#x3D;extra，值&#x3D;1,关闭扫描action&#x3D;com.yto.action.SCAN_SWITCH,关闭扫描传值int，key&#x3D;extra，值&#x3D;0</td><td>data</td></tr></tbody></table><br><h3 id="😊总结"><a href="#😊总结" class="headerlink" title="😊总结"></a>😊总结</h3><p>思路很简单，就是uniapp小程序启动时调用pda的广播函数，业务代码中直接获取对应pda返回的条码信息即可。</p><br><h3 id="😊来自小波的-bilibili-视频教程"><a href="#😊来自小波的-bilibili-视频教程" class="headerlink" title="😊来自小波的 bilibili 视频教程"></a>😊来自小波的 bilibili 视频教程</h3><br><h3 id="🙂相关参考资料链接"><a href="#🙂相关参考资料链接" class="headerlink" title="🙂相关参考资料链接"></a>🙂相关参考资料链接</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/echizao1839/article/details/115962599" target="_blank" rel="noopener external nofollow noreferrer">常见扫码枪广播名称（更多欢迎投稿）</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;扫条码通常直接调用uniapp的官方api接口拉起摄像头来实现，但是新出的平板型pda扫码枪中，操作员可能更习惯pda操作模</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="前端" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="https://blog.ganxb2.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="编程" scheme="https://blog.ganxb2.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="uniapp" scheme="https://blog.ganxb2.com/tags/uniapp/"/>
    
  </entry>
  
  <entry>
    <title>成都·三月·春</title>
    <link href="https://blog.ganxb2.com/8111.html"/>
    <id>https://blog.ganxb2.com/8111.html</id>
    <published>2024-03-30T13:10:18.000Z</published>
    <updated>2024-12-30T18:48:24.547Z</updated>
    
    <content type="html"><![CDATA[<p>《成都·三月·春》 </p><p>—— ganxb</p><p>金浪层层入云天<br>粉黛芸芸笑红颜<br>青丝条条醉清烟<br>白玉棠棠闹春眠</p><p>p1 by 在路上的李摸摸<br>p2 by 曼殊慢慢来<br>p3 by 我的田园 My Garden<br>p4 by 欢也零星</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://i0.hdslb.com/bfs/article/b7307ebab2c46425edca23fed897f24e347851888.jpg@1e_1c.webp" alt="油菜花"></div><div class="group-image-wrap"><img src="https://i0.hdslb.com/bfs/article/ce80a9d5f59f2b9cf4b31d8f792831f3347851888.jpg@1e_1c.webp" alt="4399电视塔柳树"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="https://i0.hdslb.com/bfs/article/922ad4c6c5eabd64866e38bb714263bb347851888.jpg@1e_1c.webp" alt="龙泉山桃花"></div><div class="group-image-wrap"><img src="https://i0.hdslb.com/bfs/article/596ffa0237b9f751a1e2df3df7fbc85d347851888.jpg@1e_1c.webp" alt="棠湖公园海棠花"></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《成都·三月·春》 &lt;/p&gt;
&lt;p&gt;—— ganxb&lt;/p&gt;
&lt;p&gt;金浪层层入云天&lt;br&gt;粉黛芸芸笑红颜&lt;br&gt;青丝条条醉清烟&lt;br&gt;白玉棠棠闹春眠&lt;/p&gt;
&lt;p&gt;p1 by 在路上的李摸摸&lt;br&gt;p2 by 曼殊慢慢来&lt;br&gt;p3 by 我的田园 My Garden&lt;br</summary>
      
    
    
    
    <category term="生活" scheme="https://blog.ganxb2.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="碎碎念" scheme="https://blog.ganxb2.com/categories/%E7%94%9F%E6%B4%BB/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
    <category term="廿壴(ganxb2)" scheme="https://blog.ganxb2.com/tags/%E5%BB%BF%E5%A3%B4-ganxb2/"/>
    
    <category term="小波生活随笔" scheme="https://blog.ganxb2.com/tags/%E5%B0%8F%E6%B3%A2%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    <category term="小波短文分享" scheme="https://blog.ganxb2.com/tags/%E5%B0%8F%E6%B3%A2%E7%9F%AD%E6%96%87%E5%88%86%E4%BA%AB/"/>
    
    <category term="原创诗歌" scheme="https://blog.ganxb2.com/tags/%E5%8E%9F%E5%88%9B%E8%AF%97%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title>我，心中有座山</title>
    <link href="https://blog.ganxb2.com/57133.html"/>
    <id>https://blog.ganxb2.com/57133.html</id>
    <published>2023-12-15T20:10:20.000Z</published>
    <updated>2024-12-30T18:48:24.546Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p>“而且你不觉得这些山的名字都很美丽吗？”坐在旅馆天台边，你望着傍晚夜色中的群山说。</p><p>“米拉山，色季拉山，安久拉山，业拉山，东达山，剪子弯山，高尔寺山，折多山……”</p><p>“珠穆朗玛峰，藏语意为圣母。”</p><p>…</p><p>“所有远行的人，都浪漫得要命啊。”他略微仰头望向远方，拉扯嗓子提高音量说。</p><br><p><img src="https://pic.rmb.bdstatic.com/bjh/material/231215/d49161ea0fa806c396e5c32daf3eff308913.jpeg" alt="贡嘎群山"></p><p>拍摄于2020年5月2日 华尖山 by ganxb</p><br><p>你双手环抱胸前，瑟瑟发抖地站在营地帐篷外，远处白茫茫的天空下，云雾遂着强烈的雪风似海浪翻滚，淹没若隐若现或白或黑露出尖尖头的群峰，山中的天气变幻无常，眼下骤然是蓬莱仙境般的景象。</p><p>经过一个月的骑行，晒成棕色皮肤的昱瑾送来热水和一些补足能量的干货。</p><p>“看，下雪了。”你说。</p><p>近夜色的一座座山峰拥有足以给人瞠目咂舌的海拔数字，但它们现在却太容易消失在层层扬起的波涛之中，那些来自全球各地的先驱者总会错过某些时刻，然后不得不一次次攀登。</p><p>我们寄居的这个星球只是宇宙中小小尘埃，其广大近乎超越了人类的想象。但是没关系，最后，一定会被我们在地图上精准地标注出位置。</p><p>头顶的银河渐渐闪亮。</p><p>你曾仰慕西藏的人们，他们的山是圣山，他们的湖是神湖。他们信仰笃定，感恩自然，生命始于此，也终于此，大自然给予成长，最终天葬归还大自然。他们常年不断虔诚祈祷，吟诵佛经，绕白塔，转圣山，一日，一年，十年，半生，一生，一声声木板合击声中去摸索探寻命运的面目。</p><br><p>感谢落在我们身上的雨水，感谢拂过我们面容的逆风，感谢阻止我们前行的冰雪，更感谢阳光，愿星空指引我们前行，永永远远。</p><p>星空下的群山剪影，犹如众神俯瞰凡人，它们的高大与无情是一样的，就像我们无论身处哪个国度、哪个时代，摸索探寻的心是一样的。</p><p>褪下衣裤的动作幅度过大时，身体疲劳过度的各处肌肉和腿上的“月牙”传来的疼痛汇聚脑海，你会犹如被点穴般定格。伤口正在愈合，这是在东达山差点摔下悬崖留下的隐患，左膝盖上去点点的大腿部位被牙盘刺中。</p><p>伫立在崖边惊魂未定的你，死亡的恐惧笼罩下，你这才意识到，原来你并不是真正的无畏无惧，反而是怕死的要命啊。酒精喷雾加跌打药酒，住宿时你发现伤口后的处理，骑行旅途中它不断裂开，合拢，你抚摸来自身体自我防御功能生成的硬硬盔甲，已经结了疤。</p><p>从村镇离开进入山区开始，手机的信号就时好时坏，现在也一样，未能收到任何信号，你小心翼翼地缩进被窝。笔触和宣纸的摩擦声，没有电子设备的辅助，笔和纸是旅途中最好的记录工具。</p><p>熟睡的鼾声，一天的身心俱疲，被窝中，那颗心才稍显安稳。</p><p>窃窃私语，每天都是全新的，每天它都会刷新你对世界的认知，每天你都憋着一肚子的话语要与人分享。</p><br><p>帐篷发出噗噗的声响，急促的夜风掠过，斗转星移，静夜下，犹如野兽在外虎视眈眈，嗷嗷叫嚷。太多不确定的狂欢般的这一年，斩断了过去的你。曾经的你，呆足整整二十年的广汉，都未曾踏入过松林山半步，深谙广汉的一切，却又甚似陌生。</p><p>于我，穴居者攫取了先知</p><p>佩带花环的阿波罗</p><p>向亚伯拉罕的聋耳边吟唱</p><p>我心里有猛虎在细嗅蔷薇</p><p>审视我的心灵吧，亲爱的朋友，你应战栗</p><p>因为那里才是你本来的面目。</p><br><p>二十六年过去，回望这些年，你迷惘，思索。这一年，你从趋于抛物线上顶点的生活里起身离开，像除下一件不合身的外套，希望在远行中找寻归属自己答案的人。</p><p>佳话可永传世人，但人生转瞬到头。熄灭和黯淡都是必然，但结束到来前没有努力尝试一次，终究会觉得遗憾。这一生，其实与承诺与安定并没有必然的关联，这一生，何其漫长，我们如若足够谨慎，便不应当预设你无从了解的事物，你想用这一生，摸索探寻这个世界的面目，并尝试了解自己。</p><p>在你的人生里，有些东西来得早，比如自由，比如远方，比如孤独。有些又来得迟，比如爱情，比如安稳，比如胆怯。或许该庆幸，是这样的顺序。</p><p>这个时代诞生了“工作”这样一个怪物。所以，日本作家泽木耕太郎说：“在固定的地方和固定的人生活，让我觉得无聊，26岁之前要到国外走一走。”这是近20年前的事了。</p><p>唐三藏开始西游的年纪是26岁，这是1300多年前的事情了，这是2012年11月5日你QQ空间发的说说。</p><br><p>此刻，在内地，一圈一圈形式蛛网的成都平原，公车从始点出发再绕回始点，基友依然窝在家中撸着游戏，万家灯火熄灭后又燃亮，周而复始。</p><p>厦门岛之与鼓浪屿渡口，匆匆前去或离开的游客蜂拥而至兴奋或焦急，等待20分钟一班的轮渡。</p><p>坐拥鹏城第一峰的梧桐山如长者无声无息俯视这座年轻高速运转虹霓斑斓的电子城市-深圳。</p><p>在山区，营地往南约四公里处是标志旅途终点的纪念碑，曾经的暴风雪，冰雹，雷雨，逆风，上坡，下坡，蓝天，白云，绿湖，高山，冰川，分离，重聚，兴奋，失落，恐惧，孤独，疲惫，恬然，释怀，都将圆满的画上句号。</p><p>在漫长遥远的骑行旅途中偶尔想起自己在广汉的家，即便是在海拔带来的高反作用下，你还是清楚知道客厅的样子。</p><p>一张沙发，一只台灯，一张白色镂空多边形的桌布装饰的木质食品柜，数张用大块玻璃压着早已变了色对不上记忆的老照片，上方的盆栽植物保持在死亡和生存的边缘，漆黑的空间被昏黄的灯光显出轮廓，露出一种介乎等待与放弃之间的沉静表情。</p><p>此刻的你又为什么会在这里呢？一片中国最南的山区，一座全世界第一高峰的山脚下？</p><p>因为你想看看世界的壮阔和荒凉，你想探索未知和了解自己，你想用精准的语句书写生而为人的寡淡不堪，你想用最温柔的语气讲述陷入爱河的沉醉迷失，你想在典当灵魂之后给予自己一帖疗伤药剂。</p><p>你想说的不仅仅是摸索探寻时的孤独或疲惫，你想说的还有困苦迷惘之中看见的自身，意志的坚韧，本能的不可抑制，相逢的无法预计，景色的美。</p><br><p>离开拉萨的那天晚上，好友昱瑾过来道别。他跳上台阶，挨着你坐在天台边。 </p><p>“我一直很好奇你此行的目的。”他说。</p><p>“我想找寻属于自己的答案。”你顺手递给他一罐啤酒回答说。 </p><p>“但…有那么多地方可以去，为什么选择骑行318到珠峰？”他说完咕哝咕哝几口把啤酒下肚。 </p><p>“珠峰不过是拟定的其中一个目标啦，为了这样的目标我们都会经历不同的过程，或坐车，或徒步，或骑行。而在不同的过程中悉数上演的分离、重聚、开心、失落、恐惧、疲惫、孤独、释怀，不正是漫漫人生所需要的吗？只有我们坚定了自己的心才能享受生命的本质。”</p><p>“而且你不觉得这些山的名字都很美丽吗？”坐在旅馆天台边，你望着傍晚夜色中的群山说。</p><p>“米拉山，色季拉山，安久拉山，业拉山，东达山，剪子弯山，高尔寺山，折多山……”</p><p>“珠穆朗玛峰，藏语意为圣母。”</p><p>“《圣经》路加福音，天使对玛丽亚说，你将怀孕生子，并要给他起名叫耶稣，他将是伟大的，并被称为至高者的儿子……那要诞生的圣者，将称为天主的儿子。”</p><p>“所有远行的人，都浪漫得要命啊。”他略微仰头望向远方，拉扯嗓子提高音量说。</p><p>然后便跳下台阶，转身后在空中挥动了几下右手，悻悻离去。</p><br>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;“而且你不觉得这些山的名字都很美丽吗？”坐在旅馆天台边，你望着傍晚夜色中的群山说。&lt;/p&gt;
&lt;p&gt;“米拉山，色季拉山，安久拉</summary>
      
    
    
    
    <category term="短文" scheme="https://blog.ganxb2.com/categories/%E7%9F%AD%E6%96%87/"/>
    
    
    <category term="廿壴(ganxb2)" scheme="https://blog.ganxb2.com/tags/%E5%BB%BF%E5%A3%B4-ganxb2/"/>
    
    <category term="励志感悟短文" scheme="https://blog.ganxb2.com/tags/%E5%8A%B1%E5%BF%97%E6%84%9F%E6%82%9F%E7%9F%AD%E6%96%87/"/>
    
    <category term="小波短文分享" scheme="https://blog.ganxb2.com/tags/%E5%B0%8F%E6%B3%A2%E7%9F%AD%E6%96%87%E5%88%86%E4%BA%AB/"/>
    
    <category term="小波分享圈子" scheme="https://blog.ganxb2.com/tags/%E5%B0%8F%E6%B3%A2%E5%88%86%E4%BA%AB%E5%9C%88%E5%AD%90/"/>
    
    <category term="廿壴博客" scheme="https://blog.ganxb2.com/tags/%E5%BB%BF%E5%A3%B4%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>博客引入B站的嵌入代码分享视频会自动播放怎么办</title>
    <link href="https://blog.ganxb2.com/27860.html"/>
    <id>https://blog.ganxb2.com/27860.html</id>
    <published>2023-12-06T20:38:11.000Z</published>
    <updated>2024-12-30T18:48:24.544Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p>廿壴博客的龙门阵页面，小波发说说一般会分享一些视频，但是前段时间B站的嵌入视频突然会自动播放，每次打开页面都会自动播放，而且是同时多个，这就很尴尬了，不仅费流量，还极大的降低了博客的用户体验。</p><p>遂问了一下度娘，查看相关文章找到了答案。</p><p>因为现在b站更新了部分代码规则，但是分享功能中又没把对应规则需要的参数给加上导致。</p><p>揪其根本是因为去年浏览器升级了一项功能，禁止网站的视频或者音乐自动播放。</p><p>因为很多垃圾网站的广告以前用这样的手段导致了上网体验很差，所以浏览器对此作出了相应规则限制。</p><br><h3 id="🤔解决办法"><a href="#🤔解决办法" class="headerlink" title="🤔解决办法"></a>🤔解决办法</h3><p>禁止B站分享视频自动播放，只需要在复制到博客的代码中找到 <code>src</code> 链接的尾部，添加参数 <code>&amp;autoplay=0</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">src=<span class="hljs-string">&quot;//player.bilibili.com/player.html?aid=774740342&amp;bvid=BV1814y1V7g2&amp;cid=881475245&amp;page=1&amp;autoplay=0&quot;</span> <br></code></pre></td></tr></table></figure><p>当然如果需要自动播放则把参数改成 <code>&amp;autoplay=1</code></p><br><h3 id="😚其他扩展"><a href="#😚其他扩展" class="headerlink" title="😚其他扩展"></a>😚其他扩展</h3><ol><li><p><strong>指定位置开始播放</strong></p><p>在链接后面加上 <code>&amp;t=100</code>, &amp;t&#x3D;多少秒，规则 1m &#x3D; 60s 自己换算一下即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">src=<span class="hljs-string">&quot;//player.bilibili.com/player.html?aid=774740342&amp;bvid=BV1814y1V7g2&amp;cid=881475245&amp;page=1&amp;autoplay=1&amp;t=100&quot;</span> <br></code></pre></td></tr></table></figure></li></ol><br><h3 id="🙂参考资料链接"><a href="#🙂参考资料链接" class="headerlink" title="🙂参考资料链接"></a>🙂参考资料链接</h3><br><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.87com.com/tag/bilibili%E5%B5%8C%E5%85%A5%E4%BB%A3%E7%A0%81%E7%A6%81%E6%AD%A2%E8%87%AA%E5%8A%A8%E6%92%AD%E6%94%BE" target="_blank" rel="noopener external nofollow noreferrer">bilibili嵌入代码禁止自动播放</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;廿壴博客的龙门阵页面，小波发说说一般会分享一些视频，但是前段时间B站的嵌入视频突然会自动播放，每次打开页面都会自动播放，而且</summary>
      
    
    
    
    <category term="软件应用" scheme="https://blog.ganxb2.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
    <category term="常见电脑问题" scheme="https://blog.ganxb2.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/%E5%B8%B8%E8%A7%81%E7%94%B5%E8%84%91%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="windows" scheme="https://blog.ganxb2.com/tags/windows/"/>
    
    <category term="常见电脑问题" scheme="https://blog.ganxb2.com/tags/%E5%B8%B8%E8%A7%81%E7%94%B5%E8%84%91%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>vue-cli4.5&amp;&amp;webpack4升级vite4全面总结</title>
    <link href="https://blog.ganxb2.com/45497.html"/>
    <id>https://blog.ganxb2.com/45497.html</id>
    <published>2023-10-27T20:53:39.000Z</published>
    <updated>2024-12-30T18:48:24.548Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p><strong>vite是什么？</strong></p><p>js 早期只能 script 的属性 src 链接，无法像现在工程化依赖打包插件实现 import 模块化，所以在奔向 js 原生完成工程化构建的伟大航路中，先后有 <code>requirejs</code>, <code>webpack</code>等构建工具的出现，es6 后 js 增加了 <code>type=&quot;module&quot;</code>, vite 就是基于此属性扩展开发，相对于前面的构建工具来讲， vite 确实带来更加的效率，同时在精简易上手的基础上，也能完美满足更多的扩展性，属实算是当前的构建工具一哥。</p><p>扩展阅读可阅读 <a href="https://cn.vitejs.dev/" target="_blank" rel="noopener external nofollow noreferrer">vite 官网</a>，或者阅读 es6 的 <code>type=&quot;module&quot;</code> <a href="https://esbuild.github.io/content-types/#direct-eval" target="_blank" rel="noopener external nofollow noreferrer">官方文档</a></p><br><p><strong>为什么使用vite？</strong></p><ol><li>快！快！快！各种快就完事~</li><li>相对webpack和其他构建工具来讲，小波个人的体验各种配置和扩展插件更易上手，更好配置(当然需要再学习一个插件库 <a href="https://cn.rollupjs.org/configuration-options/" target="_blank" rel="noopener external nofollow noreferrer"><code>rollupjs</code></a>)</li><li>方便后续升级 ts 和项目的更深入优化</li></ol><br><h3 id="😦vite升级思路"><a href="#😦vite升级思路" class="headerlink" title="😦vite升级思路"></a>😦vite升级思路</h3><ol><li>直接 vite 脚手架建个初始项目，再把原项目 src 文件夹等相关文件拷贝进去</li><li>基于现有项目直接升级(本文的升级步骤基于此思路)</li></ol><br><h3 id="🧐工作项目环境"><a href="#🧐工作项目环境" class="headerlink" title="🧐工作项目环境"></a>🧐工作项目环境</h3><ul><li>vue-cli 4.5</li><li>webpack 4.4</li><li>vue 3.2</li><li>ant design vue 2.x</li></ul><br><h3 id="🤔步骤思路总结"><a href="#🤔步骤思路总结" class="headerlink" title="🤔步骤思路总结"></a>🤔步骤思路总结</h3><ol><li>删除 vue-cli, babel, webpack 相关依赖库和文件</li><li>升级vue3, @vue&#x2F;compiler-sfc, eslintrc, prettier</li><li>安装 vite, 移动 index.html, 配置 vite.config.js</li><li>针对项目代码逐一修复出现的bug</li><li>打包优化(to do…)</li></ol><br><h3 id="😚vue-cli4-5-amp-amp-webpack4-升级-vite4-步骤详解"><a href="#😚vue-cli4-5-amp-amp-webpack4-升级-vite4-步骤详解" class="headerlink" title="😚vue-cli4.5 &amp;&amp; webpack4 升级 vite4 步骤详解"></a>😚vue-cli4.5 &amp;&amp; webpack4 升级 vite4 步骤详解</h3><ol><li><p><code>package.json</code> 删除 vue-cli, babel, webpack  相应配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 删除</span><br><span class="hljs-string">&quot;@vue/cli-plugin-babel&quot;</span>: <span class="hljs-string">&quot;~4.5.0&quot;</span>,<br><span class="hljs-string">&quot;@vue/cli-plugin-eslint&quot;</span>: <span class="hljs-string">&quot;~4.5.0&quot;</span>,<br><span class="hljs-string">&quot;@vue/cli-plugin-router&quot;</span>: <span class="hljs-string">&quot;~4.5.0&quot;</span>,<br><span class="hljs-string">&quot;@vue/cli-plugin-vuex&quot;</span>: <span class="hljs-string">&quot;~4.5.0&quot;</span>,<br><span class="hljs-string">&quot;@vue/cli-service&quot;</span>: <span class="hljs-string">&quot;~4.5.0&quot;</span>,<br><span class="hljs-string">&quot;webpack&quot;</span>: <span class="hljs-string">&quot;^4.46.0&quot;</span><br><br><span class="hljs-string">&quot;serve&quot;</span>: <span class="hljs-string">&quot;node --max_old_space_size=4096 node_modules/@vue/cli-service/bin/vue-cli-service.js serve&quot;</span>,<br><span class="hljs-string">&quot;build&quot;</span>: <span class="hljs-string">&quot;node --max_old_space_size=4096 node_modules/@vue/cli-service/bin/vue-cli-service.js build&quot;</span>,<br><br><span class="hljs-string">&quot;babel-eslint&quot;</span>: <span class="hljs-string">&quot;^10.1.0&quot;</span>,<br><span class="hljs-string">&quot;babel-plugin-import&quot;</span>: <span class="hljs-string">&quot;^1.13.3&quot;</span>,<br></code></pre></td></tr></table></figure></li><li><p>删除 <code>babel.config.js</code>, <code>vue.config.js</code>,  <code>jsconfig.json</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// jsconfig.json</span><br>&#123;<br>  <span class="hljs-string">&quot;compilerOptions&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;experimentalDecorators&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&quot;baseUrl&quot;</span>: <span class="hljs-string">&quot;./&quot;</span>,<br>    <span class="hljs-string">&quot;paths&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;@/*&quot;</span>: [<span class="hljs-string">&quot;src/*&quot;</span>],<br>      <span class="hljs-string">&quot;~/*&quot;</span>: [<span class="hljs-string">&quot;src/assets/*&quot;</span>]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>删除 <code>.eslintrc.js</code> 的 babel 配置项，把 es6 改成 es2021</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">parserOptions</span>: &#123;<br>  <span class="hljs-comment">// parser: &#x27;babel-eslint&#x27;</span><br>&#125;,<br><span class="hljs-attr">env</span>: &#123;<br>  <span class="hljs-attr">node</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-comment">// es6: true</span><br>  <span class="hljs-attr">es2021</span>: <span class="hljs-literal">true</span><br>&#125;,  <br></code></pre></td></tr></table></figure></li><li><p>升级 vue3 到最新版本( vite 需要最新版本),  升级 eslint, prettier（ jsx 无法格式化需要升级这两个依赖）</p></li></ol>   <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// vue版本过低先升级vue</span><br>pnpm add vue<br>pnpm add @vue/compiler-sfc -D<br><br><span class="hljs-comment">// eslint 代码格式化</span><br>pnpm add eslint@<span class="hljs-number">8</span> eslint-plugin-vue@<span class="hljs-number">8</span> -D<br>pnpm add prettier eslint-plugin-prettier @vue/eslint-config-prettier -D<br><br><span class="hljs-comment">// 安装 Conflicting peer dependency: vue@3.3.4</span><br>pnpm add @vitejs/plugin-vue vite -D<br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-info">提示</span></p><p>升级步骤是基于 pnpm 命令安装，提前全局安装一下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install pnpm -g<br></code></pre></td></tr></table></figure></blockquote><ol start="5"><li>创建 <code>vite.config.js</code> 并配置</li></ol>   <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineConfig &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite&#x27;</span><br><span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@vitejs/plugin-vue&#x27;</span><br>​<br><span class="hljs-comment">// https://vitejs.dev/config/</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">defineConfig</span>(&#123;<br>  <span class="hljs-attr">plugins</span>: [<span class="hljs-title function_">vue</span>()],<br>  <span class="hljs-attr">resolve</span>: &#123;<br>    <span class="hljs-attr">alias</span>: &#123;<br>      <span class="hljs-string">&quot;@&quot;</span>: path.<span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&quot;./src&quot;</span>),<br>    &#125;,<br>  &#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><ol start="6"><li><p>移动 <code>index.html</code> 到根目录并修改相应配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;!--remove--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>&lt;%= htmlWebpackPlugin.options.title %&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span> <br>&lt;!--add--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>site Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br>​<br><span class="hljs-comment">//...</span><br>&lt;!--remove--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>We&#x27;re sorry but &lt;%= htmlWebpackPlugin.options.title %&gt; doesn&#x27;t work properly without JavaScript enabled. Please enable it to continue.<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span></span><br>&lt;!--add--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>We&#x27;re sorry but this app doesn&#x27;t work properly without JavaScript enabled. Please enable it to continue.<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span></span><br>  <br>&lt;!--remove--&gt;<br>&lt;link rel=&quot;icon&quot; href=&quot;&lt;%= BASE_URL %&gt;favicon.ico&quot;&gt;<br>&lt;!--add--&gt;<br>&lt;link rel=&quot;icon&quot; href=&quot;/favicon.ico&quot;&gt;<br>  <br>&lt;script type=&quot;module&quot; src=&quot;/src/main.js&quot;&gt;&lt;/script&gt;<br></code></pre></td></tr></table></figure></li><li><p><code>package.json</code> 修改脚本命令</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-string">&quot;dev&quot;</span>: <span class="hljs-string">&quot;vite&quot;</span>,<br><span class="hljs-string">&quot;build&quot;</span>: <span class="hljs-string">&quot;vite build&quot;</span>,<br><span class="hljs-string">&quot;serve&quot;</span>: <span class="hljs-string">&quot;vite preview&quot;</span>,<br><span class="hljs-string">&quot;lint&quot;</span>: <span class="hljs-string">&quot;eslint --ext .js,.vue --ignore-path .gitignore --fix src&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>更新环境变量</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js">.<span class="hljs-property">env</span>                # loaded <span class="hljs-keyword">in</span> all cases<br>.<span class="hljs-property">env</span>.<span class="hljs-property">local</span>          # loaded <span class="hljs-keyword">in</span> all cases, ignored by git<br>.<span class="hljs-property">env</span>.[mode]         # only loaded <span class="hljs-keyword">in</span> specified mode<br>.<span class="hljs-property">env</span>.[mode].<span class="hljs-property">local</span>   # only loaded <span class="hljs-keyword">in</span> specified mode, ignored by git<br><span class="hljs-comment">// 文件名可以不变，但是，您不能再访问流程变量上的环境变量。 相反，它们可以在 import.meta.env 上找到。</span><br><span class="hljs-comment">// old</span><br><span class="hljs-attr">base</span>: process.<span class="hljs-property">env</span>.<span class="hljs-property">BASE_URL</span>, <br><span class="hljs-comment">// new</span><br><span class="hljs-attr">base</span>: <span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">env</span>.<span class="hljs-property">BASE_URL</span>,<br></code></pre></td></tr></table></figure><p>用于使声明客户端暴露的环境变量更明显的 <code>VUE_APP_</code> 前缀已更改为 <code>VITE_</code>，因此如果您有任何此类环境变量，则必须相应地更新它们。</p></li><li><p><code>vite.config.js</code>  配置 sfc 导入添加 .vue 扩展名</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">...<br><span class="hljs-attr">resolve</span>: &#123;<br>  <span class="hljs-attr">extensions</span>: [<span class="hljs-string">&#x27;.mjs&#x27;</span>, <span class="hljs-string">&#x27;.js&#x27;</span>, <span class="hljs-string">&#x27;.ts&#x27;</span>, <span class="hljs-string">&#x27;.jsx&#x27;</span>, <span class="hljs-string">&#x27;.tsx&#x27;</span>, <span class="hljs-string">&#x27;.json&#x27;</span>, <span class="hljs-string">&#x27;.vue&#x27;</span>],<br>  <span class="hljs-comment">//...</span><br>&#125;,<br></code></pre></td></tr></table></figure></li><li><p>清理 <code>webpack</code> 魔法注释</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/* webpackChunkName: &quot;about&quot; */</span><br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-info">提示</span></p><p>vite 会自动根据文件夹进行按需分包加载，打包后的文件名格式 <code>x+hash.js</code>, 所以业务文件夹的 <code>x.vue</code> 尽量不要用 <code>index.vue</code></p></blockquote></li><li><p>jsx 报错</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 1. 安装</span><br>pnpm add @vitejs/plugin-vue-jsx -D<br><br><span class="hljs-comment">// 2. 配置 vite.config.js</span><br><span class="hljs-keyword">import</span> vueJsx <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@vitejs/plugin-vue-jsx&#x27;</span><br>...<br><span class="hljs-attr">resolve</span>: &#123;&#125;,<br><span class="hljs-attr">esbuild</span>: &#123; <span class="hljs-attr">loader</span>: &#123; <span class="hljs-string">&#x27;.js&#x27;</span>: <span class="hljs-string">&#x27;.jsx&#x27;</span> &#125; &#125;<br><br><span class="hljs-comment">// 3. .vue 文件要把 lang=&quot;jsx&quot; 补上, .js 文件要改成 .jsx</span><br></code></pre></td></tr></table></figure></li><li><p>Error: The following dependencies are imported but could not be resolved: qs</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 缺少依赖库 安装 qs</span><br>pnpm add qs<br></code></pre></td></tr></table></figure></li><li><p>Internal server error: Unable to parse HTML; parse5 error code end-tag-without-matching-open-element</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 因为ant的导入样式 ~ 问题，在配置我增加了 &#123; find: /^~/, replacement: &#x27;&#x27;&#125; 导致无法找到 .less 文件，</span><br><span class="hljs-comment">// 直接把 ~ 去掉</span><br><span class="hljs-comment">// old</span><br>@<span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;~ant-design-vue/dist/antd.less&#x27;</span>;<br><span class="hljs-comment">// new</span><br>@<span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;ant-design-vue/dist/antd.less&#x27;</span>;<br></code></pre></td></tr></table></figure></li><li><p>Cannot read properties of undefined (reading ‘_android’)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">pnpm add qrcodejs2-fix<br>pnpm remove qrcodejs2<br><br><span class="hljs-comment">//原来导入的地方把 名字 改成 下面代码</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">QRCode</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;qrcodejs2-fix&#x27;</span><br><br><span class="hljs-comment">// 如果出现一直报错原来的 qrcodejs2,删除node_modules包</span><br></code></pre></td></tr></table></figure><p>类似问题参考文章</p><p><a href="https://github.com/davidshimjs/qrcodejs/issues/113" target="_blank" rel="noopener external nofollow noreferrer">github上iss</a></p><p><a href="https://blog.csdn.net/cainiao1412/article/details/124421475" target="_blank" rel="noopener external nofollow noreferrer">QRCode undefined (reading ‘_android‘)</a></p></li><li><p>图片或者导入依赖库原来采用了 webpack 的 require , 报错 <code>require is not defined</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// vite 返回静态资源图片 name = x.png/x.jpg </span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">getImageUrl</span> = name =&gt; &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title function_">URL</span>(<span class="hljs-string">`../../assets/image/<span class="hljs-subst">$&#123;name&#125;</span>`</span>, <span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">url</span>).<span class="hljs-property">href</span><br>&#125;<br><br><span class="hljs-comment">// 如果是 require 的依赖库 改成以下，注意要用 await </span><br><span class="hljs-comment">// old</span><br><span class="hljs-keyword">let</span> elementResizeDetectorMaker = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;element-resize-detector&#x27;</span>)<br><span class="hljs-comment">// new</span><br><span class="hljs-keyword">let</span> elementResizeDetectorMaker = <span class="hljs-keyword">await</span> <span class="hljs-title function_">import</span>(<span class="hljs-string">&#x27;element-resize-detector&#x27;</span>)<br><span class="hljs-keyword">let</span> erd = elementResizeDetectorMaker.<span class="hljs-title function_">default</span>()<br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-warning">注意：</span></p><ol><li><code>new URL(dep, import.meta.url)</code>  <code>dep</code> 无法使用 别名 @ 来描述路径</li><li><code>new URL(dep, import.meta.url)</code>  如果抽离为公共方法， <code>dep</code> 中路径不能是完整一个变量传入，变量只能是路径结尾的图片类型</li></ol></blockquote><p>类似问题参考文章</p><p><a href="https://zhuanlan.zhihu.com/p/399939287" target="_blank" rel="noopener external nofollow noreferrer">Vite 踩坑 —— require is not defined</a></p></li><li><p>ReferenceError: Cannot access ‘store’ before initialization   vuex，This could be due to syntax errors or importing non-existent modules</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 出现类似这样报错，绝大部分可能性就是代码中出现了循环导入</span><br><span class="hljs-comment">// eg: a import b, b import c, c import a</span><br><br><span class="hljs-comment">// 只能自己跟着报错找到可能出现循环导入的文件然后检查代码</span><br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-info">提示</span></p><img src="https://iulian-radu-at.gallerycdn.vsassets.io/extensions/iulian-radu-at/find-unused-exports/2.1.1/1695417629858/Microsoft.VisualStudio.Services.Icons.Default" alt="Find unused exports" style="zoom: 33%;" /><p>小波推荐检查文件是否循环导入安装 vscode 插件 <strong>find unused exports</strong></p><p>使用说明：</p><p>vscode左侧栏会有个相同图标，只要打开文件，切到面板就会自动分析文件的导入导出情况</p><p><strong>CIRCULAR IMPORTS</strong> 即是循环导入提示区域</p></blockquote><br><p>类似问题参考文章 </p><p><a href="https://github.com/vitejs/vite/issues/3033" target="_blank" rel="noopener external nofollow noreferrer">github的iss</a></p><p> <a href="https://segmentfault.com/q/1010000042108814?bd_source_light=4746641" target="_blank" rel="noopener external nofollow noreferrer">Vite HMR error: Cannot access ‘…’ before initialization ？</a></p><p><a href="https://zhuanlan.zhihu.com/p/447969990" target="_blank" rel="noopener external nofollow noreferrer">pinia&#x2F;vuex在封装请求的文件中使用报错的问题</a></p><p><a href="https://zhuanlan.zhihu.com/p/589463077" target="_blank" rel="noopener external nofollow noreferrer">vue3+vite热更新遇到的问题HMR error: Cannot access ‘…’ before initialization</a></p></li><li><p>You are running the esm-bundler build of vue-i18n. It is recommended to configure your bundler to explicitly replace feature flag globals with boolean literals to get proper tree-shaking in the final bundle</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 多语言报错  </span><br><span class="hljs-comment">// vite.config.js</span><br><span class="hljs-attr">alias</span>: &#123; ..., <span class="hljs-string">&#x27;vue-i18n&#x27;</span>: <span class="hljs-string">&#x27;vue-i18n/dist/vue-i18n.cjs.js&#x27;</span> &#125;,<br></code></pre></td></tr></table></figure></li><li><p>ant design vue 没导出的组件去掉，未使用的函数要删除</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">eg</span>:  moment  invalid <br></code></pre></td></tr></table></figure></li><li><p>provide 的定义函数放到调用执行前面 </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">理解js上下文执行顺序<br></code></pre></td></tr></table></figure></li><li><p>Added non-passive event listener to a scroll-blocking ‘wheel’ event. Consider marking event handler as ‘passive’ to make the page more responsive.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 缺少对应的库，提示什么就安装什么</span><br></code></pre></td></tr></table></figure></li><li><p>module.exports  报错</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;&#125;<br>要改成 esmodule 模式  =&gt;  <span class="hljs-keyword">export</span> &#123;&#125;<br></code></pre></td></tr></table></figure><p>感兴趣的童鞋可以深入阅读  commonjs 规范(module.exports)，es6 规范(export [default])，amd 规范(require)，这三者的区别</p></li><li><p>多语言报错 Not available in legacy mode</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> i18n = <span class="hljs-title function_">createI18n</span>(&#123;<br>  <span class="hljs-comment">// ...</span><br>  <span class="hljs-comment">// 设为true或者不设置</span><br>  <span class="hljs-attr">legacy</span>: <span class="hljs-literal">true</span>, <br>  <span class="hljs-attr">allowComposition</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-comment">// ...</span><br>&#125;)<br></code></pre></td></tr></table></figure></li><li><p>日期插件出现部分中文，部分英文</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;moment/dist/locale/zh-cn&#x27;</span><br><span class="hljs-comment">// 不仅需要调用，上面也必须导入 </span><br>moment.<span class="hljs-title function_">locale</span>(locale)<br></code></pre></td></tr></table></figure></li><li><p>[unplugin-vue-components] component “xx“ has naming conflicts with other components, ignored.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 配置 vite.config.js</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Components</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;unplugin-vue-components/vite&#x27;</span><br>...    <br><span class="hljs-attr">plugins</span>: [<br>    <span class="hljs-title class_">Components</span>(&#123;<br>      <span class="hljs-attr">resolvers</span>: [<span class="hljs-title class_">IconsResolver</span>()],<br>      <span class="hljs-comment">// 此属性解决报错</span><br>      <span class="hljs-attr">directoryAsNamespace</span>: <span class="hljs-literal">true</span><br>    &#125;),<br>]<br></code></pre></td></tr></table></figure></li><li><p>class关于Cannot access XXX before initialization的报错</p><p>还是循环导入的锅，开发时热更新报上面的错误提示，小波最后只能强制采用刷新机制来处理，可以自己+个判断只对有问题的页面强制刷新</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 配置 vite.config.js</span><br><span class="hljs-attr">plugins</span>: [ <br>    ...<br>    <span class="hljs-comment">// 强制刷新</span><br>    &#123;<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;singleHMR&#x27;</span>,<br>      <span class="hljs-title function_">handleHotUpdate</span>(<span class="hljs-params">&#123; modules &#125;</span>) &#123;<br>        modules.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">m</span>) =&gt;</span> &#123;<br>          m.<span class="hljs-property">importedModules</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>()<br>          m.<span class="hljs-property">importers</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>()<br>        &#125;)<br>    <br>        <span class="hljs-keyword">return</span> modules<br>      &#125;<br>    &#125;<br>]<br></code></pre></td></tr></table></figure></li></ol><br><p>以上步骤是小波升级公司项目遇到的相关问题，希望为同样要把前端项目升级成 vite 构建的童鞋提供点点参考。</p><p>以下是一份小波升级后完整的 <code>vite.config.js</code>  配置，包含了分包等优化</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// vite.config.js</span><br><span class="hljs-keyword">import</span> &#123; defineConfig, splitVendorChunkPlugin &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite&#x27;</span><br><span class="hljs-keyword">import</span> path <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;path&#x27;</span><br><br><span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@vitejs/plugin-vue&#x27;</span><br><span class="hljs-keyword">import</span> vueJsx <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@vitejs/plugin-vue-jsx&#x27;</span><br><br><span class="hljs-comment">// postcss相关插件</span><br><span class="hljs-keyword">import</span> postcssImport <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;postcss-import&#x27;</span><br><span class="hljs-keyword">import</span> autoprefixer <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;autoprefixer&#x27;</span><br><span class="hljs-keyword">import</span> tailwindcss <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;tailwindcss&#x27;</span><br><br><span class="hljs-comment">// 打包输出分析</span><br><span class="hljs-keyword">import</span> &#123; visualizer &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;rollup-plugin-visualizer&#x27;</span><br><span class="hljs-comment">// 文件压缩 gzip</span><br><span class="hljs-keyword">import</span> viteCompression <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite-plugin-compression&#x27;</span><br><span class="hljs-comment">// 图片压缩</span><br><span class="hljs-comment">// import viteImagemin from &#x27;vite-plugin-imagemin&#x27;</span><br><span class="hljs-comment">// 省掉导入库的hooks eg: 无需导入 vue -&gt; reactive 即可使用 reactive</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">AutoImport</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;unplugin-auto-import/vite&#x27;</span><br><br><span class="hljs-comment">// 转外链</span><br><span class="hljs-keyword">import</span> externalGlobals <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;rollup-plugin-external-globals&#x27;</span><br><span class="hljs-keyword">const</span> globals = <span class="hljs-title function_">externalGlobals</span>(&#123;<br>  <span class="hljs-comment">// moment: &#x27;moment&#x27;,</span><br>  <span class="hljs-comment">// &#x27;video.js&#x27;: &#x27;videojs&#x27;,</span><br>  <span class="hljs-comment">// jspdf: &#x27;jspdf&#x27;,</span><br>  <span class="hljs-comment">// xlsx: &#x27;XLSX&#x27;,</span><br>  <span class="hljs-attr">echarts</span>: <span class="hljs-string">&#x27;echarts&#x27;</span><br>&#125;)<br><br><span class="hljs-comment">// 支持 module.exports</span><br><span class="hljs-comment">// import commonjs from &#x27;rollup-plugin-commonjs&#x27;</span><br><span class="hljs-comment">// const path = require(&#x27;path&#x27;)</span><br><br><span class="hljs-comment">// https://vitejs.dev/config/</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">defineConfig</span>(&#123;<br>  <span class="hljs-comment">// module.exports和import混用</span><br>  <span class="hljs-comment">// rollupOutputOptions: &#123;</span><br>  <span class="hljs-comment">//   exports: &#x27;default&#x27;</span><br>  <span class="hljs-comment">// &#125;,</span><br>  <span class="hljs-comment">// 支持 vue 和 vueJsx , commonjs()</span><br>  <span class="hljs-attr">plugins</span>: [<br>    <span class="hljs-title function_">vue</span>(),<br>    <span class="hljs-title function_">vueJsx</span>(),<br>    <span class="hljs-title function_">visualizer</span>(&#123; <span class="hljs-attr">open</span>: <span class="hljs-literal">true</span> &#125;),<br>    <span class="hljs-title function_">splitVendorChunkPlugin</span>(),<br>    <span class="hljs-title function_">viteCompression</span>(&#123;<br>      <span class="hljs-comment">// 是否在控制台中输出压缩结果</span><br>      <span class="hljs-attr">verbose</span>: <span class="hljs-literal">true</span>,<br>      <span class="hljs-attr">disable</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-comment">// 如果体积大于阈值，将被压缩，单位为b，体积过小时请不要压缩，以免适得其反 200k</span><br>      <span class="hljs-attr">threshold</span>: <span class="hljs-number">202400</span>,<br>      <span class="hljs-comment">// 压缩算法，可选[&#x27;gzip&#x27;，&#x27; brotliccompress &#x27;，&#x27;deflate &#x27;，&#x27;deflateRaw&#x27;]</span><br>      <span class="hljs-attr">algorithm</span>: <span class="hljs-string">&#x27;gzip&#x27;</span>,<br>      <span class="hljs-attr">ext</span>: <span class="hljs-string">&#x27;.gz&#x27;</span>,<br>      <span class="hljs-comment">// 源文件压缩后是否删除(我为了看压缩后的效果，先选择了true)</span><br>      <span class="hljs-attr">deleteOriginFile</span>: <span class="hljs-literal">false</span><br>    &#125;),<br>    <span class="hljs-comment">// viteImagemin(&#123;</span><br>    <span class="hljs-comment">//   gifsicle: &#123;</span><br>    <span class="hljs-comment">//     // 选择0到7之间的优化级别</span><br>    <span class="hljs-comment">//     optimizationLevel: 7,</span><br>    <span class="hljs-comment">//     // 隔行扫描gif进行渐进式渲染</span><br>    <span class="hljs-comment">//     interlaced: false</span><br>    <span class="hljs-comment">//   &#125;,</span><br>    <span class="hljs-comment">//   optipng: &#123;</span><br>    <span class="hljs-comment">//     // 选择0到7之间的优化级别</span><br>    <span class="hljs-comment">//     optimizationLevel: 7</span><br>    <span class="hljs-comment">//   &#125;,</span><br>    <span class="hljs-comment">//   mozjpeg: &#123;</span><br>    <span class="hljs-comment">//     quality: 20</span><br>    <span class="hljs-comment">//   &#125;,</span><br>    <span class="hljs-comment">//   pngquant: &#123;</span><br>    <span class="hljs-comment">//     quality: [0.8, 0.9],</span><br>    <span class="hljs-comment">//     // 压缩速度，1(强力)到11(最快)</span><br>    <span class="hljs-comment">//     speed: 4</span><br>    <span class="hljs-comment">//   &#125;,</span><br>    <span class="hljs-comment">//   svgo: &#123;</span><br>    <span class="hljs-comment">//     plugins: [</span><br>    <span class="hljs-comment">//       &#123;</span><br>    <span class="hljs-comment">//         name: &#x27;removeViewBox&#x27;</span><br>    <span class="hljs-comment">//       &#125;,</span><br>    <span class="hljs-comment">//       &#123;</span><br>    <span class="hljs-comment">//         name: &#x27;removeEmptyAttrs&#x27;,</span><br>    <span class="hljs-comment">//         active: false</span><br>    <span class="hljs-comment">//       &#125;</span><br>    <span class="hljs-comment">//     ]</span><br>    <span class="hljs-comment">//   &#125;</span><br>    <span class="hljs-comment">// &#125;),</span><br>    <span class="hljs-title class_">AutoImport</span>(&#123;<br>      <span class="hljs-comment">// pinia</span><br>      <span class="hljs-attr">imports</span>: [<span class="hljs-string">&#x27;vue&#x27;</span>, <span class="hljs-string">&#x27;vue-router&#x27;</span>, <span class="hljs-string">&#x27;vuex&#x27;</span>, <span class="hljs-string">&#x27;@vueuse/head&#x27;</span>],<br>      <span class="hljs-comment">// 可以选择auto-import.d.ts生成的位置，使用ts建议设置为&#x27;src/auto-import.d.ts&#x27;</span><br>      <span class="hljs-attr">dts</span>: <span class="hljs-string">&#x27;src/auto-import.d.ts&#x27;</span><br>    &#125;),<br>    <span class="hljs-comment">// 强制刷新</span><br>    &#123;<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;singleHMR&#x27;</span>,<br>      <span class="hljs-title function_">handleHotUpdate</span>(<span class="hljs-params">&#123; modules &#125;</span>) &#123;<br>        <span class="hljs-keyword">if</span> (modules[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;url&#x27;</span>].<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;page/custom&#x27;</span>) &gt; -<span class="hljs-number">1</span>) &#123;<br>          modules.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">m</span>) =&gt;</span> &#123;<br>            m.<span class="hljs-property">importedModules</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>()<br>            m.<span class="hljs-property">importers</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>()<br>          &#125;)<br>          <span class="hljs-keyword">return</span> modules<br>        &#125;<br>      &#125;<br>    &#125;<br>  ],<br>  <span class="hljs-comment">// 配置路径别名，f12抛出 i18n多语言警告</span><br>  <span class="hljs-attr">resolve</span>: &#123;<br>    <span class="hljs-attr">alias</span>: &#123; <span class="hljs-string">&#x27;@&#x27;</span>: path.<span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&#x27;./src&#x27;</span>), <span class="hljs-string">&#x27;vue-i18n&#x27;</span>: <span class="hljs-string">&#x27;vue-i18n/dist/vue-i18n.cjs.js&#x27;</span> &#125;,<br>    <span class="hljs-attr">extensions</span>: [<span class="hljs-string">&#x27;.mjs&#x27;</span>, <span class="hljs-string">&#x27;.js&#x27;</span>, <span class="hljs-string">&#x27;.ts&#x27;</span>, <span class="hljs-string">&#x27;.jsx&#x27;</span>, <span class="hljs-string">&#x27;.tsx&#x27;</span>, <span class="hljs-string">&#x27;.json&#x27;</span>, <span class="hljs-string">&#x27;.vue&#x27;</span>]<br>  &#125;,<br>  <span class="hljs-comment">// less的变量报错无法找到</span><br>  <span class="hljs-attr">css</span>: &#123;<br>    <span class="hljs-attr">postcss</span>: &#123;<br>      <span class="hljs-comment">// postcssImport 对我们多个css文件进行合并 ||  autoprefixer +前缀 ||  tailwindcss 作为PostCSS插件存在，将基础的CSS拆分为原子级别。</span><br>      <span class="hljs-attr">plugins</span>: [postcssImport, autoprefixer, tailwindcss]<br>    &#125;,<br>    <span class="hljs-attr">preprocessorOptions</span>: &#123;<br>      <span class="hljs-attr">less</span>: &#123;<br>        <span class="hljs-attr">modifyVars</span>: &#123;<br>          <span class="hljs-attr">hack</span>: <span class="hljs-string">`true; @import (reference) &quot;<span class="hljs-subst">$&#123;path.resolve(<span class="hljs-string">&#x27;src/assets/css/variable.less&#x27;</span>)&#125;</span>&quot;;`</span><br>        &#125;,<br>        <span class="hljs-attr">javascriptEnabled</span>: <span class="hljs-literal">true</span><br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">esbuild</span>: &#123;<br>    <span class="hljs-comment">// 删除 console.log</span><br>    <span class="hljs-attr">pure</span>: [<span class="hljs-string">&#x27;console.log&#x27;</span>],<br>    <span class="hljs-comment">// 删除 debugger   drop: [&#x27;console,&#x27;debugger&#x27;], // 删除 所有的console 和 debugger</span><br>    <span class="hljs-attr">drop</span>: [<span class="hljs-string">&#x27;debugger&#x27;</span>]<br>  &#125;,<br>  <span class="hljs-attr">build</span>: &#123;<br>    <span class="hljs-attr">outDir</span>: <span class="hljs-string">&#x27;zowee_efactory_build&#x27;</span>,<br>    <span class="hljs-comment">// commonjsOptions: &#123;</span><br>    <span class="hljs-comment">//   include: /node_modules|core/,</span><br>    <span class="hljs-comment">//   defaultIsModuleExports: &#x27;auto&#x27;</span><br>    <span class="hljs-comment">// &#125;,</span><br>    <span class="hljs-attr">rollupOptions</span>: &#123;<br>      <span class="hljs-comment">// 转外链 &#x27;xlsx&#x27;,</span><br>      <span class="hljs-attr">external</span>: [<span class="hljs-string">&#x27;echarts&#x27;</span>],<br>      <span class="hljs-attr">plugins</span>: [globals],<br>      <span class="hljs-attr">output</span>: &#123;<br>        <span class="hljs-comment">// 引入文件名的名称  output.manualChunks 否则，它将会根据 chunk 的内容确定。</span><br>        <span class="hljs-attr">chunkFileNames</span>: <span class="hljs-string">&#x27;js/[name]-[hash].js&#x27;</span>,<br>        <span class="hljs-comment">// 包的入口文件名称</span><br>        <span class="hljs-attr">entryFileNames</span>: <span class="hljs-string">&#x27;js/[name]-[hash].js&#x27;</span>,<br>        <span class="hljs-comment">// 资源文件像 字体，图片等</span><br>        <span class="hljs-comment">// assetFileNames: &#x27;[ext]/[name]-[hash].[ext]&#x27;,</span><br><br>        <span class="hljs-title function_">manualChunks</span>(<span class="hljs-params">id</span>) &#123;<br>          <span class="hljs-keyword">if</span> (id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;/src/components/&#x27;</span>)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;components-index&#x27;</span><br>          &#125;<br>          <span class="hljs-keyword">if</span> (id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;/src/assets/font&#x27;</span>)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;font-index&#x27;</span><br>          &#125;<br>          <span class="hljs-keyword">if</span> (id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;ant-design-vue&#x27;</span>) || id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;@ant-design&#x27;</span>)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;ant-vendor&#x27;</span><br>          &#125;<br>          <span class="hljs-keyword">if</span> (<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;vuex&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;vue-router&#x27;</span>) ||<br>            <span class="hljs-comment">// id.includes(&#x27;vue-i18n&#x27;) ||</span><br>            <span class="hljs-comment">// id.includes(&#x27;vue-loader-v16&#x27;) ||</span><br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;vue3-touch&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;sortablejs&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;vuedraggable&#x27;</span>)<br>          ) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;sortablejs-vendor&#x27;</span><br>          &#125;<br><br>          <span class="hljs-keyword">if</span> (<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;axios&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;bignumber&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;qs&#x27;</span>) ||<br>            <span class="hljs-comment">// id.includes(&#x27;element-resize-detector&#x27;) ||</span><br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;figlet&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;moment&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;jszip&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;jsplumb&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;js-md5&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;qrcodejs2-fix&#x27;</span>) ||<br>            <span class="hljs-comment">// id.includes(&#x27;sortablejs&#x27;) ||</span><br>            <span class="hljs-comment">// id.includes(&#x27;vuedraggable&#x27;)</span><br>            <span class="hljs-comment">// id.includes(&#x27;process&#x27;) ||</span><br><br>            <span class="hljs-comment">// 以下未打包 项目未调用</span><br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;@turf&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;es6-tween&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;exec-mathexpress&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;file-saver&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;@flatten-js&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;html2canvas&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;import-three-examples&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;polybooljs&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;viewerjs&#x27;</span>) ||<br>            id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;weixin-js-sdk&#x27;</span>)<br>          ) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;axios-vendor&#x27;</span><br>          &#125;<br><br>          <span class="hljs-keyword">if</span> (id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;@wangeditor/editor&#x27;</span>) || id.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;@wangeditor/editor&#x27;</span>)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;wangeditor-vendor&#x27;</span><br>          &#125;<br><br>          <span class="hljs-comment">// if (id.includes(&#x27;echarts&#x27;)) &#123;</span><br>          <span class="hljs-comment">//   return &#x27;echarts-vendor&#x27;</span><br>          <span class="hljs-comment">// &#125;</span><br><br>          <span class="hljs-comment">// if (id.includes(&#x27;xlsx&#x27;)) &#123;</span><br>          <span class="hljs-comment">//   return &#x27;xlsx-vendor&#x27;</span><br>          <span class="hljs-comment">// &#125;</span><br><br>          <span class="hljs-comment">// 把库全部单独分拆出来</span><br>          <span class="hljs-comment">// if (id.includes(&#x27;node_modules&#x27;)) &#123;</span><br>          <span class="hljs-comment">//   console.log(&#x27;id----&#x27;, id)</span><br>          <span class="hljs-comment">//   return id</span><br>          <span class="hljs-comment">//     .toString()</span><br>          <span class="hljs-comment">//     .split(&#x27;node_modules/&#x27;)[1]</span><br>          <span class="hljs-comment">//     .split(&#x27;/&#x27;)[0]</span><br>          <span class="hljs-comment">//     .toString()</span><br>          <span class="hljs-comment">// &#125;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><br><h3 id="😫一些奇奇怪怪的问题"><a href="#😫一些奇奇怪怪的问题" class="headerlink" title="😫一些奇奇怪怪的问题"></a>😫一些奇奇怪怪的问题</h3><ol><li></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Error</span>:   <span class="hljs-title class_">Failed</span> to scan <span class="hljs-keyword">for</span> dependencies <span class="hljs-keyword">from</span> <span class="hljs-attr">entries</span>:<br><span class="hljs-attr">E</span>:<span class="hljs-regexp">/web/</span>kjl/index.<span class="hljs-property">html</span><br><span class="hljs-attr">E</span>:<span class="hljs-regexp">/web/</span>kjl/public/html.<span class="hljs-property">html</span><br><span class="hljs-attr">E</span>:<span class="hljs-regexp">/web/</span>kjl/public/production.<span class="hljs-property">html</span><br><span class="hljs-attr">E</span>:<span class="hljs-regexp">/web/</span>kjl/src/assets/font/demo_index.<span class="hljs-property">html</span><br></code></pre></td></tr></table></figure><ol start="2"><li><p>安装依赖库报错 ERESOLVE could not resolve，强制安装</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">pnpm add [...] --legacy-peer-deps<br></code></pre></td></tr></table></figure></li></ol><br><h3 id="😊来自小波的bilibili视频教程"><a href="#😊来自小波的bilibili视频教程" class="headerlink" title="😊来自小波的bilibili视频教程"></a>😊来自小波的bilibili视频教程</h3><br><h3 id="🙂相关参考资料链接"><a href="#🙂相关参考资料链接" class="headerlink" title="🙂相关参考资料链接"></a>🙂相关参考资料链接</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/weixin_39996605/article/details/129207849" target="_blank" rel="noopener external nofollow noreferrer">升级vuecli到vite官网建议</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;vite是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;js 早期只能 script 的属性 src 链接，无法像</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="前端" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="https://blog.ganxb2.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="编程" scheme="https://blog.ganxb2.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="es6" scheme="https://blog.ganxb2.com/tags/es6/"/>
    
  </entry>
  
  <entry>
    <title>hexo个人博客优化魔改非插件实现为博客增加安全跳转中台页面</title>
    <link href="https://blog.ganxb2.com/25482.html"/>
    <id>https://blog.ganxb2.com/25482.html</id>
    <published>2023-09-01T19:40:58.000Z</published>
    <updated>2024-12-30T18:48:24.546Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p>网络安全的问题这些年越来越被关注，所以各大平台网站例如微博，微信，qq，网易等，都在这几年为自家的网络产品添加了一个安全跳转的中台页面，甚至微博对于跳转链接必须是企业认证才能进入微博的安全白名单，可以说是把安全做到了极致(真是可恶啊，草根博主的博客那就别想加入到微博的白名单中…)</p><p>当然除了安全问题，对于 SEO 也是必要的一项加分操作。例如早年小波博客的好友链接转卖后，被用于不好的产品推广网站，而小波未能从博客上及时去掉，这样就会连累自己的博客很容易被搜索引擎拉入黑名单中，就算及时处理，也可能在外链的权重上或多或少受到波及。</p><p>加了安全跳转中台以后，这样可以让自己的产品主域名成功与外链间接通过中台串联，而不是直接关系。</p><p>最后的最后，当然所有的功能初衷都是以人为本，之所以网络安全问题愈发被关注，也是因为网络带来了很多好处，同时也带来不好的影响，所以增加安全跳转中台页面也间接提升了网络产品的用户体验。</p><br><h3 id="😍廿壴博客安全跳转中台页面成品效果"><a href="#😍廿壴博客安全跳转中台页面成品效果" class="headerlink" title="😍廿壴博客安全跳转中台页面成品效果"></a>😍廿壴博客安全跳转中台页面成品效果</h3><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://article.biliimg.com/bfs/article/ac85e149dd9ef87e21d79972060d490dcf14e1f0.png@1e_1c.webp" alt="非安全跳转" style="zoom:80%;" /></div><div class="group-image-wrap"><img src="https://article.biliimg.com/bfs/article/30b3e938da6c5da306d53096b3cb0b6a379003cf.png@1e_1c.webp" alt="下载" style="zoom: 67%;" /></div><div class="group-image-wrap"><img src="https://article.biliimg.com/bfs/article/cb3929a921106804bd7180938b05073b82857c53.png@1e_1c.webp" alt="安全跳转" style="zoom:80%;" /></div></div></div><p>gitee仓库地址：<a href="https://gitee.com/ganxb2/safe-go" target="_blank" rel="noopener external nofollow noreferrer">safeGo</a></p><h3 id="🧐仓库文件说明"><a href="#🧐仓库文件说明" class="headerlink" title="🧐仓库文件说明"></a>🧐仓库文件说明</h3><h4 id="go-html-安全跳转中台html页面"><a href="#go-html-安全跳转中台html页面" class="headerlink" title="go.html 安全跳转中台html页面"></a><code>go.html</code> 安全跳转中台html页面</h4><p><em>因为小波个人有分享素材提供下载，所以除了支持作为安全跳转中台，也是提供下载相关操作的功能页面。</em></p><h5 id="配置说明-config"><a href="#配置说明-config" class="headerlink" title="配置说明 config"></a>配置说明 <code>config</code></h5><table><thead><tr><th>键名</th><th>描述</th><th>值</th></tr></thead><tbody><tr><td>title</td><td>标题</td><td>string</td></tr><tr><td>iconFavicon</td><td>地址栏图标</td><td>string</td></tr><tr><td>mpImgSrc</td><td>二维码图片地址</td><td>string</td></tr><tr><td>blogName</td><td>博客名称</td><td>string</td></tr><tr><td>blogDescription</td><td>博客描述</td><td>string</td></tr><tr><td>safeUrl</td><td>白名单</td><td>array</td></tr><tr><td>tipsTextError</td><td>错误提示文案</td><td>string</td></tr><tr><td>tipsTextDownload</td><td>下载提示文案</td><td>string</td></tr><tr><td>tipsTextDanger</td><td>不在安全范围的文案</td><td>string</td></tr><tr><td>tipsTextSuccess</td><td>安全范围的文案</td><td>string</td></tr><tr><td>textDanger</td><td>不在安全范围的跳转提示文案</td><td>string</td></tr><tr><td>textSuccess</td><td>安全范围的跳转提示文案</td><td>string</td></tr><tr><td>wpValidate</td><td>下载功能的验证码</td><td>string</td></tr></tbody></table><br><h4 id="go-js-博客调用的跳转方法"><a href="#go-js-博客调用的跳转方法" class="headerlink" title="go.js 博客调用的跳转方法"></a><code>go.js</code> 博客调用的跳转方法</h4><h5 id="代码说明"><a href="#代码说明" class="headerlink" title="代码说明"></a>代码说明</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> safeGoFun = &#123;<br>  <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> a链接安全跳转（只对文章页，关于页评论 -- 评论要单独丢到waline回调中）</span><br>  <span class="hljs-title class_">NzcheckLink</span>: <span class="hljs-keyword">async</span> (domName) =&gt; &#123;<br>    <span class="hljs-comment">// 获取文章页非社会分享的a标签</span><br>    <span class="hljs-keyword">const</span> links = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(domName);<br>    <span class="hljs-keyword">if</span> (links) &#123;<br>      <span class="hljs-comment">// 锚点正则</span><br>      <span class="hljs-keyword">let</span> reg = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-regexp">/^[#].*/</span>);<br>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; links.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">const</span> ele = links[i];<br>        <span class="hljs-keyword">let</span> eleHref = ele.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;href&quot;</span>),<br>          eleIsDownLoad = ele.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;data-download&quot;</span>),<br>          eleRel = ele.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;rel&quot;</span>);<br><br>        <span class="hljs-comment">// 排除：锚点、上下翻页、按钮类、分类、标签</span><br>        <span class="hljs-keyword">if</span> (<br>          !reg.<span class="hljs-title function_">test</span>(eleHref) &amp;&amp;<br>          eleRel !== <span class="hljs-string">&quot;prev&quot;</span> &amp;&amp;<br>          eleRel !== <span class="hljs-string">&quot;next&quot;</span> &amp;&amp;<br>          eleRel !== <span class="hljs-string">&quot;category&quot;</span> &amp;&amp;<br>          eleRel !== <span class="hljs-string">&quot;tag&quot;</span> &amp;&amp;<br>          eleHref !== <span class="hljs-string">&quot;javascript:void(0);&quot;</span><br>        ) &#123;<br>          <span class="hljs-comment">// 判断是否下载地址和白名单，是下载拼接 &amp;type=goDown</span><br>          <span class="hljs-keyword">if</span> (!(<span class="hljs-keyword">await</span> safeGoFun.<span class="hljs-title class_">NzcheckLocalSite</span>(eleHref)) &amp;&amp; !eleIsDownLoad) &#123;<br>            <span class="hljs-comment">// encodeURIComponent() URI编码</span><br>            ele.<span class="hljs-title function_">setAttribute</span>(<br>              <span class="hljs-string">&quot;href&quot;</span>,<br>              <span class="hljs-string">&quot;/go.html?goUrl=&quot;</span> + <span class="hljs-built_in">encodeURIComponent</span>(eleHref)<br>            );<br>          &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<br>            !(<span class="hljs-keyword">await</span> safeGoFun.<span class="hljs-title class_">NzcheckLocalSite</span>(eleHref)) &amp;&amp;<br>            eleIsDownLoad === <span class="hljs-string">&quot;goDown&quot;</span><br>          ) &#123;<br>            ele.<span class="hljs-title function_">setAttribute</span>(<br>              <span class="hljs-string">&quot;href&quot;</span>,<br>              <span class="hljs-string">&quot;/go.html?goUrl=&quot;</span> + <span class="hljs-built_in">encodeURIComponent</span>(eleHref) + <span class="hljs-string">&quot;&amp;type=goDown&quot;</span><br>            );<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class="hljs-comment">// 校验白名单，自己博客，local测试</span><br>  <span class="hljs-title class_">NzcheckLocalSite</span>: <span class="hljs-keyword">async</span> (url) =&gt; &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>      <span class="hljs-comment">// 白名单地址则不修改href</span><br>      <span class="hljs-keyword">const</span> safeUrls = [<span class="hljs-string">&quot;localhost:4000&quot;</span>, <span class="hljs-string">&quot;ganxb2.com&quot;</span>, <span class="hljs-string">&quot;blog.ganxb2.com&quot;</span>];<br>      <span class="hljs-keyword">let</span> isOthers = <span class="hljs-literal">false</span>;<br>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; safeUrls.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">const</span> ele = safeUrls[i];<br>        <span class="hljs-keyword">if</span> (url.<span class="hljs-title function_">includes</span>(ele)) &#123;<br>          isOthers = <span class="hljs-literal">true</span>;<br>          <span class="hljs-keyword">break</span>;<br>        &#125;<br>      &#125;<br>      <span class="hljs-keyword">return</span> isOthers;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>  &#125;,<br>&#125;;<br><br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(safeGoFun).<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">key</span>) =&gt;</span> &#123;<br>  <span class="hljs-variable language_">window</span>[key] = safeGoFun[key];<br>&#125;);<br><br><span class="hljs-comment">// 页面dom加载完成后，文章页不是分享按钮，不是图片灯箱，class类名不含有 not-check-link</span><br><span class="hljs-comment">// not-check-link 是小波自己设计的约定类名class，用来排除不调用跳转方法的链接</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;DOMContentLoaded&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">window</span>.<span class="hljs-title class_">NzcheckLink</span>(<br>    <span class="hljs-string">&quot;.post-content a:not(.social-share-icon):not(.fancybox):not(.not-check-link)&quot;</span><br>  );<br>&#125;);<br><br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-info">提示</span></p><p><code>NzcheckLink</code> 方法：</p><ol><li><p>小波设计博客和中台的跳转链接约定：如果是下载则方法给跳转地址后补上<code>type=goDown</code>，所以页面的超链接 a 标签需要增加属性 <code>data-download=&quot;goDown&quot;</code></p><p>eg: </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;https://pan.baidu.com/s/1jShRisVX9H9_LHqch_V_lQ?pwd=mfsq&quot;</span> <span class="hljs-attribute">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attribute">rel</span>=<span class="hljs-string">&quot;noopener external nofollow noreferrer&quot;</span> <span class="hljs-attribute">data-download</span>=<span class="hljs-string">&quot;goDown&quot;</span>&gt;点我去廿壴博客的百度云下载&lt;/a&gt;<br></code></pre></td></tr></table></figure></li><li><p>排除规则如果小波代码默认条件的不能全面覆盖你的站点超链接类型，请自己根据情况补充(PS: 这里小波偷懒了没有搞成方法的参数传入…嘎嘎)</p></li></ol><p><code>NzcheckLocalSite</code> 方法：</p><ol><li>把 <code>safeUrls</code> 域名改成自己博客的</li></ol></blockquote><br><h3 id="🤔博客如何调用"><a href="#🤔博客如何调用" class="headerlink" title="🤔博客如何调用"></a>🤔博客如何调用</h3><ol><li><h4 id="首先把仓库文件复制贴入hexo博客-source文件夹下"><a href="#首先把仓库文件复制贴入hexo博客-source文件夹下" class="headerlink" title="首先把仓库文件复制贴入hexo博客 source文件夹下"></a>首先把仓库文件复制贴入hexo博客 <code>source</code>文件夹下</h4><p>非hexo博客则贴入博客的根目录</p></li><li><h4 id="增加调用代码"><a href="#增加调用代码" class="headerlink" title="增加调用代码"></a>增加调用代码</h4><p>① 不采用引入 js 文件，减少1次请求</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 通常是 layout.ejs 在 &lt;/body&gt; 前贴入以下代码</span><br>&lt;script&gt;<br>  <span class="hljs-comment">// 把 go.js 中代码贴入</span><br>  <span class="hljs-keyword">const</span> safeGoFun = &#123;<br>    <span class="hljs-title class_">NzcheckLink</span>: <span class="hljs-function">() =&gt;</span> &#123;&#125;,<br>    <span class="hljs-title class_">NzcheckLocalSite</span>: <span class="hljs-function">() =&gt;</span> &#123;&#125;<br>  &#125;<br><br>  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;DOMContentLoaded&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    safeGoFun.<span class="hljs-title class_">NzcheckLink</span>(<br>      <span class="hljs-string">&quot;.post-content a:not(.social-share-icon):not(.fancybox):not(.not-check-link)&quot;</span><br>    );<br>  &#125;);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p><em>代码解释：页面 dom 加载完成后，文章页不是分享按钮，不是图片灯箱，<code>class</code> 类名不含有  <code>not-check-link</code> 执行调用，所以  <code>.post-content</code> 根据自己的博客修改，可改成  <code>body</code> 的 <code>class</code> 类名，则全局覆盖</em><br><em><code>not-check-link</code> 是小波自己设计的约定类名 <code>class</code>，用来统一排除不调用跳转方法的链接</em></p><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 如果只给文章页添加，则需要判断只在文章页调用</span><br><span class="hljs-comment">// fluid主题 栗子🌰：</span><br>&lt;% <span class="hljs-keyword">if</span>(<span class="hljs-title function_">is_post</span>()) &#123; %&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml">    ... 同上</span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;% &#125; %&gt;<br></code></pre></td></tr></table></figure><br><p>② 直接引用 js 文件 <span class="label label-success">推荐</span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 通常是 layout.ejs 在 &lt;/body&gt; 前贴入以下代码</span><br>&lt;script src=<span class="hljs-string">&quot;/go.js&quot;</span>&gt;&lt;/script&gt;<br><br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-warning">注意</span></p><p><strong>go.js</strong> 文件：</p><ol><li><p><code>.NzcheckLink(&quot;.post-content a:not(.social-share-icon):not(.fancybox):not(.not-check-link)&quot;</code> 的 <code>.post-content</code>  同 ① 手动一样，根据自己博客文章页或整站 <code>body</code> 的 <code>class</code> 名字修改</p></li><li><p>文章标题等超链接不需要被调用的统一+个<code>class</code> <code>&lt;a class=&quot;not-check-link&quot;&gt;&lt;/a&gt;</code> ,如果本来有 <code>class</code> 则里面追加</p></li><li><p><code>safeUrls</code> 域名改成自己博客的</p></li></ol><br><p><strong>go.html</strong> 文件：</p><ol><li><code>config</code> 根据自己博客文案修改，添加友链白名单</li></ol></blockquote><br><blockquote><p><span class="label label-info">提示</span></p><p>如果你的博客也是 fluid 并使用 waline 评论，则还需要在 <code>waline.init(options)</code> 后再为 waline 评论补上调用，因为 fluid 主题这里采用了懒加载</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// fluid主题 栗子🌰：</span><br>...<br>waline.<span class="hljs-title function_">init</span>(options);<br><span class="hljs-comment">// 监控滚动到留言板执行回调 -- 添加外链跳转页面</span><br><span class="hljs-title class_">Fluid</span>.<span class="hljs-property">utils</span>.<span class="hljs-title function_">waitElementVisible</span>(<span class="hljs-string">&#x27;#waline .wl-cards .wl-item&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>   <span class="hljs-variable language_">window</span>.<span class="hljs-title class_">NzcheckLink</span>(<span class="hljs-string">&quot;#waline .wl-cards .wl-item a&quot;</span>);<br>  &#125;, <span class="hljs-number">1500</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><p><em>代码解释：因为  waline 的初始方法异步，所以需要自己监控判断 waline 的评论  dom 显示以后再执行调用</em></p></blockquote></li></ol><br><h3 id="😚未来扩展"><a href="#😚未来扩展" class="headerlink" title="😚未来扩展"></a>😚未来扩展</h3><ol><li>可以充分利用 <code>github</code> 或者 <code>vercel</code>，把安全跳转中台页面部署上去，这样可作为独立的安全中台站点使用，更灵活、更易后期扩展。</li><li>下载的安全验证码可扩展为通过其他后端服务返回。</li><li>安全白名单参考微博等网络产品，通过数据库维护而非前端页面维护。</li></ol><br><h3 id="😊hexo同类产品插件"><a href="#😊hexo同类产品插件" class="headerlink" title="😊hexo同类产品插件"></a>😊hexo同类产品插件</h3><p><em>一开始小波也想找 <code>hexo</code>的插件，例如 <code>hexo-external-link</code></em></p><p><em>但是发现都集成太多，太重了，像<a href="https://blog.ganxb2.com/11388.html">超链接末尾增加小图标尾巴</a>，很早小波就写了文章用css即实现。</em></p><p><em>考虑对于我自己来讲需求不太对口，所以最后选择自己开发写了一个页面。</em></p><br><h3 id="😊来自小波的-bilibili-视频教程"><a href="#😊来自小波的-bilibili-视频教程" class="headerlink" title="😊来自小波的 bilibili 视频教程"></a>😊来自小波的 bilibili 视频教程</h3><br><h3 id="🙂相关参考资料链接"><a href="#🙂相关参考资料链接" class="headerlink" title="🙂相关参考资料链接"></a>🙂相关参考资料链接</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;网络安全的问题这些年越来越被关注，所以各大平台网站例如微博，微信，qq，网易等，都在这几年为自家的网络产品添加了一个安全跳转</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="前端" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="用户体验" scheme="https://blog.ganxb2.com/tags/%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C/"/>
    
    <category term="前端" scheme="https://blog.ganxb2.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="编程" scheme="https://blog.ganxb2.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="hexo" scheme="https://blog.ganxb2.com/tags/hexo/"/>
    
    <category term="hexo博客魔改" scheme="https://blog.ganxb2.com/tags/hexo%E5%8D%9A%E5%AE%A2%E9%AD%94%E6%94%B9/"/>
    
    <category term="fluid主题魔改" scheme="https://blog.ganxb2.com/tags/fluid%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/"/>
    
  </entry>
  
  <entry>
    <title>前端架构师之团队协作：如何约定一致性的git提交规范</title>
    <link href="https://blog.ganxb2.com/51438.html"/>
    <id>https://blog.ganxb2.com/51438.html</id>
    <published>2023-08-09T20:31:25.000Z</published>
    <updated>2024-12-30T18:48:24.544Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p>作为前端架构师，除了必需的前端项目自动化微服务构建，服务端的 nginx 配置，团队间规范和约定也是重中之重，不仅能保证团队配合通畅，也能通过规范和约定减少团队成员阅读和修改代码时的心智负担。</p><p>小波记得从毕业那会就听到行业里的大佬们传达出的信念，那就是把代码写成诗一般的优雅。</p><p>但是早年间如果需要坚持做这样的事，那就必须个人有一定的强迫症和韧性才能完成，因为以前没有工程化的前端，只能靠自我约束，而现在则可以通过相关的插件或者必要的服务自带规范来达成团队间的完美配合，例如git自带的提交规范。</p><br><h3 id="🙂git-约定的提交信息格式"><a href="#🙂git-约定的提交信息格式" class="headerlink" title="🙂git 约定的提交信息格式"></a>🙂git 约定的提交信息格式</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">// 每个 Git 提交信息都应该包含一个清晰简洁的标题和一个更详细的描述。推荐的提交信息格式如下：</span><br>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;<br>&lt;BLANK LINE&gt;<br>&lt;body&gt;<br>&lt;BLANK LINE&gt;<br>&lt;footer&gt;<br><br><span class="hljs-comment">// eg: 完整版</span><br><span class="hljs-function"><span class="hljs-title">perf</span><span class="hljs-params">(文章页面)</span></span>: 播放器动画,文章头部优化<br><br><span class="hljs-number">1</span>.音乐播放器增加动画<br><span class="hljs-number">2</span>.文章头部信息优化<br><br>Closes <span class="hljs-number">#123</span><br><br><span class="hljs-comment">// eg: 简易版 解决某个bug</span><br><span class="hljs-function"><span class="hljs-title">fix</span><span class="hljs-params">(首页)</span></span>: 修复 xxxx bug (bug<span class="hljs-number">#1234</span>)<br><br><span class="hljs-comment">// eg: 简易版 解决某个需求上的bug</span><br><span class="hljs-function"><span class="hljs-title">fix</span><span class="hljs-params">(<span class="hljs-number">#5678</span>)</span></span>: 修复 xxxx bug (story<span class="hljs-number">#1234</span>)<br></code></pre></td></tr></table></figure><p><code>&lt;type&gt;</code> 代表提交类型</p><p><code>&lt;scope&gt;</code> 代表影响范围</p><p><code>&lt;subject&gt;</code> 是提交信息的简短描述</p><p><code>&lt;body&gt;</code> 是详细描述</p><p><code>&lt;footer&gt;</code> 是一些元数据，比如关联的禅道bug&#x2F;需求ID，TAPD的bug&#x2F;需求ID， issue、PR 等</p><br><h3 id="🧐提交类型-lt-type-gt"><a href="#🧐提交类型-lt-type-gt" class="headerlink" title="🧐提交类型 &lt;type&gt;"></a>🧐提交类型 <code>&lt;type&gt;</code></h3><ul><li><code>feat</code>：新功能 (开发新页面)  ❤️‍🔥❤️‍🔥❤️‍🔥</li><li><code>fix</code>：修复 bug (用的最多的) ❤️‍🔥❤️‍🔥❤️‍🔥❤️‍🔥</li><li><code>docs</code>：文档修改</li><li><code>style</code>：代码格式修改，比如缩进、空格等 (自我检查或者分享会议后做代码优化) ❤️‍🔥</li><li><code>refactor</code>：代码重构 (如果是在老项目基础开发，会使用)</li><li><code>test</code>：测试相关修改 (需要发布外网测试，本地或者内网无法测试的话需要此类型)</li><li><code>chore</code>：其他修改，比如构建流程、辅助工具等</li><li><code>merge</code>：合并代码 (vscode直接同步的话，会自动增加此类型)</li><li><code>ui</code>：单纯调整样式</li><li><code>perf</code>：优化相关，比如提升网站性能、用户体验 ❤️‍🔥❤️‍🔥</li></ul><br><h3 id="🤔影响范围-lt-scope-gt"><a href="#🤔影响范围-lt-scope-gt" class="headerlink" title="🤔影响范围 &lt;scope&gt;"></a>🤔影响范围 <code>&lt;scope&gt;</code></h3><p>可以是文件名、模块名、功能名等，也可以省略不写。</p><p>1.如果是团队约束不要求过高，则可以用bug的id填充此位置或者不填</p><p>2.标准版则填充影响范围，简单描述，参考上面列举的栗子🌰</p><p>3.如果是某个需求的bug，则填充bug的id</p><br><h3 id="😚提交信息的描述-lt-subject-gt-lt-body-gt"><a href="#😚提交信息的描述-lt-subject-gt-lt-body-gt" class="headerlink" title="😚提交信息的描述 &lt;subject&gt; &lt;body&gt;"></a>😚提交信息的描述 <code>&lt;subject&gt;</code> <code>&lt;body&gt;</code></h3><p>如果是简易版提交信息，<code>&lt;subject&gt;</code>的字符约束是50</p><img src="https://article.biliimg.com/bfs/article/42857005c6a201376373091d1185cf7db92e0394.png@1e_1c.webp" alt="提交信息的描述简易版" style="zoom:80%;" /><p>如果是完整版提交信息，<code>&lt;body&gt;</code>的字符约束是72</p><img src="https://article.biliimg.com/bfs/article/0a6d7e20ccff62695262824cca23bbe164704ea4.png@1e_1c.webp" alt="提交信息的描述完整版" style="zoom:80%;" /><br><h3 id="😚元数据-lt-footer-gt"><a href="#😚元数据-lt-footer-gt" class="headerlink" title="😚元数据 &lt;footer&gt;"></a>😚元数据 <code>&lt;footer&gt;</code></h3><p>指提交信息结尾处标记，通常是关联对应的需求的id,bug的id,issue的id等 (这些id通常来源于禅道，TAPD)</p><br><h3 id="😊总结"><a href="#😊总结" class="headerlink" title="😊总结"></a>😊总结</h3><p>虽然一说到各种规范或者约定，本能我们会有一定的排斥，表面的确好像增加了一定工作量，但是一旦遵循好了 这些相关的 Git 提交规范，可以让团队协作更加高效和规范，也更容易进行版本管理和代码维护，降低同事间互改代码时的心智负担，提高工作效率不说，也能增加不少的摸鱼时间，也不失为一件爽YY的事儿~</p><br><h3 id="😊来自小波的-bilibili-视频教程"><a href="#😊来自小波的-bilibili-视频教程" class="headerlink" title="😊来自小波的 bilibili 视频教程"></a>😊来自小波的 bilibili 视频教程</h3><br><h3 id="🙂相关参考资料链接"><a href="#🙂相关参考资料链接" class="headerlink" title="🙂相关参考资料链接"></a>🙂相关参考资料链接</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/weixin_53334387/article/details/126639701" target="_blank" rel="noopener external nofollow noreferrer">https://blog.csdn.net/weixin_53334387/article/details/126639701</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/litterboys/article/details/129737408" target="_blank" rel="noopener external nofollow noreferrer">https://blog.csdn.net/litterboys/article/details/129737408</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;作为前端架构师，除了必需的前端项目自动化微服务构建，服务端的 nginx 配置，团队间规范和约定也是重中之重，不仅能保证团队</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="前端" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="https://blog.ganxb2.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="编程" scheme="https://blog.ganxb2.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="git" scheme="https://blog.ganxb2.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>edge扩展header editor或modHeader解决google人机验证reCaptcha</title>
    <link href="https://blog.ganxb2.com/23749.html"/>
    <id>https://blog.ganxb2.com/23749.html</id>
    <published>2023-06-16T21:17:22.000Z</published>
    <updated>2024-12-30T18:48:24.544Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p>小波为了去国外的一些素材站下载素材，或是访问某些设计、前端相关的网站找寻灵感时，因为大环境的相关约束，经常这些国外网站会出现 google 人机验证 reCaptcha 的图片无法显示，特别像 freepik 这样优秀的素材站，如果无法注册并登录下载…那简直就好比炒股亏了一个亿。</p><br><h3 id="😦google-人机验证-reCaptcha"><a href="#😦google-人机验证-reCaptcha" class="headerlink" title="😦google 人机验证 reCaptcha"></a>😦google 人机验证 reCaptcha</h3><p><img src="https://article.biliimg.com/bfs/article/c944477b467f4aee49b4c86f3622a3519679667c.gif" alt="google reCaptcha"></p><p>这是谷歌一项开放服务，提供了 reCAPTCHA（v3 和 v2）和 reCAPTCHA Enterprise，帮助您保护网站免受欺诈活动、垃圾内容和滥用行为的侵扰。</p><p><a href="https://github.com/google/recaptcha" target="_blank" rel="noopener external nofollow noreferrer">github 项目地址</a></p><p><a href="https://developers.google.cn/recaptcha/intro?hl=zh-cn" target="_blank" rel="noopener external nofollow noreferrer">google reCaptcha 官网开发指南</a></p><br><h3 id="😚header-editor-解决-google-人机验证-reCaptcha-步骤"><a href="#😚header-editor-解决-google-人机验证-reCaptcha-步骤" class="headerlink" title="😚header editor 解决 google 人机验证 reCaptcha 步骤"></a>😚header editor 解决 google 人机验证 reCaptcha 步骤</h3><p>小波个人使用的 edge，所以以 edge 为例，其他浏览器操作大同小异哈。</p><h4 id="第一步：安装插件"><a href="#第一步：安装插件" class="headerlink" title="第一步：安装插件"></a>第一步：安装插件</h4><ul><li>直接打开<a href="https://microsoftedge.microsoft.com/addons" target="_blank" rel="noopener external nofollow noreferrer">edge的扩展网站</a>搜索 “header editor” 安装即可</li><li>或者去 github上搜索 header editor 找到对应浏览器的扩展程序包，自己离线安装</li></ul><h4 id="第二步：配置插件"><a href="#第二步：配置插件" class="headerlink" title="第二步：配置插件"></a>第二步：配置插件</h4><ol><li><h5 id="下载json文件-github-release，或者把下面代码-copy-到text后保存为-json-文件"><a href="#下载json文件-github-release，或者把下面代码-copy-到text后保存为-json-文件" class="headerlink" title="下载json文件 github release，或者把下面代码 copy 到text后保存为 json 文件"></a>下载json文件 <a href="https://github.com/AzureZeng/azurezeng.github.io/releases/download/0.0.0.0.1/HE-GoogleRedirect.json" target="_blank" rel="noopener external nofollow noreferrer">github release</a>，或者把下面代码 copy 到text后保存为 json 文件</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;enable&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Google APIs&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;ruleType&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;redirect&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;matchType&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;regexp&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;pattern&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^http(s?)://ajax\\.googleapis\\.com/(.*)&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;exclude&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;isFunction&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;action&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;redirect&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;to&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://gapis.geekzu.org/ajax/$2&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;group&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Google Redirect&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;enable&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;reCaptcha&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;ruleType&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;redirect&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;matchType&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;regexp&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;pattern&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^http(s?)://(?:www\\.|recaptcha\\.|)google\\.com/recaptcha/(.*)&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;exclude&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;isFunction&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;action&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;redirect&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;to&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://recaptcha.net/recaptcha/$2&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;group&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Google Redirect&quot;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;sendHeader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;receiveHeader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;enable&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Content Security Policy Header Modification&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;ruleType&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;modifyReceiveHeader&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;matchType&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;all&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;pattern&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;exclude&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;isFunction&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;let rt = detail.type;\nif (rt === &#x27;script&#x27; || rt === &#x27;stylesheet&#x27; || rt === &#x27;main_frame&#x27; || rt === &#x27;sub_frame&#x27;) &#123;\n  for (let i in val) &#123;\n    if (val[i].name.toLowerCase() === &#x27;content-security-policy&#x27;) &#123;\n      let s = val[i].value;\n      s = s.replace(/googleapis\\.com/g, &#x27;$&amp; https://gapis.geekzu.org&#x27;);\n      s = s.replace(/recaptcha\\.google\\.com/g, &#x27;$&amp; https://recaptcha.net&#x27;);\n      s = s.replace(/google\\.com/g, &#x27;$&amp; https://recaptcha.net&#x27;);\n      s = s.replace(/gstatic\\.com/g, &#x27;$&amp; https://*.gstatic.cn&#x27;);\n      val[i].value = s;\n    &#125;\n  &#125;\n&#125;&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;group&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Google Redirect&quot;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li><li><h5 id="header-editor-扩展管理页面，点击导入把刚才下载的-json-文件-或者自己手动创建的-json-文件导入，然后保存"><a href="#header-editor-扩展管理页面，点击导入把刚才下载的-json-文件-或者自己手动创建的-json-文件导入，然后保存" class="headerlink" title="header editor 扩展管理页面，点击导入把刚才下载的 json 文件 或者自己手动创建的 json 文件导入，然后保存"></a>header editor 扩展管理页面，点击导入把刚才下载的 json 文件 或者自己手动创建的 json 文件导入，然后保存</h5><p><img src="https://article.biliimg.com/bfs/article/cc8f58699323134008d8e4f70cdf14d2809ddba5.jpg@1e_1c.webp" alt="header editor 导入"></p></li><li><h5 id="查看规则列表中是否添加成功"><a href="#查看规则列表中是否添加成功" class="headerlink" title="查看规则列表中是否添加成功"></a>查看规则列表中是否添加成功</h5><p><img src="https://article.biliimg.com/bfs/article/1ce741455d017d02dd480d19b258342fe560389a.jpg@1e_1c.webp" alt="header editor 规则"></p></li></ol><br><h3 id="😊同类型插件-modHeader"><a href="#😊同类型插件-modHeader" class="headerlink" title="😊同类型插件 modHeader"></a>😊同类型插件 modHeader</h3><p>这是 header editor 同类型的一款 edge 扩展，原理都是一样，进行相应配置后即可解决 google 人机验证reCaptcha。</p><p>感兴趣的童鞋可以自行百度一下具体操作。</p><br><h3 id="😊扩展阅读"><a href="#😊扩展阅读" class="headerlink" title="😊扩展阅读"></a>😊扩展阅读</h3><p>利用 header editor 解决微软bing <a href="http://www.bing.com/new" target="_blank" rel="noopener external nofollow noreferrer">www.bing.com/new</a> 申请 chatgpt</p><p> (小波自己测试发现即使使用魔法都无法打开申请页面了… 截至 2023-06-16 21:45:44)</p><p>点击 header editor 管路页面右下的加号添加配置如下：</p><p><img src="https://article.biliimg.com/bfs/article/22df173fafd65a7084541387eeb6cf67481412df.jpg@1e_1c.webp" alt="header editor 添加 bing 申请 chatgpt 配置"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">规则类型：修改请求<br>正则表达式：^<span class="hljs-title function_">http</span>(s?):<span class="hljs-comment">//(.*).bing\.com/(.*)</span><br>头名称：X-<span class="hljs-title class_">Forwarded</span>-<span class="hljs-title class_">For</span><br>内容：<span class="hljs-number">4.2</span><span class="hljs-number">.2</span><span class="hljs-number">.2</span> 或者 <span class="hljs-number">8.8</span><span class="hljs-number">.8</span><span class="hljs-number">.8</span><br></code></pre></td></tr></table></figure><br><h3 id="🙂相关参考链接"><a href="#🙂相关参考链接" class="headerlink" title="🙂相关参考链接"></a>🙂相关参考链接</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.51cto.com/u_15923796/5972318?u_atoken=47d5abb0-d73d-4dfb-85fa-ff7946eb5cee&u_asession=01E2jl8wNcXGAzi7rKhBNH1A4RQJQBV_Pr5nAQ4xKjJyVksm1MSTgPfC9fiVTizUlFX0KNBwm7Lovlpxjd_P_q4JsKWYrT3W_NKPr8w6oU7K-jPSXa17AhP5X_bHi6zqDuz93Gv091IdoFlCkcaxHIZGBkFo3NEHBv0PZUm6pbxQU&u_asig=056p5cIcPIKtRzQlYqVpNFBUMojbetMUu71dSNcATjwokw6UHqftQJdPw7GD_zYwHLzCn9wsEL7gK2HMIzQf_gVS399UZPDHG6IvOmKljPyR0S4qoL635kshzkAU48DuC_6MWcVrBvmfL5NnZtmrW1EezYcmECU6lC33CGm3DevzL9JS7q8ZD7Xtz2Ly-b0kmuyAKRFSVJkkdwVUnyHAIJzd-yTFRT6mbrNBRAt1j-xLf-kmi7LUgAZcrP_PPKUi80IZvi_fHA0gZ5NR9OtWDag-3h9VXwMyh6PgyDIVSG1W9gjvw1fPbdBpeeSpupiqrZnnrbNaviBYuQoL_G8LO7jeh0CRkvIVWuW58Na2xFlYr-1C1lzwW0liJXlVQKd5nQmWspDxyAEEo4kbsryBKb9Q&u_aref=UBg5zeaS3x6bN11Ts94d8pYasMc=" target="_blank" rel="noopener external nofollow noreferrer">Google 人机验证(reCaptcha)无法显示解决方案</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;小波为了去国外的一些素材站下载素材，或是访问某些设计、前端相关的网站找寻灵感时，因为大环境的相关约束，经常这些国外网站会出现</summary>
      
    
    
    
    <category term="软件应用" scheme="https://blog.ganxb2.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="windows" scheme="https://blog.ganxb2.com/tags/windows/"/>
    
    <category term="win11应用软件推荐" scheme="https://blog.ganxb2.com/tags/win11%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    
    <category term="edge扩展" scheme="https://blog.ganxb2.com/tags/edge%E6%89%A9%E5%B1%95/"/>
    
    <category term="header editor" scheme="https://blog.ganxb2.com/tags/header-editor/"/>
    
  </entry>
  
  <entry>
    <title>原创诗歌：《风之声》</title>
    <link href="https://blog.ganxb2.com/40062.html"/>
    <id>https://blog.ganxb2.com/40062.html</id>
    <published>2023-05-10T21:07:02.000Z</published>
    <updated>2024-12-30T18:48:24.544Z</updated>
    
    <content type="html"><![CDATA[ <br><p class="note note-primary">耳旁传来熟悉的呼呼喘气声风跨过城东梧桐混沌世界一声巨吼晨曦熠熠穿透云海青春的步伐唤醒山麓林泽<p> <br><h3 id="😚《风之声》"><a href="#😚《风之声》" class="headerlink" title="😚《风之声》"></a>😚《风之声》</h3><p>ganxb</p><p>耳旁传来熟悉的呼呼喘气声</p><p>风跨过城东梧桐</p><p>混沌世界一声巨吼</p><p>晨曦熠熠穿透云海</p><p>青春的步伐</p><p>唤醒山麓林泽</p><br><p>耳旁传来熟悉的呼呼喘气声</p><p>风踏波逐浪而来</p><p>沙鸥悠悠潮生潮落</p><p>明月层楼晚眺星河</p><p>温柔的陪伴</p><p>点亮万家灯火</p><br><p>耳旁传来熟悉的呼呼喘气声</p><p>风送来阵阵暗香</p><p>湖畔蛙声唱响夏天</p><p>艺术烟火暖了心窝</p><p>落日的倔强</p><p>诉说生命源头</p><br>]]></content>
    
    
      
      
    <summary type="html"> &lt;br&gt;

&lt;p class=&quot;note note-primary&quot;&gt;
耳旁传来熟悉的呼呼喘气声
风跨过城东梧桐
混沌世界一声巨吼
晨曦熠熠穿透云海
青春的步伐
唤醒山麓林泽
&lt;p&gt;

 &lt;br&gt;

&lt;h3 id=&quot;😚《风之声》&quot;&gt;&lt;a href=&quot;#😚《风之声》&quot; cla</summary>
      
    
    
    
    <category term="短文" scheme="https://blog.ganxb2.com/categories/%E7%9F%AD%E6%96%87/"/>
    
    
    <category term="小波短文分享" scheme="https://blog.ganxb2.com/tags/%E5%B0%8F%E6%B3%A2%E7%9F%AD%E6%96%87%E5%88%86%E4%BA%AB/"/>
    
    <category term="原创诗歌" scheme="https://blog.ganxb2.com/tags/%E5%8E%9F%E5%88%9B%E8%AF%97%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title>windows和linux用户福音来了，LANDrop+MICROSOFT EDGE跨多平台实现苹果隔空投送传输文件终极方案</title>
    <link href="https://blog.ganxb2.com/48493.html"/>
    <id>https://blog.ganxb2.com/48493.html</id>
    <published>2023-04-29T13:01:34.000Z</published>
    <updated>2024-12-30T18:48:24.543Z</updated>
    
    <content type="html"><![CDATA[<br><h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p>windows 和 linux 用户福音来了，LANDrop+MICROSOFT EDGE 终极跨多平台实现苹果隔空投送传输文件。</p><p>以前传输文件啥的总要使用QQ，或者使用飞鸽传书也是一个不错的替代方案，但是飞鸽只能PC端，多端传输文件一直是个痛点。</p><p>后来苹果推出隔空投送实现了自家生态链产品传输文件，其他各平台各阵营都在想办法跟风实现，但是玩来玩去，好像没有一个终极能跨全平台传输文件的解决方案。</p><p>华为的“隔空投送”只满足自家的生态链产品，其他安卓手机小米等又只能自己组建一个圈子完成实现只能安卓手机隔空投送传输文件的方案，无法实现PC各系统和手机各系统统一支持。</p><br><h3 id="😚LANDrop-UI"><a href="#😚LANDrop-UI" class="headerlink" title="😚LANDrop UI"></a>😚LANDrop UI</h3><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://article.biliimg.com/bfs/article/5e87a19a991435b920e56287004147e7bf25d87a.jpg@1e_1c.webp" alt="landrop_app" style="zoom:80%;" /></div><div class="group-image-wrap"><img src="https://article.biliimg.com/bfs/article/295e141abb05159d573c22646a1fd7235145d883.jpg@1e_1c.webp" alt="landrop_pc"></div></div></div><p>使用步骤：</p><ol><li><mark><strong>确保PC和手机都在同一个局域网</strong></mark>，然后直接把文件拖进窗口，<mark><strong>点击发送</strong></mark>跳出界面会显示局域网的手机名，<mark><strong>选中名字后点击发送</strong></mark>即可。</li></ol><p>小波个人体验总结：</p><ol><li>LANDrop 比 MICROSOFT EDGE DROP 传输文件更快点，如果不想再装个软件则用 edge 自带的 drop 吧。</li><li>LANDrop 0.1.5 手机端只有19.9M，PC端 77.6M</li><li>手机端 LANDrop 会有休眠功能，超过时间则自动关闭了，也避免被其他PC端发现</li></ol><p>下载直接去 LANDrop 官网<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="LANDrop官网">[1]</span></a></sup>下载即可</p><br><h3 id="😊MICROSOFT-EDGE-DROP"><a href="#😊MICROSOFT-EDGE-DROP" class="headerlink" title="😊MICROSOFT EDGE DROP"></a>😊MICROSOFT EDGE DROP</h3><p>3月份 MICROSOFT EDGE 更新侧边栏功能上新了 DROP ，小波试了下，传输文件还是很快的，PC端因为 windows 自带 edge 不用安装，手机端小波本来也一直使用，所以一切发生的恰逢其时。</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://article.biliimg.com/bfs/article/a38e4c2fb94e1afd9724963edff414eeed34367c.jpg@1e_1c.webp" alt="edge drop_pc"></div><div class="group-image-wrap"><img src="https://article.biliimg.com/bfs/article/41e4980ce5367ffc72667fd3a4864f74e097b23b.jpg@1e_1c.webp" alt="edge drop_app"></div></div></div><p>EDGE APP 110.0.1587.66: 大小 114.2M</p><p>使用步骤：</p><ol><li>和 LANDrop  一样直接把文件拖进左侧功能区，然后手机端会收到通知，点击进入即可查看。</li></ol><br><h3 id="🤔smb-共享文件方式"><a href="#🤔smb-共享文件方式" class="headerlink" title="🤔smb 共享文件方式"></a>🤔smb 共享文件方式</h3><p>来自宇哥的分享，smb 共享文件方式，相当于设置一个共享文件夹，然后通过 <strong>smb 1.0&#x2F;cifs</strong> 服务提供了跨多端访问下载。</p><p>具体设置可参考这篇文章<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="如何使用smb共享文件（win10），可多人同时下载">[2]</span></a></sup></p><p>关于 Microsoft SMB 协议和 CIFS 协议概述<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label=" Microsoft SMB 协议和 CIFS 协议概述">[3]</span></a></sup></p><p> – 服务器消息块 (SMB) 协议是网络文件共享协议，如 Microsoft Windows中实现的称为 Microsoft SMB 协议。 定义特定版本的协议的消息数据包集称为方言。 常见的 Internet 文件系统 (CIFS) 协议是 SMB 的方言。 SMB 和 CIFS 也可用于 VMS、多个版本的 Unix 和其他操作系统。</p><br><h3 id="🙂终极跨多平台实现苹果隔空投送传输文件相关链接"><a href="#🙂终极跨多平台实现苹果隔空投送传输文件相关链接" class="headerlink" title="🙂终极跨多平台实现苹果隔空投送传输文件相关链接"></a>🙂终极跨多平台实现苹果隔空投送传输文件相关链接</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://landrop.app/?ref=appinn" target="_blank" rel="noopener external nofollow noreferrer">LANDrop官网</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/weixin_51560103/article/details/125903178" target="_blank" rel="noopener external nofollow noreferrer">如何使用smb共享文件（win10），可多人同时下载</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://learn.microsoft.com/zh-cn/windows/win32/fileio/microsoft-smb-protocol-and-cifs-protocol-overview?redirectedfrom=MSDN" target="_blank" rel="noopener external nofollow noreferrer">Microsoft SMB 协议和 CIFS 协议概述</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;br&gt;

&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;windows 和 linux 用户福音来了，LANDrop+MICROSOFT EDGE 终极跨多平台实现苹果</summary>
      
    
    
    
    <category term="软件应用" scheme="https://blog.ganxb2.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="windows" scheme="https://blog.ganxb2.com/tags/windows/"/>
    
    <category term="win11应用软件推荐" scheme="https://blog.ganxb2.com/tags/win11%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    
    <category term="LANDrop" scheme="https://blog.ganxb2.com/tags/LANDrop/"/>
    
    <category term="linux" scheme="https://blog.ganxb2.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>win11利用wsl2实现linux安装node+git+nginx+docker搭建前端自动化工程</title>
    <link href="https://blog.ganxb2.com/27554.html"/>
    <id>https://blog.ganxb2.com/27554.html</id>
    <published>2023-04-17T18:28:37.000Z</published>
    <updated>2024-12-30T18:48:24.548Z</updated>
    
    <content type="html"><![CDATA[<br><h3 id="🙂-前言"><a href="#🙂-前言" class="headerlink" title="🙂 前言"></a>🙂 前言</h3><p>小波原计划是直接装个双系统上 linux 搭建 node+git+nginx+docker+gitee+gitlab+jenkins 前端自动化工程，在好友<a href="https://blog.2broear.com/" target="_blank" rel="noopener external nofollow noreferrer">2broear</a>的指引下，发现了 wsl2 …果断玩起来先。</p><h4 id="什么是-WSL2"><a href="#什么是-WSL2" class="headerlink" title="什么是 WSL2"></a>什么是 WSL2</h4><p><a href="https://learn.microsoft.com/zh-cn/windows/wsl/" target="_blank" rel="noopener external nofollow noreferrer">WSL</a> 全称为 Windows Subsystem for Linux，官网译为：适用于 Linux 的 Windows 子系统 (WSL)。</p><p>WSL1 和 WSL2 的比较:</p><table><thead><tr><th><strong>功能</strong></th><th>WSL 1</th><th>WSL 2</th></tr></thead><tbody><tr><td>Windows 和 Linux 之间的集成</td><td>✅</td><td>✅</td></tr><tr><td>启动时间短</td><td>✅</td><td>✅</td></tr><tr><td>与传统虚拟机相比，占用的资源量少</td><td>✅</td><td>✅</td></tr><tr><td>可以与当前版本的 VMware 和 VirtualBox 一起运行</td><td>✅</td><td>✅</td></tr><tr><td>托管 VM</td><td>❌</td><td>✅</td></tr><tr><td>完整的 Linux 内核</td><td>❌</td><td>✅</td></tr><tr><td>完全的系统调用兼容性</td><td>❌</td><td>✅</td></tr><tr><td>跨 OS 文件系统的性能</td><td>✅</td><td>❌</td></tr></tbody></table><p>小波个人体验总结：如果不是重度需求 linux 系统，完全可以使用 wsl2 来搭建 linux 系统相关的开发环境</p><br><h3 id="🙂-总纲"><a href="#🙂-总纲" class="headerlink" title="🙂 总纲"></a>🙂 总纲</h3><ul><li>检查环境，安装 wsl2 和 ubuntu22，注册 ubuntu22</li><li>安装 vscode 插件 wsl</li><li>更改 ubuntu22 镜像源</li><li>调整 wsl2 占用内存和 cpu，终端颜色丢失</li><li>安装 nvm , node , pnpm</li><li>安装 git</li><li>安装 ngnix</li><li>安装 docker</li><li>固定 wsl2 静态 ip</li><li>安装 zsh , oh my zsh</li></ul><br><h3 id="🤔-wsl2-实现-linux-安装-node-git-nginx-docker-搭建前端工程自动化步骤"><a href="#🤔-wsl2-实现-linux-安装-node-git-nginx-docker-搭建前端工程自动化步骤" class="headerlink" title="🤔 wsl2 实现 linux 安装 node+git+nginx+docker 搭建前端工程自动化步骤"></a>🤔 wsl2 实现 linux 安装 node+git+nginx+docker 搭建前端工程自动化步骤</h3><h4 id="第一步：检查环境，安装-wsl2-和-ubuntu22"><a href="#第一步：检查环境，安装-wsl2-和-ubuntu22" class="headerlink" title="第一步：检查环境，安装 wsl2 和 ubuntu22"></a>第一步：检查环境，安装 wsl2 和 ubuntu22</h4><p><mark>必须运行 Windows 10 版本 2004 及更高版本（内部版本 19041 及更高版本）或 Windows 11</mark></p><ol><li><p>任务栏 –&gt; 性能 –&gt; 确认右边的 CPU 相关信息中 虚拟化：已启用</p></li><li><p><code>win+r</code> 打开<strong>运行</strong>，输入 <code>systeminfo</code>，输出信息的最后一行确认 Hyper-V 是否支持</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">Hyper<span class="hljs-literal">-V</span> 要求:     已检测到虚拟机监控程序。将不显示 Hyper<span class="hljs-literal">-V</span> 所需的功能。<br></code></pre></td></tr></table></figure></li><li><p><code>win+r</code>打开运行，输入 <code>optionalfeatures</code>，如图，勾选 <strong>适用于 Linux 的 Windows 子系统</strong>，<strong>虚拟机平台</strong>，<strong>Hyper-V</strong></p><img src="https://article.biliimg.com/bfs/article/2b591e7c3b7f62ce5a95dbd17867f48296724c05.jpg@1e_1c.webp" alt="Hyper-V"  /><br><blockquote><p><span class="label label-warning">注意</span></p><p>如果你跟小波一样都是 win11 家庭版，很可能没有 <strong>Hyper-V</strong> 选项</p><p>解决办法：</p><p>桌面新建个文本.txt，复制以下代码贴入，然后更改文件名：<strong>hyper.cmd</strong>，再<strong>右键以管理员身份运行</strong>，下载会有点久，下载完成后重启电脑</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">pushd</span> <span class="hljs-string">&quot;%~dp0&quot;</span><br><span class="hljs-built_in">dir</span> /b %SystemRoot%\servicing\Packages\*Hyper<span class="hljs-literal">-V</span>*.mum &gt;hyper<span class="hljs-literal">-v</span>.txt<br><span class="hljs-keyword">for</span> /f %%i <span class="hljs-keyword">in</span> (<span class="hljs-string">&#x27;findstr /i . hyper-v.txt 2^&gt;nul&#x27;</span>) <span class="hljs-keyword">do</span> dism /online /norestart /<span class="hljs-built_in">add-package</span>:<span class="hljs-string">&quot;%SystemRoot%\servicing\Packages\%%i&quot;</span><br><span class="hljs-built_in">del</span> hyper<span class="hljs-literal">-v</span>.txt<br>Dism /online /<span class="hljs-built_in">enable-feature</span> /featurename:Microsoft<span class="hljs-literal">-Hyper-V-All</span> /LimitAccess /ALL<br></code></pre></td></tr></table></figure></blockquote></li><li><p>windows 商店安装 wsl2 和 ubuntu22</p><p><img src="https://article.biliimg.com/bfs/article/6f5f5f9a815858a7686e886697954481c2ee6a0c.jpg@1e_1c.webp" alt="a0a9e5045faa4bdc92447d5374366512.png"></p><p><img src="https://article.biliimg.com/bfs/article/69aa2ca23a7295925bd301fc230ed3e0f2b640c3.jpg@1e_1c.webp" alt="2096509a4a7448e9ba6d521d6036bf08.png"></p><p>wsl2 安装成功的命令提示</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs powershell">用法: wsl.exe [参数] [选项<span class="hljs-type">...</span>] [命令行]<br>运行 Linux 二进制文件的参数:<br>如果未提供命令行，wsl.exe 将启动默认 shell。<br><span class="hljs-literal">--exec</span>, <span class="hljs-literal">-e</span> &lt;命令行&gt;<br>    在不使用默认 Linux Shell 的情况下执行指定的命令。<br><span class="hljs-literal">--</span><br>    按原样传递其余命令行。<br>选项:<br><span class="hljs-literal">--cd</span> &lt;目录&gt;<br>将指定目录设置为当前工作目录。<br>如果使用了 ~，则将使用 Linux 用户的主页路径。如果路径<br>以 / 字符开头，将被解释为绝对 Linux 路径。<br>否则，该值一定是绝对 Windows 路径。<br><span class="hljs-literal">--distribution</span>, <span class="hljs-literal">-d</span> &lt;分发&gt;<br>    运行指定分发。<br><span class="hljs-literal">--user</span>, <span class="hljs-literal">-u</span> &lt;用户名&gt;<br>    以指定用户身份运行。<br><span class="hljs-literal">--system</span><br>    为系统分发启动外壳。<br>用于管理适用于 Linux 的 Windows 子系统的参数:<br><span class="hljs-literal">--help</span><br>    显示用法信息。<br><span class="hljs-literal">--install</span> [选项]<br>    安装额外的适用于 Linux 的 Windows 子系统分发。<br>     要获得有效分发列表，请使用“wsl <span class="hljs-literal">--list</span> <span class="hljs-literal">--online</span>”。<br>    选项:<br>        <span class="hljs-literal">--distribution</span>, <span class="hljs-literal">-d</span> [参数]<br>            按名称下载并安装分发。<br>            参数:<br>                有效分发名称(不区分大小写)。<br>            示例:<br>                wsl <span class="hljs-literal">--install</span> <span class="hljs-literal">-d</span> Ubuntu<br>                wsl <span class="hljs-literal">--install</span> <span class="hljs-literal">--distribution</span> Debian<br><span class="hljs-literal">--set-default-version</span> &lt;Version&gt;<br>    更改新分发的默认安装版本。<br><span class="hljs-literal">--shutdown</span><br>     立即终止所有运行的分发及 WSL <span class="hljs-number">2</span><br>    轻型实用工具虚拟机。<br><span class="hljs-literal">--status</span><br>    显示适用于 Linux 的 Windows 子系统的状态。<br><span class="hljs-literal">--update</span> [<span class="hljs-type">Options</span>]<br>    如果未指定任何选项，则将 WSL <span class="hljs-number">2</span> 内核更新<br>    为最新版本。<br>    选项:<br>        <span class="hljs-literal">--rollback</span><br>            恢复为 WSL <span class="hljs-number">2</span> 内核的先前版本。<br>        <span class="hljs-literal">--inbox</span><br>            仅更新收件箱 WSL <span class="hljs-number">2</span> 内核。不要从 Microsoft Store 下载 WSL。<br>        <span class="hljs-literal">--web-download</span><br>            从 Internet 而不是 Microsoft Store 下载最新版本的 WSL。<br>用于管理适用于 Linux 的 Windows 子系统中的分发的参数:<br><span class="hljs-literal">--export</span> &lt;Distro&gt; &lt;FileName&gt;<br>    将分发导出到 tar 文件。<br>    对于标准输出，文件名可以是 -。<br><span class="hljs-literal">--import</span> &lt;Distro&gt; &lt;InstallLocation&gt; &lt;FileName&gt; [<span class="hljs-type">Options</span>]<br>    将指定的 tar 文件作为新分发导入。<br>    对于标准输入，文件名可以是 -。<br>    选项:<br>        <span class="hljs-literal">--version</span> &lt;Version&gt;<br>            指定要用于新分发的版本。<br><span class="hljs-literal">--list</span>, <span class="hljs-literal">-l</span> [<span class="hljs-type">Options</span>]<br>    列出分发。<br>    选项:<br>        <span class="hljs-literal">--all</span><br>            列出所有分发，包括<br>            当前正在安装或卸载的分发。<br>        <span class="hljs-literal">--running</span><br>            仅列出当前正在运行的分发。<br>        <span class="hljs-literal">--quiet</span>, <span class="hljs-literal">-q</span><br>            仅显示分发名称。<br>        <span class="hljs-literal">--verbose</span>, <span class="hljs-literal">-v</span><br>            显示所有分发的详细信息。<br>        <span class="hljs-literal">--online</span>, <span class="hljs-literal">-o</span><br>            显示使用“wsl <span class="hljs-literal">--install</span>”进行安装的可用分发列表。<br><span class="hljs-literal">--set-default</span>, <span class="hljs-literal">-s</span> &lt;分发&gt;<br>    将分发设置为默认值。<br><span class="hljs-literal">--set-version</span> &lt;分发&gt; &lt;版本&gt;<br>    更改指定分发的版本。<br><span class="hljs-literal">--terminate</span>, <span class="hljs-literal">-t</span> &lt;分发&gt;<br>    终止指定的分发。<br><span class="hljs-literal">--unregister</span> &lt;分发&gt;<br>    注销分发并删除根文件系统。<br><span class="hljs-literal">--mount</span> &lt;磁盘&gt;<br>    在所有 WSL2 分发中连接并装载物理磁盘。<br>    选项:<br>        <span class="hljs-literal">--bare</span><br>            将磁盘连接到 WSL2，但不装载。<br>        <span class="hljs-literal">--type</span> &lt;类型&gt;<br>            装载磁盘时使用的文件系统，如果未指定，默认为 ext4。<br>        <span class="hljs-literal">--options</span> &lt;选项&gt;<br>            其他装载选项。<br>        <span class="hljs-literal">--partition</span> &lt;索引&gt;<br>            要装载的分区的索引，如果未指定，默认为整个磁盘。<br><span class="hljs-literal">--unmount</span> [磁盘]<br>     从所有 WSL2 分发中卸载并分离磁盘。<br>    如果不带参数调用，则会卸载并分离所有磁盘。<br><br></code></pre></td></tr></table></figure></li><li><p>windows 的终端中，直接打开 ubuntu</p><p><img src="https://article.biliimg.com/bfs/article/aec7d94326425f6835ef727e883faf5fdeabcbd2.jpg@1e_1c.webp" alt="2a30fea86a1a43eeb930bd96c3fc67a1.png"></p><p>初次打开 linux 发行版 ubuntu 时，需要设置用户名和密码，注册成功后提示如下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs powershell">To run a command as administrator (user <span class="hljs-string">&quot;root&quot;</span>), use <span class="hljs-string">&quot;sudo &lt;command&gt;&quot;</span>.<br>See <span class="hljs-string">&quot;man sudo_root&quot;</span> <span class="hljs-keyword">for</span> details.<br><br>Welcome to Ubuntu <span class="hljs-number">22.04</span>.<span class="hljs-number">1</span> LTS (GNU/Linux <span class="hljs-number">5.15</span>.<span class="hljs-number">90.1</span><span class="hljs-literal">-microsoft-standard-WSL2</span> x86_64)<br><br> * Documentation:  https://help.ubuntu.com<br> * Management:     https://landscape.canonical.com<br> * Support:        https://ubuntu.com/advantage<br><br>This message is shown once a day. To disable it please create the<br>/home/ganxiaobo/.hushlogin file.<br></code></pre></td></tr></table></figure><p>顺便把 root 也注册一下，方便后面使用</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo passswd root<br></code></pre></td></tr></table></figure></li></ol><h4 id="第二步：安装-vscode-插件-wsl"><a href="#第二步：安装-vscode-插件-wsl" class="headerlink" title="第二步：安装 vscode 插件 wsl"></a>第二步：安装 vscode 插件 wsl</h4><p>为了后续操作可视化，所以装这个插件远程连接</p><p><img src="https://article.biliimg.com/bfs/article/05226584a976c74187cc4c4450a63ff27f017ea7.jpg@1e_1c.webp" alt="vscode 插件 wsl"></p><p>安装好后点击 vscode 左下角的 <strong>&gt;&lt;</strong> 会自动连接，然后点击<strong>打开文件夹</strong>，把目录改成 <strong>&#x2F;</strong></p><h4 id="第三步：更改-ubuntu22-镜像源"><a href="#第三步：更改-ubuntu22-镜像源" class="headerlink" title="第三步：更改 ubuntu22 镜像源"></a>第三步：更改 ubuntu22 镜像源</h4><p>22.04 是 jammy 源，20.04 是 focal 源，但是这个小波自己测试发现 22 也可以使用 focal</p><ol><li><p>修改文件权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo chmod <span class="hljs-number">777</span> /etc/apt/sources.list<br></code></pre></td></tr></table></figure><p>关于 <code>chmod 777</code> 说明</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs powershell">文件或目录的权限又分为<span class="hljs-number">3</span>种：只读、只写、可执行。<br> Linux系统中，每个用户的角色和权限划分的很细致也很严格，每个文件（目录）都设有访问许可权限，利用这种机制来决定某个用户通过某种方式对文件（目录）进行读、写、执行等操作。<br><br>操作文件或目录的用户，有<span class="hljs-number">3</span>种不同类型：文件所有者、群组用户、其他用户。最高位表示文件所有者的权限值，中间位表示群组用户的权限值，最低位则表示其他用户的权限值，所以，chmod <span class="hljs-number">777</span>中，三个数字<span class="hljs-number">7</span>分别对应上面三种用户，权限值都为<span class="hljs-number">7</span>。<br><br>文件或目录的权限又分为<span class="hljs-number">3</span>种：只读、只写、可执行。<br><br>权限    权限数值    二进制    具体作用<br><span class="hljs-built_in">r</span>    <span class="hljs-number">4</span>    <span class="hljs-number">00000100</span>    read，读取。当前用户可以读取文件内容，当前用户可以浏览目录。<br>w    <span class="hljs-number">2</span>    <span class="hljs-number">00000010</span>    <span class="hljs-built_in">write</span>，写入。当前用户可以新增或修改文件内容，当前用户可以删除、移动目录或目录内文件。<br>x    <span class="hljs-number">1</span>    <span class="hljs-number">00000001</span>    execute，执行。当前用户可以执行文件，当前用户可以进入目录。<br>依照上面的表格，权限组合就是对应权限值求和，如下：<br><br><span class="hljs-number">7</span> = <span class="hljs-number">4</span> + <span class="hljs-number">2</span> + <span class="hljs-number">1</span>      读写运行权限<br><span class="hljs-number">5</span> = <span class="hljs-number">4</span> + <span class="hljs-number">1</span>             读和运行权限<br><br><span class="hljs-number">4</span> = <span class="hljs-number">4</span>                   只读权限<br><br>因此，大家也就明白了  chmod  <span class="hljs-number">754</span>  filename  命令的含义了。<br><br>这句命令的意思是将filename文件的读写运行权限赋予文件所有者，把读和运行的权限赋予群组用户，把读的权限赋予其他用户。<br></code></pre></td></tr></table></figure></li><li><p>sources.list 内容替换</p></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 默认注释了源码仓库，如有需要可自行取消注释</span><br>deb https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse<br><span class="hljs-comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><br>deb https://mirrors.ustc.edu.cn/ubuntu/ focal<span class="hljs-literal">-security</span> main restricted universe multiverse<br><span class="hljs-comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><br>deb https://mirrors.ustc.edu.cn/ubuntu/ focal<span class="hljs-literal">-updates</span> main restricted universe multiverse<br><span class="hljs-comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><br>deb https://mirrors.ustc.edu.cn/ubuntu/ focal<span class="hljs-literal">-backports</span> main restricted universe multiverse<br><span class="hljs-comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><br><span class="hljs-comment"># 预发布软件源，不建议启用</span><br><span class="hljs-comment"># deb https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="hljs-comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br></code></pre></td></tr></table></figure><ol start="3"><li><p>更新</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo apt update<br>// 输出<br>Reading package lists... Done<br>Building dependency tree... Done<br>Reading state information... Done<br><span class="hljs-number">1</span> package can be upgraded. Run <span class="hljs-string">&#x27;apt list --upgradable&#x27;</span> to see it.<br></code></pre></td></tr></table></figure></li></ol><h4 id="第四步：调整-wsl2-占用内存和-cpu，终端颜色丢失"><a href="#第四步：调整-wsl2-占用内存和-cpu，终端颜色丢失" class="headerlink" title="第四步：调整 wsl2 占用内存和 cpu，终端颜色丢失"></a>第四步：调整 wsl2 占用内存和 cpu，终端颜色丢失</h4><ol><li><p>用户文件夹 <code>C:\Users\yourname </code> 创建文件.txt，贴入以下代码然后改名 <code>Vmmem.wslconfig</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#.wslconfig</span><br>[<span class="hljs-type">wsl2</span>]<br>memory=<span class="hljs-number">3</span>GB //分配给WSL内存<span class="hljs-number">3</span>GB<br>swap=<span class="hljs-number">4</span>GB   //设置交换分区<span class="hljs-number">4</span>GB<br>localhostForwarding=true<br></code></pre></td></tr></table></figure></li><li><p>ubuntu 终端颜色丢失</p><p><code>home/yourname/.profile</code> 添加如下代码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$BASH</span>&quot;</span> ]; then<br>  <span class="hljs-keyword">if</span> [ -<span class="hljs-type">f</span> ~/<span class="hljs-type">.bashrc</span> ]; then<br>    . ~/.bashrc<br>  fi<br>fi<br>mesg n<br></code></pre></td></tr></table></figure><p>然后执行 <code>source ~/.profile</code></p></li></ol><h4 id="第五步：安装-nvm-node-pnpm"><a href="#第五步：安装-nvm-node-pnpm" class="headerlink" title="第五步：安装 nvm , node , pnpm"></a>第五步：安装 nvm , node , pnpm</h4><ol><li><p>创建文件 .bash_profile</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">vim .bash_profile<br></code></pre></td></tr></table></figure></li><li><p>贴入以下代码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">source ~/.bashrc<br></code></pre></td></tr></table></figure></li><li><p>然后 .bashrc &amp;&amp; .profile 贴入以下代码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">export NVM_DIR=<span class="hljs-string">&quot;/<span class="hljs-variable">$HOME</span>/.nvm&quot;</span><br>[ -<span class="hljs-type">s</span> <span class="hljs-string">&quot;<span class="hljs-variable">$NVM_DIR</span>/nvm.sh&quot;</span> ] &amp;&amp; . <span class="hljs-string">&quot;<span class="hljs-variable">$NVM_DIR</span>/nvm.sh&quot;</span><br></code></pre></td></tr></table></figure><p>如果用的命令，按下 ESC，然后 <code>:wq</code> 回车保存</p></li><li><p>执行下面这句代码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">souce .bash_profile<br></code></pre></td></tr></table></figure></li><li><p>报错找不到 souce，切换 root</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo <span class="hljs-literal">-s</span><br></code></pre></td></tr></table></figure></li><li><p>执行以下代码 选 <code>no</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo dpkg<span class="hljs-literal">-reconfigure</span> dash<br></code></pre></td></tr></table></figure></li><li><p>查看切换是否切换成功</p></li></ol><p>因为 ubuntu 默认使用软连接 <code>dash</code>，而 nvm 安装使用的 <code>bash</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">ls</span> <span class="hljs-literal">-l</span> /bin/sh<br>// 或者<br><span class="hljs-built_in">ls</span> <span class="hljs-literal">-l</span> `which sh`<br><br>// 输出<br>lrwxrwxrwx <span class="hljs-number">1</span> root root <span class="hljs-number">4</span> Feb <span class="hljs-number">11</span> <span class="hljs-number">05</span>:<span class="hljs-number">35</span> /usr/bin/sh -&gt; bash<br></code></pre></td></tr></table></figure><ol start="8"><li><p>安装 nvm</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">curl</span> <span class="hljs-literal">-o-</span> https://raw.githubusercontent.com/nvm<span class="hljs-literal">-sh</span>/nvm/master/install.sh | bash<br></code></pre></td></tr></table></figure></li><li><p>安装 node，pnpm</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">nvm install <span class="hljs-number">16.14</span><br>npm install pnpm <span class="hljs-literal">-g</span><br></code></pre></td></tr></table></figure></li></ol><h4 id="第六步：安装-git"><a href="#第六步：安装-git" class="headerlink" title="第六步：安装 git"></a>第六步：安装 git</h4><ol><li><p>提供 PPA 源安装方式，这是一种快速方便的软件安装方法</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo <span class="hljs-built_in">add-apt</span><span class="hljs-literal">-repository</span> ppa:git<span class="hljs-literal">-core</span>/ppa<br></code></pre></td></tr></table></figure></li><li><p>更新</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo apt update<br></code></pre></td></tr></table></figure></li><li><p>安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo apt install git<br></code></pre></td></tr></table></figure></li><li><p>查看</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">git <span class="hljs-literal">--version</span><br>// 输出<br>git version <span class="hljs-number">2.22</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure></li><li><p>配置 git 帐号和 ssh</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">git config <span class="hljs-literal">--global</span> user.name <span class="hljs-string">&quot;xxxx&quot;</span>    //xxx为你的用户名<br>git config <span class="hljs-literal">--global</span> user.email xxxx@xx.com     //xxx为你的邮箱<br></code></pre></td></tr></table></figure></li><li><p>查看 git 配置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">git config <span class="hljs-literal">--list</span><br>// 输出 git config <span class="hljs-literal">--list</span> 最后出现一个 (<span class="hljs-keyword">END</span>) ，要等一会才能退出来<br>原因： git日志过多最后显示<span class="hljs-keyword">end</span>无法输入命令，打印的信息是全部用户配置的，表示可以用了。<br>直接按 q (或+Enter) ， 即可退出；<br></code></pre></td></tr></table></figure></li><li><p>生成密钥</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">ssh<span class="hljs-literal">-keygen</span> <span class="hljs-literal">-t</span> rsa <span class="hljs-literal">-C</span> xxxx@xx.com    //xxx为你的邮箱<br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-warning">注意</span></p><p>和 windows 生成密钥一样，直接空格。这里的密码不是验证账户操作，是给 ssh 命令拉代码配置密码。</p><p>linux 这里 无法创建 .ssh 文件夹，密钥和公钥文件名是空。需要自己手动改一下</p><p>密钥文件 id_rsa 内容 <code>-----BEGIN OPENSSH PRIVATE KEY----- ...</code></p><p>公钥文件 id_rsa.pub 内容 <code>ssh-rsa ...</code></p></blockquote></li><li><p>github 网站添加公钥</p><p><img src="https://i0.hdslb.com/bfs/album/7afa044b52c1cb38da0d0d9c048d04e0fe90a325.jpg@1e_1c.webp" alt="github 网站添加公钥1"></p><p><img src="https://i0.hdslb.com/bfs/album/72b516855831ef6b910d6a4e8ac4bfda7be69785.jpg@1e_1c.webp" alt="github 网站添加公钥2"></p></li></ol><h4 id="第七步：安装-ngnix"><a href="#第七步：安装-ngnix" class="headerlink" title="第七步：安装 ngnix"></a>第七步：安装 ngnix</h4><p><mark>网上的教程都是让用 yum 安装，并且还得解包啥的，千万别这么干，后面会一连串的错误….</mark></p><p>直接使用 <code>apt</code> 安装</p><ol><li><p>安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo apt install nginx<br><br>// 目录说明<br>/usr/sbin/nginx：主程序<br>/etc/nginx：存放配置文件<br>/usr/share/nginx：存放静态文件<br>/var/log/nginx：存放日志<br></code></pre></td></tr></table></figure></li><li><p>测试初始配置是否能成功启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo service nginx <span class="hljs-built_in">start</span> <span class="hljs-comment">#通过ubuntu的服务管理器启动</span><br><br>// 相关命令<br>sudo service nginx stop<br>sudo service nginx restart<br></code></pre></td></tr></table></figure><p>浏览器输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs powershell">http://localhost/<br>// 或<br><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><br>// 页面输出<br>Welcome to nginx!<br><span class="hljs-keyword">If</span> you see this page, the nginx web server is successfully installed and working. Further configuration is required.<br><br><span class="hljs-keyword">For</span> online documentation and support please refer to nginx.org.<br>Commercial support is available at nginx.com.<br><br>Thank you <span class="hljs-keyword">for</span> <span class="hljs-keyword">using</span> nginx.<br></code></pre></td></tr></table></figure></li><li><p>修改配置 <code>/etc/nginx/nginx.conf</code></p><p>vscode 图形化操作会报错</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">Permissions (FileSystemError): Error: EACCES: permission denied<br></code></pre></td></tr></table></figure><p>解决方法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo chown <span class="hljs-literal">-R</span> myuser（用户名） /path/to/folder（文件路径）<br>// eg:<br>sudo chown <span class="hljs-literal">-R</span> ganxiaobo /etc/nginx/nginx.conf<br></code></pre></td></tr></table></figure><p>小波的配置参考</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs powershell">user ganxiaobo;<br>worker_processes auto;<br><br>events &#123;<br>worker_connections <span class="hljs-number">768</span>;<br>&#125;<br><br>http &#123;<br>sendfile on;<br>tcp_nopush on;<br>tcp_nodelay on;<br>keepalive_timeout <span class="hljs-number">65</span>;<br>types_hash_max_size <span class="hljs-number">2048</span>;<br><br>include /etc/nginx/mime.types;<br>default_type application/octet<span class="hljs-literal">-stream</span>;<br><br>add_header <span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="hljs-string">&#x27;*&#x27;</span>;<br>add_header <span class="hljs-string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="hljs-string">&#x27;X-Requested-With&#x27;</span>;<br>add_header <span class="hljs-string">&#x27;Access-Control-Allow-Methods&#x27;</span> GET,POST,PUT,DELETE,OPTIONS;<br>server &#123;<br>listen       <span class="hljs-number">80</span>;<br>server_name  <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>;<br>location / &#123;<br>root   /home/ganxiaobo/work<span class="hljs-literal">-area</span>/www;<br>index  index.html;<br>add_header X<span class="hljs-literal">-Frame-Options</span> ALLOWALL;<br>try_files <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ /index.html;<br>&#125;<br>&#125;<br>server &#123;<br>listen       <span class="hljs-number">8080</span>;<br>server_name  <span class="hljs-number">172.30</span>.<span class="hljs-number">166.156</span>;<br>location / &#123;<br>root   html;<br>index  index.html;<br>add_header X<span class="hljs-literal">-Frame-Options</span> ALLOWALL;<br>try_files <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ /index.html;<br>&#125;<br>&#125;<br><br>ssl_protocols TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span> TLSv1.<span class="hljs-number">3</span>; <span class="hljs-comment"># Dropping SSLv3, ref: POODLE</span><br>ssl_prefer_server_ciphers on;<br><br>access_log /var/log/nginx/access.log;<br>error_log /var/log/nginx/error.log;<br><br>gzip on;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-warning">注意</span></p><p>改了配置以后浏览器一直报错 500 ，是因为头部 <code>user</code> 字段没有改成对应的用户</p><p>查看 nginx 的启动对应用户</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">ps</span> aux | grep nginx<br>// 输出<br>root      <span class="hljs-number">6177</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">8676</span>   <span class="hljs-number">828</span> ?        Ss   <span class="hljs-number">22</span>:<span class="hljs-number">45</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> nginx: master <span class="hljs-keyword">process</span> /usr/sbin/nginx<br>ganxiao+  <span class="hljs-number">6178</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">9348</span>  <span class="hljs-number">3428</span> ?        S    <span class="hljs-number">22</span>:<span class="hljs-number">45</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> nginx: worker <span class="hljs-keyword">process</span><br>ganxiao+  <span class="hljs-number">6179</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">9348</span>  <span class="hljs-number">3420</span> ?        S    <span class="hljs-number">22</span>:<span class="hljs-number">45</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> nginx: worker <span class="hljs-keyword">process</span><br>ganxiao+  <span class="hljs-number">6180</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">9348</span>  <span class="hljs-number">3428</span> ?        S    <span class="hljs-number">22</span>:<span class="hljs-number">45</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> nginx: worker <span class="hljs-keyword">process</span><br>ganxiao+  <span class="hljs-number">6181</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">9348</span>  <span class="hljs-number">3424</span> ?        S    <span class="hljs-number">22</span>:<span class="hljs-number">45</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> nginx: worker <span class="hljs-keyword">process</span><br>ganxiao+  <span class="hljs-number">6182</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">9348</span>  <span class="hljs-number">3428</span> ?        S    <span class="hljs-number">22</span>:<span class="hljs-number">45</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> nginx: worker <span class="hljs-keyword">process</span><br>ganxiao+  <span class="hljs-number">6183</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">9348</span>  <span class="hljs-number">3428</span> ?        S    <span class="hljs-number">22</span>:<span class="hljs-number">45</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> nginx: worker <span class="hljs-keyword">process</span><br>ganxiao+  <span class="hljs-number">6184</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">9348</span>  <span class="hljs-number">3428</span> ?        S    <span class="hljs-number">22</span>:<span class="hljs-number">45</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> nginx: worker <span class="hljs-keyword">process</span><br>ganxiao+  <span class="hljs-number">6186</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">9348</span>  <span class="hljs-number">3428</span> ?        S    <span class="hljs-number">22</span>:<span class="hljs-number">45</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> nginx: worker <span class="hljs-keyword">process</span><br>ganxiao+  <span class="hljs-number">6198</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">4024</span>  <span class="hljs-number">2044</span> pts/<span class="hljs-number">2</span>    S+   <span class="hljs-number">22</span>:<span class="hljs-number">45</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> grep <span class="hljs-literal">--color</span>=auto <span class="hljs-literal">--exclude-dir</span>=.bzr <span class="hljs-literal">--exclude-dir</span>=CVS <span class="hljs-literal">--exclude-dir</span>=.git <span class="hljs-literal">--exclude-dir</span>=.hg <span class="hljs-literal">--exclude-dir</span>=.svn <span class="hljs-literal">--exclude-dir</span>=.idea <span class="hljs-literal">--exclude-dir</span>=.tox nginx<br></code></pre></td></tr></table></figure><p>解决方法：nginx.conf 这里的 <code>user</code> 要改成当前的用户</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">user yourname;<br></code></pre></td></tr></table></figure></blockquote></li></ol><h4 id="第八步：安装-docker"><a href="#第八步：安装-docker" class="headerlink" title="第八步：安装 docker"></a>第八步：安装 docker</h4><p><mark>很多文章包括菜鸟教程都是用的 <code>sudo apt-key add -</code> 来添加源，已经废弃了哈，千万不要用图形界面安装，会一直卡在加载服务 service is loading </mark></p><ol><li>添加源并把下载来的字符串添加到本地 trusted 数据库中</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">// 添加Docker的官方GPG密钥<br><span class="hljs-built_in">curl</span> <span class="hljs-literal">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg | sudo gpg <span class="hljs-literal">--dearmor</span> <span class="hljs-literal">-o</span> /usr/share/keyrings/docker<span class="hljs-literal">-archive-keyring</span>.gpg<br>// 使用下面命令设置stable仓库。<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;deb [arch=<span class="hljs-variable">$</span>(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu <span class="hljs-variable">$</span>(lsb_release -cs) stable&quot;</span> | sudo <span class="hljs-built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null<br></code></pre></td></tr></table></figure><ol start="2"><li><p>更新后安装 docker 相关依赖</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo apt update<br>sudo apt install docker<span class="hljs-literal">-ce</span> docker<span class="hljs-literal">-ce-cli</span> containerd.io <span class="hljs-literal">-y</span><br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-warning">注意</span></p><p>报错：<code>Certificate verification failed: The certificate is NOT trusted.</code></p><p>原因：因为证书错误</p><p>解决办法：</p><p>先把 <code>etc/apt/sources.list</code> 的 <code>https</code> 改成 <code>http</code>，执行 <code>sudo apt update</code></p><p>再把 <code>http</code> 改成 <code>https</code>，执行 <code>sudo apt update</code></p><p>再来执行上面的安装命令 <code>sudo apt install docker-ce docker-ce-cli containerd.io -y</code></p></blockquote></li><li><p>将本地用户加入 docker 组，以便该用户无需 <code>sudo</code> 即可执行 <code>docker</code> 命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo usermod <span class="hljs-literal">-aG</span> docker <span class="hljs-variable">$USER</span><br>newgrp docker<br></code></pre></td></tr></table></figure></li><li><p>启动看看是否安装成功</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo service docker <span class="hljs-built_in">start</span><br></code></pre></td></tr></table></figure></li><li><p>检查 dockerd 进程启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs powershell">service docker status<br>// 输出<br> * Docker is running<br><br>// 查看docker 启用者<br><span class="hljs-built_in">ps</span> aux|grep docker<br>// 输出<br>root        <span class="hljs-number">77</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.5</span> <span class="hljs-number">1760220</span> <span class="hljs-number">88460</span> ?       <span class="hljs-built_in">Sl</span>   Apr18   <span class="hljs-number">0</span>:<span class="hljs-number">01</span> /usr/bin/dockerd <span class="hljs-literal">-p</span> /var/run/docker.pid<br>root        <span class="hljs-number">90</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.3</span> <span class="hljs-number">1653120</span> <span class="hljs-number">56172</span> ?       Ssl  Apr18   <span class="hljs-number">0</span>:<span class="hljs-number">06</span> containerd <span class="hljs-literal">--config</span> /var/run/docker/containerd/containerd.toml <span class="hljs-literal">--log-level</span> info<br>ganxiao+  <span class="hljs-number">1327</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">4024</span>  <span class="hljs-number">2032</span> pts/<span class="hljs-number">6</span>    S+   <span class="hljs-number">01</span>:<span class="hljs-number">42</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> grep <span class="hljs-literal">--color</span>=auto <span class="hljs-literal">--exclude-dir</span>=.bzr <span class="hljs-literal">--exclude-dir</span>=CVS <span class="hljs-literal">--exclude-dir</span>=.git <span class="hljs-literal">--exclude-dir</span>=.hg <span class="hljs-literal">--exclude-dir</span>=.svn <span class="hljs-literal">--exclude-dir</span>=.idea <span class="hljs-literal">--exclude-dir</span>=.tox docker<br></code></pre></td></tr></table></figure></li><li><p>查看 Docker 版本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs powershell">docker version<br>// 输出<br>Client: Docker Engine - Community<br> Version:           <span class="hljs-number">23.0</span>.<span class="hljs-number">3</span><br> API version:       <span class="hljs-number">1.42</span><br> Go version:        go1.<span class="hljs-number">19.7</span><br> Git commit:        <span class="hljs-number">3</span>e7cbfd<br> Built:             Tue Apr  <span class="hljs-number">4</span> <span class="hljs-number">22</span>:<span class="hljs-number">05</span>:<span class="hljs-number">48</span> <span class="hljs-number">2023</span><br> OS/Arch:           linux/amd64<br> Context:           default<br><br>Server: Docker Engine - Community<br> Engine:<br>  Version:          <span class="hljs-number">23.0</span>.<span class="hljs-number">3</span><br>  API version:      <span class="hljs-number">1.42</span> (minimum version <span class="hljs-number">1.12</span>)<br>  Go version:       go1.<span class="hljs-number">19.7</span><br>  Git commit:       <span class="hljs-number">59118</span>bf<br>  Built:            Tue Apr  <span class="hljs-number">4</span> <span class="hljs-number">22</span>:<span class="hljs-number">05</span>:<span class="hljs-number">48</span> <span class="hljs-number">2023</span><br>  OS/Arch:          linux/amd64<br>  Experimental:     false<br> containerd:<br>  Version:          <span class="hljs-number">1.6</span>.<span class="hljs-number">20</span><br>  GitCommit:        <span class="hljs-number">2806</span>fc1057397dbaeefbea0e4e17bddfbd388f38<br> runc:<br>  Version:          <span class="hljs-number">1.1</span>.<span class="hljs-number">5</span><br>  GitCommit:        v1.<span class="hljs-number">1.5</span><span class="hljs-literal">-0-gf19387a</span><br> docker<span class="hljs-literal">-init</span>:<br>  Version:          <span class="hljs-number">0.19</span>.<span class="hljs-number">0</span><br>  GitCommit:        de40ad0<br></code></pre></td></tr></table></figure></li><li><p>建个容器</p><p>先去 <code>etc/docker</code> 建个文件 daemon.json，贴入以下代码，然后重启 <code>service docker restart</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 建议使用中国科技大学</span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://registry.docker-cn.com&quot;</span>,<span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>]<br>&#125;<br></code></pre></td></tr></table></figure><p>vim 命令创建文件后，<code>:wq</code> 保存并关闭</p><p>例子建个 hello-world</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs powershell">docker run hello<span class="hljs-literal">-world</span><br>// 输出<br>Unable to find image <span class="hljs-string">&#x27;hello-world:latest&#x27;</span> locally<br>latest: Pulling from library/hello<span class="hljs-literal">-world</span><br><span class="hljs-number">2</span>db29710123e: Pull complete<br>Digest: sha256:<span class="hljs-number">4</span>e83453afed1b4fa1a3500525091dbfca6ce1e66903fd4c01ff015dbcb1ba33e<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> hello<span class="hljs-literal">-world</span>:latest<br><br>Hello from Docker!<br>This message shows that your installation appears to be working correctly.<br><br>To generate this message, Docker took the following steps:<br> <span class="hljs-number">1</span>. The Docker client contacted the Docker daemon.<br> <span class="hljs-number">2</span>. The Docker daemon pulled the <span class="hljs-string">&quot;hello-world&quot;</span> image from the Docker Hub.<br>    (amd64)<br> <span class="hljs-number">3</span>. The Docker daemon created a new container from that image which runs the<br>    executable that produces the output you are currently reading.<br> <span class="hljs-number">4</span>. The Docker daemon streamed that output to the Docker client, which sent it<br>    to your terminal.<br><br>To <span class="hljs-keyword">try</span> something more ambitious, you can run an Ubuntu container with:<br> <span class="hljs-variable">$</span> docker run <span class="hljs-literal">-it</span> ubuntu bash<br><br>Share images, automate workflows, and more with a free Docker ID:<br> https://hub.docker.com/<br><br><span class="hljs-keyword">For</span> more examples and ideas, visit:<br> https://docs.docker.com/<span class="hljs-built_in">get-started</span>/<br></code></pre></td></tr></table></figure></li><li><p>查看容器(镜像)集合</p></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">docker images<br>// 输出<br>REPOSITORY    TAG       IMAGE ID       CREATED         SIZE<br>hello<span class="hljs-literal">-world</span>   latest    feb5d9fea6a5   <span class="hljs-number">18</span> months ago   <span class="hljs-number">13.3</span>kB<br></code></pre></td></tr></table></figure><h4 id="第九步：固定-wsl2-静态-ip"><a href="#第九步：固定-wsl2-静态-ip" class="headerlink" title="第九步：固定 wsl2 静态 ip"></a>第九步：固定 wsl2 静态 ip</h4><ol><li><p>windows 终端中查看 wsl2 子系统分发版</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wsl <span class="hljs-literal">-l</span><br>// 输出<br>适用于 Linux 的 Windows 子系统分发版:<br>Ubuntu<span class="hljs-literal">-22</span>.<span class="hljs-number">04</span> (默认)<br></code></pre></td></tr></table></figure></li><li><p>初始化脚本</p><p>假定你创建在 <code>C:\wsl2-start.bat</code>，贴入以下代码 注意这是 <code>Ubuntu-22.04</code> 和你的发行版本对应</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 初始化脚本，注意这是 Ubuntu-22.04 和你的发行版本对应</span><br>wsl <span class="hljs-literal">-d</span> Ubuntu<span class="hljs-literal">-22</span>.<span class="hljs-number">04</span> <span class="hljs-literal">-u</span> root /etc/init.wsl<br><span class="hljs-comment"># 添加一个网卡</span><br>netsh interface ip add address <span class="hljs-string">&quot;vEthernet (WSL)&quot;</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">50.93</span> <span class="hljs-number">255.255</span>.<span class="hljs-number">255.0</span><br></code></pre></td></tr></table></figure></li><li><p>创建自启动脚本</p><p>在 windows11 下 输入快捷键 <code>WIN+R</code> 打开运行窗口，输入 <code>shell:startup</code>，该目录下新建文本.txt，贴入以下代码后改名 ubuntu.vbs。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">set</span> ws=WScript.CreateObject(<span class="hljs-string">&quot;WScript.Shell&quot;</span>)<br>ws.Run <span class="hljs-string">&quot;C:\wsl2-start.bat&quot;</span>,<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure></li><li><p>回到 wsl2 中，创建文件并贴入代码，这里的创建路径和上面 9.2 步骤的 root 要一致</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo vim /etc/init.wsl<br>// 贴入内容<br><span class="hljs-comment">#network static ip</span><br>ip addr add <span class="hljs-number">192.168</span>.<span class="hljs-number">50.28</span>/<span class="hljs-number">24</span> broadcast <span class="hljs-number">192.168</span>.<span class="hljs-number">50.255</span> dev eth0 label eth0:<span class="hljs-number">1</span><br><span class="hljs-comment">#docker start</span><br>service docker <span class="hljs-built_in">start</span><br><br>// :wq 保存退出<br></code></pre></td></tr></table></figure></li><li><p>再授权，重启电脑</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo chmod +x /etc/init.wsl<br></code></pre></td></tr></table></figure></li><li><p>查看 ip</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs powershell">ifconfig<br>// 输出<br>docker0: flags=<span class="hljs-number">4099</span>&lt;UP,BROADCAST,MULTICAST&gt;  mtu <span class="hljs-number">1500</span><br>        inet <span class="hljs-number">172.17</span>.<span class="hljs-number">0.1</span>  netmask <span class="hljs-number">255.255</span>.<span class="hljs-number">0.0</span>  broadcast <span class="hljs-number">172.17</span>.<span class="hljs-number">255.255</span><br>        ether <span class="hljs-number">02</span>:<span class="hljs-number">42</span>:<span class="hljs-number">5</span>e:bd:<span class="hljs-number">5</span>e:ce  txqueuelen <span class="hljs-number">0</span>  (Ethernet)<br>        RX packets <span class="hljs-number">0</span>  bytes <span class="hljs-number">0</span> (<span class="hljs-number">0.0</span> B)<br>        RX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span>  overruns <span class="hljs-number">0</span>  frame <span class="hljs-number">0</span><br>        TX packets <span class="hljs-number">0</span>  bytes <span class="hljs-number">0</span> (<span class="hljs-number">0.0</span> B)<br>        TX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span> overruns <span class="hljs-number">0</span>  carrier <span class="hljs-number">0</span>  collisions <span class="hljs-number">0</span><br><br>eth0: flags=<span class="hljs-number">4163</span>&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="hljs-number">1500</span><br>        inet <span class="hljs-number">172.30</span>.<span class="hljs-number">166.156</span>  netmask <span class="hljs-number">255.255</span>.<span class="hljs-number">240.0</span>  broadcast <span class="hljs-number">172.30</span>.<span class="hljs-number">175.255</span><br>        inet6 fe80::<span class="hljs-number">215</span>:<span class="hljs-number">5</span>dff:fe1a:ea58  prefixlen <span class="hljs-number">64</span>  scopeid <span class="hljs-number">0</span>x20&lt;link&gt;<br>        ether <span class="hljs-number">00</span>:<span class="hljs-number">15</span>:<span class="hljs-number">5</span>d:<span class="hljs-number">1</span>a:ea:<span class="hljs-number">58</span>  txqueuelen <span class="hljs-number">1000</span>  (Ethernet)<br>        RX packets <span class="hljs-number">73</span>  bytes <span class="hljs-number">7159</span> (<span class="hljs-number">7.1</span> KB)<br>        RX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span>  overruns <span class="hljs-number">0</span>  frame <span class="hljs-number">0</span><br>        TX packets <span class="hljs-number">11</span>  bytes <span class="hljs-number">866</span> (<span class="hljs-number">866.0</span> B)<br>        TX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span> overruns <span class="hljs-number">0</span>  carrier <span class="hljs-number">0</span>  collisions <span class="hljs-number">0</span><br><br>eth0:<span class="hljs-number">1</span>: flags=<span class="hljs-number">4163</span>&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="hljs-number">1500</span><br>        inet <span class="hljs-number">192.168</span>.<span class="hljs-number">50.28</span>  netmask <span class="hljs-number">255.255</span>.<span class="hljs-number">255.0</span>  broadcast <span class="hljs-number">192.168</span>.<span class="hljs-number">50.255</span><br>        ether <span class="hljs-number">00</span>:<span class="hljs-number">15</span>:<span class="hljs-number">5</span>d:<span class="hljs-number">1</span>a:ea:<span class="hljs-number">58</span>  txqueuelen <span class="hljs-number">1000</span>  (Ethernet)<br><br>lo: flags=<span class="hljs-number">73</span>&lt;UP,LOOPBACK,RUNNING&gt;  mtu <span class="hljs-number">65536</span><br>        inet <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>  netmask <span class="hljs-number">255.0</span>.<span class="hljs-number">0.0</span><br>        inet6 ::<span class="hljs-number">1</span>  prefixlen <span class="hljs-number">128</span>  scopeid <span class="hljs-number">0</span>x10&lt;host&gt;<br>        loop  txqueuelen <span class="hljs-number">1000</span>  (Local Loopback)<br>        RX packets <span class="hljs-number">0</span>  bytes <span class="hljs-number">0</span> (<span class="hljs-number">0.0</span> B)<br>        RX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span>  overruns <span class="hljs-number">0</span>  frame <span class="hljs-number">0</span><br>        TX packets <span class="hljs-number">0</span>  bytes <span class="hljs-number">0</span> (<span class="hljs-number">0.0</span> B)<br>        TX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span> overruns <span class="hljs-number">0</span>  carrier <span class="hljs-number">0</span>  collisions <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>192.168.50.28 就是 WSL 的固定 IP 地址了。</p></li></ol><h4 id="第十步：安装-zsh-oh-my-zsh"><a href="#第十步：安装-zsh-oh-my-zsh" class="headerlink" title="第十步：安装 zsh , oh my zsh"></a>第十步：安装 zsh , oh my zsh</h4><ol><li><p>安装 zsh</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo apt install zsh<br></code></pre></td></tr></table></figure><p>成功后提示如下，选 y</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-keyword">Do</span> you want to change your default shell to zsh? [<span class="hljs-type">Y</span>/<span class="hljs-type">n</span>] y<br>Changing your shell to /usr/bin/zsh...<br>[<span class="hljs-type">sudo</span>] password <span class="hljs-keyword">for</span> ganxiaobo:<br>Shell successfully changed to <span class="hljs-string">&#x27;/usr/bin/zsh&#x27;</span>.<br><br></code></pre></td></tr></table></figure></li><li><p>安装 oh my zsh</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sh <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;<span class="hljs-variable">$</span>(curl -fsSL https://gitee.com/shmhlsy/oh-my-zsh-install.sh/raw/master/install.sh)&quot;</span><br></code></pre></td></tr></table></figure><p>成功后输出</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs powershell">        __                                     __<br>  ____  / /_     ____ ___  __  __   ____  _____/ /_<br> / __ \/ __ \   / __ `__ \/ / / /  /_  / / ___/ __ \<br>/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / /<br>\____/_/ /_/  /_/ /_/ /_/\__, /    /___/____/_/ /_/<br>                        /____/                       ....is now installed!<br><br><br>Before you scream <span class="hljs-built_in">Oh</span> My Zsh! look over the `.zshrc` file to <span class="hljs-built_in">select</span> plugins, themes, and options.<br><br>• Follow us on Twitter: @ohmyzsh<br>• Join our Discord community: Discord server<br>• Get stickers, t<span class="hljs-literal">-shirts</span>, coffee mugs and more: Planet Argon Shop<br></code></pre></td></tr></table></figure></li><li><p>安装 zsh 插件</p><p>进入 oh-my-zsh 的 plugings 文件夹</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">cd</span> ~/.oh<span class="hljs-literal">-my-zsh</span>/custom/plugins/<br></code></pre></td></tr></table></figure></li><li><p>安装 zsh-autosuggestions</p><p>zsh-autosuggestions 是一个补全插件，会根据输入的内容，关联出历史记录。按方向键右键，则会补全。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">git clone https://github.com/zsh<span class="hljs-literal">-users</span>/zsh<span class="hljs-literal">-autosuggestions</span><br></code></pre></td></tr></table></figure></li><li><p>安装 zsh-syntax-highlighting</p><p>zsh-syntax-highlighting 是一个高亮插件，会高亮语法，合法的命令是绿色，不合法在的命令会报红。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">git clone https://github.com/zsh<span class="hljs-literal">-users</span>/zsh<span class="hljs-literal">-syntax-highlighting</span>.git<br></code></pre></td></tr></table></figure></li><li><p>配置环境</p><p>打开.zshrc 文件，输入命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">vim ~/.zshrc<br></code></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs powershell">// 注释原来的代码改成下面<br><span class="hljs-comment">#plugins=(git)</span><br>plugins=(<br>git<br>  zsh<span class="hljs-literal">-autosuggestions</span><br>  zsh<span class="hljs-literal">-syntax-highlighting</span><br>)<br></code></pre></td></tr></table></figure><p>运行 <code>source ~/.zshrc</code> 命令，就可以生效了</p><p><img src="https://article.biliimg.com/bfs/article/e1b25217914e58af3a7ed75960851dc8ca8a26e5.jpg@1e_1c.webp" alt="oh my posh"></p><blockquote><p><span class="label label-warning">注意</span></p><p>更换 zsh 后原来的 nvm 装的 node 命令都会找不到，需要把<strong>5.3 步骤</strong> .bashrc 增加的代码 copy 到 .zshrc</p></blockquote></li></ol><br><h3 id="😫-搭建过程中小波遇见的问题"><a href="#😫-搭建过程中小波遇见的问题" class="headerlink" title="😫 搭建过程中小波遇见的问题"></a>😫 搭建过程中小波遇见的问题</h3><ol><li><p>关于 <code>apt</code> 和 <code>apt-get</code></p><p>简单理解 <code>apt</code> 是 <code>apt-get</code> 的升级版，如果版本环境允许的话，尽量用 <code>apt</code> 相关命令</p></li></ol><br><h3 id="😊-来自小波的-bilibili-视频教程"><a href="#😊-来自小波的-bilibili-视频教程" class="headerlink" title="😊 来自小波的 bilibili 视频教程"></a>😊 来自小波的 bilibili 视频教程</h3><br><h3 id="🙂-小波用到的相关参考资料链接"><a href="#🙂-小波用到的相关参考资料链接" class="headerlink" title="🙂 小波用到的相关参考资料链接"></a>🙂 小波用到的相关参考资料链接</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/weixin_51245887/article/details/124393376" target="_blank" rel="noopener external nofollow noreferrer">https://blog.csdn.net/weixin_51245887/article/details/124393376</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/eastking0530/article/details/126613992" target="_blank" rel="noopener external nofollow noreferrer">https://blog.csdn.net/eastking0530/article/details/126613992</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://blog.csdn.net/qq_41554005/article/details/124140839" target="_blank" rel="noopener external nofollow noreferrer">https://blog.csdn.net/qq_41554005/article/details/124140839</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://blog.csdn.net/qq_42362605/article/details/124898062" target="_blank" rel="noopener external nofollow noreferrer">https://blog.csdn.net/qq_42362605/article/details/124898062</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://blog.csdn.net/qq_20466211/article/details/124907397" target="_blank" rel="noopener external nofollow noreferrer">https://blog.csdn.net/qq_20466211/article/details/124907397</a><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span><a href="https://xuexb.com/post/nodejs-nginx-webserver.html" target="_blank" rel="noopener external nofollow noreferrer">https://xuexb.com/post/nodejs-nginx-webserver.html</a><a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;br&gt;

&lt;h3 id=&quot;🙂-前言&quot;&gt;&lt;a href=&quot;#🙂-前言&quot; class=&quot;headerlink&quot; title=&quot;🙂 前言&quot;&gt;&lt;/a&gt;🙂 前言&lt;/h3&gt;&lt;p&gt;小波原计划是直接装个双系统上 linux 搭建 node+git+nginx+docker+gitee+</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="前端" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="windows" scheme="https://blog.ganxb2.com/tags/windows/"/>
    
    <category term="linux" scheme="https://blog.ganxb2.com/tags/linux/"/>
    
    <category term="前端" scheme="https://blog.ganxb2.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="编程" scheme="https://blog.ganxb2.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="git" scheme="https://blog.ganxb2.com/tags/git/"/>
    
    <category term="nodejs" scheme="https://blog.ganxb2.com/tags/nodejs/"/>
    
    <category term="pnpm" scheme="https://blog.ganxb2.com/tags/pnpm/"/>
    
    <category term="wsl2" scheme="https://blog.ganxb2.com/tags/wsl2/"/>
    
    <category term="nginx" scheme="https://blog.ganxb2.com/tags/nginx/"/>
    
    <category term="docker" scheme="https://blog.ganxb2.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>windows11系统更新后笔记本电脑屏幕偏白偏亮</title>
    <link href="https://blog.ganxb2.com/24577.html"/>
    <id>https://blog.ganxb2.com/24577.html</id>
    <published>2023-04-15T12:15:04.000Z</published>
    <updated>2024-12-30T18:48:24.546Z</updated>
    
    <content type="html"><![CDATA[<br><h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p>忘记从哪个版本开始，windows11 每次系统更新后重启后电脑屏幕出现偏白偏亮，一开始小波还以为是自己 surface book3 出现接触不良导致。</p><p>因为 surface book3 是平板+笔记本的结合体，可以快拆，容易导致接触不良之类，但是后来百度发现可能是 windows11 自身问题，主要集中在笔记本电脑和二合一平板笔记本上，因为笔记本的亮度设置中有个优化选项可能和 windows11 系统上有所关联，台式是没有的。</p><br><h3 id="😚笔记本电脑屏幕偏白偏亮问题产生的环境"><a href="#😚笔记本电脑屏幕偏白偏亮问题产生的环境" class="headerlink" title="😚笔记本电脑屏幕偏白偏亮问题产生的环境"></a>😚笔记本电脑屏幕偏白偏亮问题产生的环境</h3><ul><li><p>软件</p><p>windows11 家庭版</p><p>版本 21H2</p><p>操作系统版本 22000.1817</p></li><li><p>硬件</p><p>笔记本电脑 或 surface book3 一类的二合一平板+笔记本</p></li></ul><br><h3 id="😚解决办法"><a href="#😚解决办法" class="headerlink" title="😚解决办法"></a>😚解决办法</h3><p><img src="https://article.biliimg.com/bfs/article/36189fe867359fd0358ff0d93c877a8509994f2e.jpg@1e_1c.webp" alt="windows11系统更新后屏幕亮度偏白偏亮"></p><p><code>window11 --&gt; 设置 --&gt; 系统 --&gt; 屏幕 --&gt; 亮度 --&gt; 通过优化显示的内容和亮度降低电池能耗</code></p><p>把这个勾选去掉，重启电脑通常屏幕亮度就恢复了，再把这个选项勾上，后续只要不系统更新，不会再出现屏幕偏白偏亮</p><br>]]></content>
    
    
      
      
    <summary type="html">&lt;br&gt;

&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;忘记从哪个版本开始，windows11 每次系统更新后重启后电脑屏幕出现偏白偏亮，一开始小波还以为是自己 sur</summary>
      
    
    
    
    <category term="软件应用" scheme="https://blog.ganxb2.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
    <category term="常见电脑问题" scheme="https://blog.ganxb2.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/%E5%B8%B8%E8%A7%81%E7%94%B5%E8%84%91%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="windows" scheme="https://blog.ganxb2.com/tags/windows/"/>
    
    <category term="常见电脑问题" scheme="https://blog.ganxb2.com/tags/%E5%B8%B8%E8%A7%81%E7%94%B5%E8%84%91%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>uni-app多端小程序cli工程项目如何离线打包成安卓APP</title>
    <link href="https://blog.ganxb2.com/25075.html"/>
    <id>https://blog.ganxb2.com/25075.html</id>
    <published>2023-04-10T01:32:48.000Z</published>
    <updated>2024-12-30T18:48:24.547Z</updated>
    
    <content type="html"><![CDATA[<br><h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p>前一篇文章小波已经用 <a href="https://blog.ganxb2.com/3462.html">vue3+typescript+pinia+pnpm+vite+uni-app+uni-ui</a> 搭建好工程项目，打包h5或者小程序完成也没有问题，接下来当然要实现uniApp如何打包成安卓APP。</p><br><h3 id="😍uni-app-vue3-vite-typescript-pinia-uni-ui-cli工程项目打包成安卓app实机效果"><a href="#😍uni-app-vue3-vite-typescript-pinia-uni-ui-cli工程项目打包成安卓app实机效果" class="headerlink" title="😍uni-app(vue3+vite+typescript+pinia+uni-ui)cli工程项目打包成安卓app实机效果"></a>😍uni-app(vue3+vite+typescript+pinia+uni-ui)cli工程项目打包成安卓app实机效果</h3><p><img src="https://article.biliimg.com/bfs/article/c9b2a733abb357ca9370bf51fe2985fd3ae8c6ba.jpg@1e_1c.webp" alt="uni-app(vue3+vite+typescript+pinia+uni-ui)微信小程序APP工程模版实体截图"></p><p><a href="https://gitee.com/ganxb2/uniapp_vue3_vite_pinia" target="_blank" rel="noopener external nofollow noreferrer">gitee仓库传送门</a></p><br><h3 id="🧐环境版本"><a href="#🧐环境版本" class="headerlink" title="🧐环境版本"></a>🧐环境版本</h3><ul><li><p>node</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">node <span class="hljs-literal">-v</span><br>// 输出<br>v16.<span class="hljs-number">13.1</span><br></code></pre></td></tr></table></figure></li><li><p>javasdk </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell">java <span class="hljs-literal">-version</span><br>// 输出<br>java version <span class="hljs-string">&quot;1.8.0_73&quot;</span><br>Java(TM) SE Runtime Environment (build <span class="hljs-number">1.8</span>.<span class="hljs-number">0</span>_73<span class="hljs-literal">-b02</span>)<br>Java HotSpot(TM) Client VM (build <span class="hljs-number">25.73</span><span class="hljs-literal">-b02</span>, mixed mode)<br></code></pre></td></tr></table></figure></li><li><p>HBuildX <code>3.7.9</code></p></li><li><p>android studio <code>4.2.2</code></p></li></ul><br><h3 id="🙂总纲"><a href="#🙂总纲" class="headerlink" title="🙂总纲"></a>🙂总纲</h3><ol><li>下载安装 HBuildX</li><li>下载安装 android studio</li><li>下载 android 离线 sdk (需要和你的 HBuilderX 、uni-app-cli 版本一致，实现打包的基础包)</li><li>下载安装 jdk (配置 android studio 是否成功打包就依赖它)</li><li>生成安卓签名证书文件及离线打包 key (1. JRE 环境手动生成 2. Dcloud开发者中心自动生成)</li><li>HBuildX 本地打包App 资源</li><li>配置 android 离线 sdk 工程</li><li>配置 android studio 打包</li></ol><br><h3 id="🤔uniApp工程化项目离线打包安卓APP实操具体步骤"><a href="#🤔uniApp工程化项目离线打包安卓APP实操具体步骤" class="headerlink" title="🤔uniApp工程化项目离线打包安卓APP实操具体步骤"></a>🤔uniApp工程化项目离线打包安卓APP实操具体步骤</h3><h4 id="第一步：下载安装-HBuildX"><a href="#第一步：下载安装-HBuildX" class="headerlink" title="第一步：下载安装 HBuildX"></a>第一步：下载安装 HBuildX</h4><p>直接去 uni-app 官网下载<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="uni-app官网 HBuildX">[1]</span></a></sup></p><blockquote><p><span class="label label-info">提示</span></p><p>如果用的cli搭建项目一定要跟 HBuildX 版本一致。android 离线 sdk 压缩包也必须同版本</p></blockquote><br><h4 id="第二步：下载安装-android-studio"><a href="#第二步：下载安装-android-studio" class="headerlink" title="第二步：下载安装 android studio"></a>第二步：下载安装 android studio</h4><p>去谷歌开发者网站<sup id="fnref:7" class="footnote-ref"><a href="#fn:7" rel="footnote"><span class="hint--top hint--rounded" aria-label=" android studio">[7]</span></a></sup>下载 android studio</p><blockquote><p><span class="label label-info">提示</span></p><p>版本最好在4.0以上，例如小波下载的是 <code>4.2.2</code>  - 2021年6月30日</p><p>第一次打开会提示 ，可以不管它(这是因为我们离线 sdk 项目还没有配置)，或者参考这篇文章<sup id="fnref:11" class="footnote-ref"><a href="#fn:11" rel="footnote"><span class="hint--top hint--rounded" aria-label="unable to access android sdk add-on list解决方案">[11]</span></a></sup></p></blockquote><br><h4 id="第三步：下载-android-离线-sdk-压缩包"><a href="#第三步：下载-android-离线-sdk-压缩包" class="headerlink" title="第三步：下载 android 离线 sdk 压缩包"></a>第三步：下载 android 离线 sdk 压缩包</h4><p>直接去 uni-app 官网下载<sup id="fnref:8" class="footnote-ref"><a href="#fn:8" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://nativesupport.dcloud.net.cn/AppDocs/download/android.html">[8]</span></a></sup></p><blockquote><p><span class="label label-info">提示</span></p><p>要和 HBuildX 、uni-app-cli 脚手架版本一致</p></blockquote><br><h4 id="第四步：下载安装-jdk"><a href="#第四步：下载安装-jdk" class="headerlink" title="第四步：下载安装  jdk"></a>第四步：下载安装  jdk</h4><p>这是非常关键的一步，配置 android studio 是否成功打包就依赖它</p><ol><li>直接去 oracle 官网下载<sup id="fnref:9" class="footnote-ref"><a href="#fn:9" rel="footnote"><span class="hint--top hint--rounded" aria-label="oracle 官网">[9]</span></a></sup></li></ol><blockquote><p><span class="label label-warning">注意</span></p><p>小波自己测试不管是否科学上网都无法登录成功进入网站下载….所以放弃这条路吧</p><p>有同学走通也请顺便教小波一下~~</p></blockquote><ol start="2"><li>去其他平台下载，也可以直接下载小波上传到百度云的安装包<sup id="fnref:10" class="footnote-ref"><a href="#fn:10" rel="footnote"><span class="hint--top hint--rounded" aria-label=" jdk 廿壴博客百度云下载">[10]</span></a></sup></li><li>查看是否安装成功，终端中执行命令 <code>java -version</code>，如果输出内容和上面环境版本中一致则ok</li></ol><br><h4 id="第五步：生成安卓签名证书文件及离线打包-key"><a href="#第五步：生成安卓签名证书文件及离线打包-key" class="headerlink" title="第五步：生成安卓签名证书文件及离线打包 key"></a>第五步：生成安卓签名证书文件及离线打包 key</h4><p>手动党请参考这篇文章<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="uniApp Android平台签名证书(.keystore)">[4]</span></a></sup>，小波采用的是去 Dcloud 开发者<sup id="fnref:5" class="footnote-ref"><a href="#fn:5" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://dev.dcloud.net.cn/">[5]</span></a></sup>中心生成，具体步骤如下</p><ol><li><p>点击<strong>我的应用</strong> –&gt; <strong>应用名称</strong></p><img src="https://article.biliimg.com/bfs/article/31f08900635732d3546f1e0a333093b90e431d3d.jpg@1e_1c.webp" alt="应用名称"  /></li><li><p>跳到应用信息页面，再切换tab选项卡 <strong>android 云端证书</strong> –&gt; <strong>创建证书</strong> –&gt; <strong>下载证书</strong></p><p><img src="https://article.biliimg.com/bfs/article/ca382d77e35de9b3e49e702e55df58c6929d9a3f.png@1e_1c.webp" alt="android 云端证书"></p><blockquote><p><span class="label label-warning">注意</span></p><p><strong>证书详情</strong> –&gt; 弹框里点击 <strong>查看证书密码</strong></p></blockquote></li><li><p>切到 <strong>各平台信息</strong> –&gt; <strong>新增</strong> –&gt; <strong>填入相关信息并提交</strong></p><img src="https://article.biliimg.com/bfs/article/50e60bc5996dceb9b387df273e0300466e159aeb.jpg@1e_1c.webp" alt="填入相关信息并提交"  /><blockquote><p><span class="label label-warning">注意</span></p><ol><li>包名格式为xxx.xxx.xxx，这个必须和后面配置 android 离线 sdk 工程中的 build.gradle 修改值一致</li><li>android 应用…信息都在 <strong>证书详情</strong> 里查看</li></ol></blockquote></li><li><p>选项卡里会新增一条信息，点击 <strong>离线打包key</strong> 字段的 <strong>查看</strong>。</p><p><img src="https://article.biliimg.com/bfs/article/2bcc21bb346816d0fe775c2e83efd805bace1681.jpg" alt=" 离线打包key1"></p><p><img src="https://article.biliimg.com/bfs/article/bca740ca409ceb30c505b5361e83e018b0e69d1f.jpg@1e_1c.webp" alt=" 离线打包key2"></p></li></ol><br><p><em>这里获得的信息和证书都是为后面配置 android 离线 sdk 工程所需</em></p><h4 id="第六步：HBuildX-本地打包App-资源"><a href="#第六步：HBuildX-本地打包App-资源" class="headerlink" title="第六步：HBuildX 本地打包App 资源"></a>第六步：HBuildX 本地打包App 资源</h4><p>选中项目 –&gt; <strong>发行</strong> –&gt; <strong>原生APP本地打包</strong> –&gt; <strong>生成本地打包APP资源</strong></p><img src="https://article.biliimg.com/bfs/article/c3ca6d9375b86d8d73f040d0fef3f5dfff1bafeb.jpg@1e_1c.webp" alt="HBuildX 本地打包App 资源"  /><blockquote><p><span class="label label-info">提示</span></p><p>终端偶尔会出现无法打包的提示，关了 HBulidX 再重新打包，还不行就重启下电脑，小波暂时也无法定位具体原因，通常在用 android studio 打包后再改了代码重新打包容易重现。</p></blockquote><h4 id="第七步：配置-android-离线-sdk-工程"><a href="#第七步：配置-android-离线-sdk-工程" class="headerlink" title="第七步：配置 android 离线 sdk 工程"></a>第七步：配置 android 离线 sdk 工程</h4><ol><li><p>解压后的 android 离线 sdk 压缩包把  <strong>HBuilder-Integrate-AS</strong> 整个文件夹作为项目包剪切出来，可以放到和你 uni-app 源码项目同级目录(<strong>注意整个项目路径不能有中文哈</strong>)；</p></li><li><p>再把 <code>HBuilder-Integrate-AS/simpleDemo/src/main/assets/apps</code> 里的内容删除</p></li><li><p>再把 第六步 本地打包APP资源中 <strong>UNIxxx</strong> 文件夹剪切到上面路径 <code>.../apps</code> 里</p></li><li><p>然后把 <strong>HBuilder-Integrate-AS</strong> 文件夹导入 android studio 中</p><img src="https://article.biliimg.com/bfs/article/1d041066ec41ceed81435cbc8fa0999b54875bd9.jpg@1e_1c.webp" alt="HBuilder-Integrate-AS"  /></li><li><p>更改3个配置文件</p><p><strong>文件：</strong><code>HBuilder-Integrate-AS/simpleDemo/src/assets/dada/dcloud_control.xml</code></p><img src="https://article.biliimg.com/bfs/article/685bd8af306b8f4a8624601183c54cb39eb75180.jpg@1e_1c.webp" alt="dcloud_control.xml"  /><p>值就是 uni-app 源码项目中 <code>manifest.json</code> 中 <code>&quot;appid&quot;</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;app appid=<span class="hljs-string">&quot;__UNI__xxxx&quot;</span> appver=<span class="hljs-string">&quot;&quot;</span>/&gt;<br></code></pre></td></tr></table></figure><br><p><strong>文件：</strong><code>HBuilder-Integrate-AS/simpleDemo/src/build.gradle</code></p><p><img src="https://article.biliimg.com/bfs/article/d2c06ff34e7b63c1e0a94722aed5b14a5620889d.jpg@1e_1c.webp" alt="build.gradle"></p><p><code>applicationId</code> 值就是第五步 –&gt; 各平台信息新增弹框中 –&gt; 包名</p><p><code>versionCode、versionName</code> 每次打包记得改一下，反正比前一次大就行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">defaultConfig &#123;<br>  applicationId <span class="hljs-string">&quot;com.uniapp.nianzhu&quot;</span><br>  versionCode <span class="hljs-number">104</span><br>  versionName <span class="hljs-string">&quot;1.0.4&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><br><p><code>keyAlias</code> 同上面，值就是 uni-app 源码项目中 <code>manifest.json</code> 中 <code>&quot;appid&quot;</code></p><p><code>keyPassword</code>、<code>storePassword</code> 第五步 –&gt; 证书详情弹框 –&gt; 查看证书密码</p><p><code>storeFile file</code> 下载下来证书的名字</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">signingConfigs &#123;<br>  config &#123;<br>    keyAlias <span class="hljs-string">&#x27;__UNI__xxxx&#x27;</span><br>    keyPassword <span class="hljs-string">&#x27;证书密码&#x27;</span><br>    storeFile <span class="hljs-title function_">file</span><span class="hljs-params">(<span class="hljs-string">&#x27;证书名称.keystore&#x27;</span>)</span><br>    storePassword <span class="hljs-string">&#x27;证书密码&#x27;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><br><p><strong>文件：</strong><code>HBuilder-Integrate-AS/simpleDemo/src/main/AndroidManifest.xml</code></p><p><img src="https://article.biliimg.com/bfs/article/95bb297fe98b06593962d8d61150bbda10363137.jpg@1e_1c.webp" alt="AndroidManifest.xml"></p><p><code>package</code> 同前面的 <code>applicationId</code> 一致</p><p><code>android:icon</code>  替换这个路径<code>src/main/res/drawable/icon.png</code> 考虑兼容，还要多几个其他尺寸的哈，例如：“72x72”，“96x96”，“144x144”，“192x192” 等</p><p> <code>android:label</code> 修改 <code>src/main/res/values/strings.xml</code> </p><p><code>android:value</code> 值是第五步获得的<strong>离线打包key</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;manifest xmlns:android=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span><br>    <span class="hljs-keyword">package</span>=<span class="hljs-string">&quot;com.uniapp.nianzhu&quot;</span>&gt;<br>    ...<br>    &lt;application<br>      android:icon=<span class="hljs-string">&quot;@drawable/icon&quot;</span><br>      android:label=<span class="hljs-string">&quot;@string/app_name&quot;</span><br>      ...<br>      &lt;meta-data<br>        android:name=<span class="hljs-string">&quot;dcloud_appkey&quot;</span><br>        android:value=<span class="hljs-string">&quot;6666xxxx&quot;</span> /&gt;<br>    &lt;/application&gt;<br>&lt;/manifest&gt;<br></code></pre></td></tr></table></figure></li><li><p>把下载下来的证书放到 <strong>simpleDemo</strong> 的目录下</p><p><img src="https://article.biliimg.com/bfs/article/d2c06ff34e7b63c1e0a94722aed5b14a5620889d.jpg@1e_1c.webp" alt="simpleDemo"></p><p>证书名随你，可改可不改，<code>storeFile file(&#39;证书名称.keystore&#39;)</code> 必须一致就行</p></li></ol><h4 id="第八步：配置-android-studio-打包"><a href="#第八步：配置-android-studio-打包" class="headerlink" title="第八步：配置 android studio 打包"></a>第八步：配置 android studio 打包</h4><ol><li><p>点击 <strong>file</strong> –&gt; <strong>sync project with  gradle files</strong></p><p>如果没有装jdk或者没有配置jdk本地路径会报错无法找到jdk</p><ol><li><p>点击 <strong>file</strong> –&gt; <strong>project structure</strong> –&gt; <strong>sdk location</strong>，修改 <strong>JDK loction</strong> 为你本地安装目录</p><p><img src="https://article.biliimg.com/bfs/article/a9c4744bd85fd0a2c155d0aaf308e8f6880f5203.jpg@1e_1c.webp" alt="JDK loction"></p></li><li><p>再点击 <strong>file</strong> –&gt; <strong>setting</strong> –&gt; <strong>Appearance &amp; Behavior</strong> –&gt; <strong>System Settings</strong> –&gt; <strong>Android SDK</strong>，复制右侧的 <strong>Android SDK Location</strong> 的值</p><p><img src="https://article.biliimg.com/bfs/article/2a70ce79dba759ee804f03a2725d8551872d0a2e.jpg@1e_1c.webp" alt="Android SDK Location"></p></li><li><p>到系统设置环境变量的地方，系统变量中新建 <code>ANDROID_HOME：Android SDK Location 值</code></p><img src="https://article.biliimg.com/bfs/article/cb686ce36c7e8d6a8dbe92558a5ff3986c363b6e.jpg@1e_1c.webp" alt="ANDROID_HOME"  /></li><li><p>再把 <code>path</code> 变量值追加4个 <code>%ANDROID_HOME%\platform-tools</code>，<code>%ANDROID_HOME%\emulator</code>，<code>%ANDROID_HOME%\tools</code>，<code>%ANDROID_HOME%\tools\bin</code></p><img src="https://article.biliimg.com/bfs/article/109705a095b8d4d15d157eae41bce99eb7b6d9e3.jpg@1e_1c.webp" alt="path"  /></li><li><p>最后再重启下 android studio 软件</p></li></ol></li><li><p>再次执行 <strong>file</strong> –&gt; <strong>sync project with  gradle files</strong> 会报错如下代码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">Failed to find Build Tools revision <span class="hljs-number">30.0</span>.<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/a773247fd8fdeb0eec3744d94c6a77889c412ff7.jpg@1e_1c.webp" alt="SDK Tools"></p><ol><li><p>点击 <strong>file</strong> –&gt; <strong>setting</strong> –&gt; <strong>Appearance &amp; Behavior</strong> –&gt; <strong>System Settings</strong> –&gt; <strong>Android SDK</strong></p></li><li><p>再点击右侧 <strong>SDK Tools</strong> 选项卡，然后再勾选 右下角 <strong>Show Package Details</strong>，就能看到各种版本，提示装哪个就勾选后点击 <strong>Apply</strong>。</p></li></ol><p>如果还报错如下代码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">Failed to find Platform SDK with path: platforms;android<span class="hljs-literal">-30</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/2a70ce79dba759ee804f03a2725d8551872d0a2e.jpg@1e_1c.webp" alt="SDK Platorms"></p><ol><li>切到第一个 <strong>SDK Platorms</strong> 选项卡，提示装哪个就勾选哪个，然后点击  <strong>Apply</strong>。</li></ol></li><li><p>再次执行 <strong>file</strong> –&gt; <strong>sync project with  gradle files</strong>，成功的话我们就可以开始最后的打包工作了</p><p>点击 <strong>build</strong> –&gt; <strong>generate Signed Bundle &#x2F;apk</strong></p><img src="https://article.biliimg.com/bfs/article/661b748c4e6897f843a9a43beab811796fca596f.jpg@1e_1c.webp" alt="generate Signed Bundle /apk1"  /><img src="https://article.biliimg.com/bfs/article/b09d9d8d7eb2683718e037148149383abd4cd134.jpg@1e_1c.webp" alt="generate Signed Bundle /apk2"  /><p><code>key store path</code> ：选择一下项目中的证书文件</p><p><code>key store password 、 key password</code> ： 证书密码</p><p><code>key alias</code>：uni-app 的 id  &#x3D; <code>__UNI__xxxx</code></p><img src="https://article.biliimg.com/bfs/article/abb6e27b436c8446c70ab273a9146008c36c8386.jpg@1e_1c.webp" alt="generate Signed Bundle /apk3"  /><img src="https://article.biliimg.com/bfs/article/0f500388d0cdfb1d9b4b646c03dd27ddc0c00ad2.jpg@1e_1c.webp" alt="generate Signed Bundle /apk4"  /></li></ol><br><h3 id="😫uniApp工程化项目打包安卓APP小波遇见的一些问题"><a href="#😫uniApp工程化项目打包安卓APP小波遇见的一些问题" class="headerlink" title="😫uniApp工程化项目打包安卓APP小波遇见的一些问题"></a>😫uniApp工程化项目打包安卓APP小波遇见的一些问题</h3><blockquote><p><span class="label label-danger">报错</span></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs powershell">Unable to <span class="hljs-built_in">start</span> the daemon <span class="hljs-keyword">process</span>.<br>This problem might be caused by incorrect configuration of the daemon.<br><span class="hljs-keyword">For</span> example, an unrecognized jvm option is used.<br>Please refer to the User Manual chapter on the daemon at https://docs.gradle.org/<span class="hljs-number">6.5</span>/userguide/gradle_daemon.html<br><span class="hljs-keyword">Process</span> command line: C:\Program Files (x86)\Java\jdk1.<span class="hljs-number">8.0</span>_73\bin\java.exe <span class="hljs-literal">-Xmx1536m</span> <span class="hljs-literal">-Dfile</span>.encoding=GBK <span class="hljs-literal">-Duser</span>.country=CN <span class="hljs-literal">-Duser</span>.language=zh <span class="hljs-literal">-Duser</span>.variant <span class="hljs-literal">-cp</span> C:\Users\ganxb\.gradle\wrapper\dists\gradle<span class="hljs-literal">-6</span>.<span class="hljs-number">5</span><span class="hljs-literal">-bin</span>\<span class="hljs-number">6</span>nifqtx7604sqp1q6g8wikw7p\gradle<span class="hljs-literal">-6</span>.<span class="hljs-number">5</span>\lib\gradle<span class="hljs-literal">-launcher-6</span>.<span class="hljs-number">5</span>.jar org.gradle.launcher.daemon.bootstrap.GradleDaemon <span class="hljs-number">6.5</span><br>Please read the following <span class="hljs-keyword">process</span> output to find out more:<br><span class="hljs-literal">-----------------------</span><br>Error occurred during initialization of VM<br>Could not reserve enough space <span class="hljs-keyword">for</span> <span class="hljs-number">1572864</span>KB object heap<br><br><span class="hljs-literal">-----------------------</span><br>Check the JVM arguments defined <span class="hljs-keyword">for</span> the gradle <span class="hljs-keyword">process</span> <span class="hljs-keyword">in</span>:<br> - gradle.properties <span class="hljs-keyword">in</span> project root directory<br> - gradle.properties <span class="hljs-keyword">in</span> <span class="hljs-keyword">in</span> GRADLE_USER_HOME directory<br></code></pre></td></tr></table></figure><p>解决方案：</p><ol><li><p>这个错误是编译时出现的错误，你将安装Ｃ盘的 <strong>C:\Users\x.gradle</strong> 目录删除掉，不要担心删除会有什么问题。大胆的删！在清理下，它就会自动生成，问题解决.。</p><p>当然，试图编译或运行，都是不成功的。<br>经google发现，原来android studio是通过gradle对项目配置的，而系统中没有对android studio 的默认配置，就像Eclipse中的eclipse.ini文件。</p><p>再回到 <strong>C:\Users\x.gradle</strong>，建个文本把名字改成 <strong>gradle.properties</strong>，然后在里面写入 <strong>org.gradle.jvmargs&#x3D;-Xmx512m</strong></p></li><li><p>新建系统变量<br>变量名 _JAVA_OPTIONS<br>变量值 -Djava.net.preferIPv4Stack&#x3D;true<br>网上的方法 修改或者配置gradle文件没有成功解决的 可以试试这个方法！</p></li></ol><p>小波是用的1，2需要自己试试哦…小波未测试，可参考这篇文章<sup id="fnref:12" class="footnote-ref"><a href="#fn:12" rel="footnote"><span class="hint--top hint--rounded" aria-label=" Error:Unable to start the daemon process. This problem might be caused by incorrect configuration of">[12]</span></a></sup></p></blockquote><br><blockquote><p><span class="label label-danger">报错</span></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs powershell">Execution failed <span class="hljs-keyword">for</span> task <span class="hljs-string">&#x27;:simpleDemo:packageDebug&#x27;</span>.<br>&gt; A failure occurred <span class="hljs-keyword">while</span> executing com.android.build.gradle.tasks.PackageAndroidArtifact<span class="hljs-variable">$IncrementalSplitterRunnable</span><br>   &gt; java.lang.OutOfMemoryError (no error message)<br>   <br>   <br>   Execution failed <span class="hljs-keyword">for</span> task <span class="hljs-string">&#x27;:simpleDemo:checkReleaseAarMetadata&#x27;</span>.<br>&gt; unable to create new native thread<br></code></pre></td></tr></table></figure><p>解决方案：</p><ol><li><p>把之前打包记录删了重新打包</p></li><li><p>重启电脑可以解决</p></li><li><p>clean、build之后解决 (小波采用的方案，点击 <strong>build</strong> –&gt; <strong>clean project</strong>，再重新打包)</p></li></ol></blockquote><br><h3 id="😊来自小波的bilibili视频教程"><a href="#😊来自小波的bilibili视频教程" class="headerlink" title="😊来自小波的bilibili视频教程"></a>😊来自小波的bilibili视频教程</h3><br><h3 id="🙂uniApp工程化项目离线打包安卓APP用到的相关参考资料链接"><a href="#🙂uniApp工程化项目离线打包安卓APP用到的相关参考资料链接" class="headerlink" title="🙂uniApp工程化项目离线打包安卓APP用到的相关参考资料链接"></a>🙂uniApp工程化项目离线打包安卓APP用到的相关参考资料链接</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.dcloud.io/hbuilderx.html" target="_blank" rel="noopener external nofollow noreferrer">uni-app官网 HBuildX</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/weixin_44414901/article/details/128417455" target="_blank" rel="noopener external nofollow noreferrer">uniapp离线打包具体步骤</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://blog.csdn.net/weixin_44120523/article/details/128452707" target="_blank" rel="noopener external nofollow noreferrer">uniapp安卓离线打包如何生成Android云端证书</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://blog.csdn.net/csdn_yuan_/article/details/107728043" target="_blank" rel="noopener external nofollow noreferrer">uniApp Android平台签名证书(.keystore)</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://dev.dcloud.net.cn/" target="_blank" rel="noopener external nofollow noreferrer">https://dev.dcloud.net.cn/</a><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span><a href="https://blog.csdn.net/qq_34661750/article/details/125369135" target="_blank" rel="noopener external nofollow noreferrer">最新解决Android Studio打包没有Generate Signed Bundle&#x2F;APK选项</a><a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span><a href="https://developer.android.google.cn/studio/archive?hl=zh-cn" target="_blank" rel="noopener external nofollow noreferrer">android studio</a><a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:8" class="footnote-text"><span><a href="https://nativesupport.dcloud.net.cn/AppDocs/download/android.html" target="_blank" rel="noopener external nofollow noreferrer">https://nativesupport.dcloud.net.cn/AppDocs/download/android.html</a><a href="#fnref:8" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:9" class="footnote-text"><span><a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" target="_blank" rel="noopener external nofollow noreferrer">oracle 官网</a><a href="#fnref:9" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:10" class="footnote-text"><span><a href="https://pan.baidu.com/s/1nBiEvxK0fwx448BF89E8tg?pwd=ut82" target="_blank" rel="noopener external nofollow noreferrer">jdk 廿壴博客百度云下载</a><a href="#fnref:10" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:11" class="footnote-text"><span><a href="https://blog.csdn.net/qq_35892584/article/details/109746886" target="_blank" rel="noopener external nofollow noreferrer">unable to access android sdk add-on list解决方案</a><a href="#fnref:11" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:12" class="footnote-text"><span><a href="https://blog.csdn.net/jianghehe1/article/details/80507820" target="_blank" rel="noopener external nofollow noreferrer">Error:Unable to start the daemon process. This problem might be caused by incorrect configuration of</a><a href="#fnref:12" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;br&gt;

&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;前一篇文章小波已经用 &lt;a href=&quot;https://blog.ganxb2.com/3462.html&quot;&gt;v</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="前端" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="https://blog.ganxb2.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="编程" scheme="https://blog.ganxb2.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="uniapp" scheme="https://blog.ganxb2.com/tags/uniapp/"/>
    
    <category term="android studio" scheme="https://blog.ganxb2.com/tags/android-studio/"/>
    
  </entry>
  
  <entry>
    <title>如何使用vue3+vite+typescript+pinia+uni-ui+pnpm从0到1创建uni-app多端小程序APP工程化项目</title>
    <link href="https://blog.ganxb2.com/3462.html"/>
    <id>https://blog.ganxb2.com/3462.html</id>
    <published>2023-04-05T18:32:35.000Z</published>
    <updated>2024-12-30T18:48:24.548Z</updated>
    
    <content type="html"><![CDATA[<br><h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p>一方面是为了把 vue3+typescript+pinia+pnpm+vite+uni-app+uni-ui 玩一玩，也为和前面用 <a href="https://blog.ganxb2.com/48056.html">taro3+vue3+tsx+pnpm+pinia</a>做的小程序做个思想碰撞，因为 uni-app+vue3+typescript 用的 template 的写法思路来开发，而 taro3+vue3+tsx 用的 react 的 hooks 思想，看看两个思路的开发实践差异点和效率等方面具体的情况能碰撞出怎样的火花。  </p><br><h3 id="😍uni-app-vue3-vite-typescript-pinia-uni-ui-微信小程序APP工程模版实体截图"><a href="#😍uni-app-vue3-vite-typescript-pinia-uni-ui-微信小程序APP工程模版实体截图" class="headerlink" title="😍uni-app(vue3+vite+typescript+pinia+uni-ui)微信小程序APP工程模版实体截图"></a>😍uni-app(vue3+vite+typescript+pinia+uni-ui)微信小程序APP工程模版实体截图</h3><p><img src="https://article.biliimg.com/bfs/article/c9b2a733abb357ca9370bf51fe2985fd3ae8c6ba.jpg@1e_1c.webp" alt="uni-app(vue3+vite+typescript+pinia+uni-ui)微信小程序APP工程模版实体截图"></p><p><a href="https://gitee.com/ganxb2/uniapp_vue3_vite_pinia" target="_blank" rel="noopener external nofollow noreferrer">gitee仓库传送门</a></p><p class="note note-info">工程项目暂时定义为测试阶段的初始模版，所以里面有部分小波自测冗余代码，拿去用的话需要自己看看手动删除，后续小波有时间会更新版本清理。</p><br><h3 id="😦目标功能"><a href="#😦目标功能" class="headerlink" title="😦目标功能"></a>😦目标功能</h3><h4 id="done"><a href="#done" class="headerlink" title="done:"></a>done:</h4><ol><li>集成 vue3、typescript、pinia、vite、uni-ui、nodejs-koa、pnpm，使用 vue3 模版渲染思路开发</li><li>多人协作 eslint、prettier 代码格式校验规范， vsocde 配置</li><li>jest 单元测试</li><li>pinia 全局状态管理</li><li>小程序分包配置</li><li>小程序自定义顶部导航</li><li>nodejs-koa 接口服务</li><li>多环境 api 接口判断</li><li>页面：首页、点餐</li></ol><h4 id="todo"><a href="#todo" class="headerlink" title="todo:"></a>todo:</h4><ul><li>git提交 husky 校验</li><li>git提交 commit 校验</li><li>改成 tsx 完善整个系统流程</li><li>生产环境去除 console</li><li>nodejs-koa 提取到 vercel 做成在线 api 服务</li><li>打包 app 流程</li><li>vite 深入学习实践</li></ul><br><h3 id="🧐主要技术栈"><a href="#🧐主要技术栈" class="headerlink" title="🧐主要技术栈"></a>🧐主要技术栈</h3><ul><li>vue3</li><li>typescript</li><li>uni-ui</li><li>pinia</li><li>vite</li><li>pnpm</li><li>koa</li><li>nodejs</li><li>sass</li><li>jest</li><li>eslint+prettier</li><li>husky </li><li>commit</li></ul><br><h3 id="🙂总纲"><a href="#🙂总纲" class="headerlink" title="🙂总纲"></a>🙂总纲</h3><ol><li>安装 vscode 插件 vue volar 全家桶、eslint、prettier、sass，禁用或者直接删除 vetur (这个插件是 for vue2)，安装微信开发工具，HBuildX</li><li>安装 pnpm 和 uni-app 脚手架并初始项目</li><li>卸载不需要多余依赖库</li><li>安装 eslint + preitter 相关依赖库，创建相关配置文件 <strong>.eslintrc.js、.prettierrc.js</strong>， vscode 配置： <strong>.vscode&#x2F;settings.json</strong> ，配置 <strong>package.json</strong> 包检测命令，配置别名</li><li>安装 pinia 并配置</li><li>安装 sass</li><li>封装 uni.request 请求</li><li>利用 nodejs - koa 配置 mock 数据服务器</li><li>配置 jest 单元测试</li><li>安装 uni-ui 依赖库</li><li>配置小程序渲染</li><li>配置多环境 api 接口</li><li>从0到1架构uni-app多端工程化项目遇见的问题</li></ol><br><h3 id="🤔搭建uni-app微信小程序APP工程化项目步骤"><a href="#🤔搭建uni-app微信小程序APP工程化项目步骤" class="headerlink" title="🤔搭建uni-app微信小程序APP工程化项目步骤"></a>🤔搭建uni-app微信小程序APP工程化项目步骤</h3><h4 id="第一步：安装-vscode-插件、微信开发工具和-HBuildX"><a href="#第一步：安装-vscode-插件、微信开发工具和-HBuildX" class="headerlink" title="第一步：安装 vscode 插件、微信开发工具和 HBuildX"></a>第一步：安装 vscode 插件、微信开发工具和 HBuildX</h4><ol><li><h5 id="vscode-插件"><a href="#vscode-插件" class="headerlink" title="vscode 插件"></a>vscode 插件</h5><ul><li><p><strong>eslint</strong></p></li><li><p><strong>prettier</strong></p></li><li><p><strong>volar</strong> (ts版本也一并安装)</p></li><li><p><strong>sass</strong></p></li></ul><p>以上的插件可以在 <strong>vue volar extension pack</strong> 中直接全装</p><blockquote><p><span class="label label-info">提示</span></p><p>不需要开发 vue2 则删除 vetur 插件，需要就先禁用，vue3 中会导致代码报错</p></blockquote></li><li><h5 id="微信开发工具"><a href="#微信开发工具" class="headerlink" title="微信开发工具"></a><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noopener external nofollow noreferrer">微信开发工具</a></h5><p><img src="https://res.wx.qq.com/wxdoc/dist/assets/img/addproject.87088c43.png" alt="微信开发工具"></p><p>小程序帐号<a href="https://mp.weixin.qq.com/wxopen/waregister?action=step1" target="_blank" rel="noopener external nofollow noreferrer">注册</a>，获取的AppID并导入本地的项目</p></li><li><h5 id="HBuildX"><a href="#HBuildX" class="headerlink" title="HBuildX"></a><a href="https://www.dcloud.io/hbuilderx.html" target="_blank" rel="noopener external nofollow noreferrer">HBuildX</a></h5><p><img src="https://hx.dcloud.net.cn/static/snapshots/tutorial/startup.gif" alt="HBuildX"></p><p>直接官网下载，主要是配置打包小程序后在微信开发工具中开发和测试</p></li></ol><br><h4 id="第二步：安装-pnpm-和-uni-app-脚手架"><a href="#第二步：安装-pnpm-和-uni-app-脚手架" class="headerlink" title="第二步：安装 pnpm 和 uni-app 脚手架"></a>第二步：安装 pnpm 和 uni-app 脚手架</h4><p>以下操作基于已经安装 nodejs 环境操作，例如小波的环境版本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">node <span class="hljs-literal">-v</span><br>v16.<span class="hljs-number">13.1</span><br></code></pre></td></tr></table></figure><ul><li><p><strong>安装 pnpm</strong></p> <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">// 全局安装<br>npm install pnpm <span class="hljs-literal">-g</span> <br>// 切换淘宝源<br>pnpm config <span class="hljs-built_in">set</span> registry https://registry.npmmirror.com/<br>// 查看源<br>pnpm config get registry<br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-info">提示</span></p><p>pnpm 跟 npm 和 yarn 的差距就是把原来每个项目安装 modules 放到统一的文件夹中，通过<strong>符号链接</strong>(软连接)和<strong>硬链接</strong>，注意<strong>项目要和 pnpm 统一存依赖的 modules 同盘</strong>，不然就等于丢失了 pnpm 的优势。</p></blockquote></li><li><p><strong>安装 uni-app 脚手架(参考官网文档<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://uniapp.dcloud.net.cn/quickstart-cli.html">[2]</span></a></sup>)</strong></p> <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 创建以 typescript 开发的工程  </span><br>npx degit dcloudio/uni<span class="hljs-literal">-preset-vue</span><span class="hljs-comment">#vite-ts vue3-vite-uniapp</span><br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-warning">注意</span></p><p>一定要选择和pnpm存依赖包相同的盘符安装创建项目哦</p></blockquote></li></ul><br><h4 id="第三步：初始项目"><a href="#第三步：初始项目" class="headerlink" title="第三步：初始项目"></a>第三步：初始项目</h4><ol><li><h5 id="切到自己创建的文件夹执行初始命令"><a href="#切到自己创建的文件夹执行初始命令" class="headerlink" title="切到自己创建的文件夹执行初始命令"></a>切到自己创建的文件夹执行初始命令</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">// <span class="hljs-built_in">cd</span>到自己建立的文件夹<br><span class="hljs-built_in">cd</span> x/vue3<span class="hljs-literal">-vite-uniapp</span><br>pnpm install<br></code></pre></td></tr></table></figure><p>初始的 <code>package.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni-preset-vue&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;0.0.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;dev:app&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p app&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:app-android&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p app-android&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:app-ios&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p app-ios&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:custom&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:h5&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:h5:ssr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni --ssr&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:mp-alipay&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p mp-alipay&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:mp-baidu&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p mp-baidu&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:mp-jd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p mp-jd&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:mp-kuaishou&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p mp-kuaishou&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:mp-lark&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p mp-lark&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:mp-qq&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p mp-qq&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:mp-toutiao&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p mp-toutiao&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:mp-weixin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p mp-weixin&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:quickapp-webview&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p quickapp-webview&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:quickapp-webview-huawei&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p quickapp-webview-huawei&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:quickapp-webview-union&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p quickapp-webview-union&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:app&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p app&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:app-android&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p app-android&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:app-ios&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p app-ios&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:custom&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:h5&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:h5:ssr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build --ssr&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:mp-alipay&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p mp-alipay&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:mp-baidu&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p mp-baidu&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:mp-jd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p mp-jd&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:mp-kuaishou&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p mp-kuaishou&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:mp-lark&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p mp-lark&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:mp-qq&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p mp-qq&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:mp-toutiao&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p mp-toutiao&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:mp-weixin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p mp-weixin&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:quickapp-webview&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p quickapp-webview&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:quickapp-webview-huawei&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p quickapp-webview-huawei&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:quickapp-webview-union&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p quickapp-webview-union&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;type-check&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vue-tsc --noEmit&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;dependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-app&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-app-plus&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-components&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-h5&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-mp-alipay&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-mp-baidu&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-mp-jd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-mp-kuaishou&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-mp-lark&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-mp-qq&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-mp-toutiao&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-mp-weixin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-quickapp-webview&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;vue&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.2.45&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;vue-i18n&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^9.1.9&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;devDependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@dcloudio/types&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.3.2&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-automator&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-cli-shared&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/uni-stacktracey&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@dcloudio/vite-plugin-uni&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.0.0-alpha-3070720230316001&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@vue/tsconfig&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^0.1.3&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;typescript&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^4.9.4&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;vite&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;4.0.4&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-comment">// tsc默认已装</span><br>    <span class="hljs-attr">&quot;vue-tsc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.0.24&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>和小波已经搭建好的项目 <code>package.json</code> 差异的引入包</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-comment">// lint 检测</span><br>  <span class="hljs-attr">&quot;lint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;eslint --ext .ts,tsx,vue src/** --no-error-on-unmatched-pattern --quiet&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// lint 修复</span><br>  <span class="hljs-attr">&quot;lint:fix&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;eslint --ext .ts,tsx,vue src/** --no-error-on-unmatched-pattern --fix&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// koa-mock数据服务</span><br>  <span class="hljs-attr">&quot;mock&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;cd mock &amp;&amp; ts-node-dev mock.ts&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// jest 自测</span><br>  <span class="hljs-attr">&quot;test&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jest&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// jest 测试覆盖率</span><br>  <span class="hljs-attr">&quot;test:unit&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jest --coverage&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;dependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-comment">// uni-ui</span><br>  <span class="hljs-attr">&quot;@dcloudio/uni-ui&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.4.26&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// pinia</span><br>  <span class="hljs-attr">&quot;pinia&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.33&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;devDependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;sass&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.60.0&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-comment">// type申明</span><br>  <span class="hljs-attr">&quot;@types/faker&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;5.1.5&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@types/jest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^29.5.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@types/koa&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.13.5&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@types/koa-logger&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.1.2&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@types/koa-router&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^7.4.4&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@types/koa2-cors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.2&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@types/node&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^18.15.9&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// eslint &amp;&amp; prettier</span><br>  <span class="hljs-attr">&quot;@typescript-eslint/eslint-plugin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^5.56.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@typescript-eslint/parser&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^5.56.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@vue/eslint-config-prettier&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^7.1.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@vue/eslint-config-typescript&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^11.0.2&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@vuedx/typescript-plugin-vue&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^0.7.6&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;eslint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^8.36.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;eslint-plugin-prettier&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^4.2.1&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;eslint-plugin-vue&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^9.10.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;prettier&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.8.7&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// jest</span><br>  <span class="hljs-attr">&quot;@babel/core&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^7.21.3&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@babel/preset-env&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^7.20.2&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@vue/test-utils&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2.0.0-rc.18&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;babel-jest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;26.6.3&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;jest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;26.6.3&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;jest-environment-node&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;27.5.1&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;@testing-library/jest-dom&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^5.16.5&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;ts-jest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;26.5.6&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;vue-jest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;5.0.0-alpha.10&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// koa 数据接口服务</span><br>  <span class="hljs-attr">&quot;chalk&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;4.1.2&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;faker&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;5.1.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;koa&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.14.1&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;koa-body&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^6.0.1&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;koa-logger&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.2.1&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;koa-router&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^12.0.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;koa2&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2.0.0-alpha.7&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;koa2-cors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.6&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;lodash&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^4.17.21&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;log4js&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^6.9.1&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;postcss&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&gt;=8.1.0 &lt;9.0.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;reflect-metadata&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^0.1.13&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;ts-node-dev&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;tslib&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.5.0&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>   初始的文件树</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs powershell">vue3<span class="hljs-literal">-vite-uniapp</span><br>├─ index.html            // 入口<br>├─ package.json          // 安装依赖配置<br>├─ pnpm<span class="hljs-literal">-lock</span>.yaml        // pnpm锁定配置<br>├─ README.md             // <span class="hljs-built_in">md</span>说明<br>├─ src<br>│ ├─ App.vue // 小程序页面状态<br>│ ├─ env.d.ts            // .vue组件componet时的ts申明<br>│ ├─ main.ts             // 入口js，导入了app.vue<br>│ ├─ manifest.json       // uniapp相关配置应用名称、appid、logo、版本等打包信息<br>│ ├─ components   <br>│ │ └─ counter<br>│ │ │ └─  counter.vue    // 测试pinia状态组件<br>│ ├─ pages   <br>│ │ └─ index<br>│ │ │ └─ index.vue // 首页<br>│ ├─ <span class="hljs-keyword">static</span> // 静态资源包<br>│ │ └─ logo.png<br>│ ├─ pages.json         // 小程序路由,分包<br>│ ├─ shime<span class="hljs-literal">-uni</span>.d.ts     // vue hooks的ts申明（暂时理解）<br>│ └─ uni.scss            // uni<span class="hljs-literal">-app</span>内置的常用样式变量<br>├─ tsconfig.json         // ts的配置<br>└─ vite.config.ts        // vite配置<br></code></pre></td></tr></table></figure><p>和小波已经搭建好的项目文件树的差异</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs powershell">uniapp_vue3_vite_pinia<br>├─ .gitignore// git忽略文件<br>├─ .eslintrc.js// eslint的配置<br>├─ .prettierrc.js// prettier的配置<br>├─ jest.config.js// jest测试配置<br>├─ vue.config.js// uni<span class="hljs-literal">-ui</span>依赖使用<br>├─ .hbuilderx// HBuildX配置<br>├─ .vscode                                               <br>│  └─ settings.json// vscod配置    <br>├─ coverage // jest单元测试覆盖查看UI界面 <br>├─ src<br>│ ├─ utils<br>│ │ ├─ request.d.ts// 封装请求ts申明<br>│ │ └─ request.ts// uni的请求方法封装<br>│ ├─ config  <br>│ │ └─ app.ts            // 封装接口使用的常量<br>│ ├─ api<br>│ │├─ user.d.ts// 用户页面接口ts申明<br>│ │ └─ user.ts          // 用户页面使用接口            <br>│ ├─ components<br>│ │ └─ uni<span class="hljs-literal">-nav-bar</span>      // 自定义头部导航栏<br>│ │ │├─ style.scss// 样式<br>│ │ │├─ types.d.ts// 申明<br>│ │ │├─ uni<span class="hljs-literal">-nav-bar</span>.vue// 组件入口<br>│ │ │└─ uni<span class="hljs-literal">-status-bar</span>.vue // 组件依赖的小组件<br>│ ├─ pages<br>│ │ └─ menu      // 自定义头部导航栏<br>│ │ │├─ style.scss// 样式<br>│ │ │├─ types.d.ts// 申明<br>│ │ │├─ index.vue// 页面入口<br>│ │ │└─ menuHooks<br>│ │ ││ └─ index.vue// hooks必须要用Index来命名，不然报错<br>│ ├─ stores<br>│ │ ├─ golbalSysInfo.ts// 系统信息<br>│ │ └─ index.ts// 导出createPinia（主要是jest测试使用，不然会报错）<br>│ ├─ subPages// 分包文件夹<br>├─ tests// jest 测试用例<br>├─ types<br>│ └─  global.d.ts// ts全局申明<br> <br>├─ mock<br>│ ├─ controller        <br>│ │ ├─ user.ts           // 用户相关接口控制器<br>│ │ └─ banner.ts         // banner图接口控制器<br>│ ├─ middleware          // 前后端交互最重要的就是两个参数 request 和 respond ，每一个中间件执行完毕应该进入下一个中间件，因此还需要一个 next 参数，用来启动下一个中间件。<br>│ │ └─ resultHandler.ts  // 用来给每个响应对象包装响应码等，输出ctx.body<br>│ ├─ mockdb              // 各种假数据<br>│ ├─ utils<br>│ │ └─ logger.ts         // 输出错误日志函数<br>│ ├─ constant.ts         // 常量<br>│ ├─ mock.ts             // 主入口<br>│ ├─ requestDecorator.ts // 生成 http method 装饰器，创建类路径装饰器<br>│ ├─ router.ts           // 路由（拿到controller中定义的接口，结合meta数据添加路由 和 验证）<br>│ ├─ tsconfig.json       // ts配置<br>│ └─ type.d.ts           // ts申明<br></code></pre></td></tr></table></figure></li><li><h5 id="启动命令-h5模式"><a href="#启动命令-h5模式" class="headerlink" title="启动命令 h5模式"></a>启动命令 h5模式</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm dev:h5<br></code></pre></td></tr></table></figure><p>确认初始么有问题，则开始后续操作</p></li></ol><br><h4 id="第四步：卸载不需要默认安装的依赖库"><a href="#第四步：卸载不需要默认安装的依赖库" class="headerlink" title="第四步：卸载不需要默认安装的依赖库"></a>第四步：卸载不需要默认安装的依赖库</h4><p>uni-app 脚手架默认安装了 vue-i18n 多语言依赖库，可根据需求自行选择是否卸载</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm remove vue<span class="hljs-literal">-i18n</span><br></code></pre></td></tr></table></figure><br><h4 id="第五步：安装-eslint-preitter-相关依赖库，配置-vscode"><a href="#第五步：安装-eslint-preitter-相关依赖库，配置-vscode" class="headerlink" title="第五步：安装 eslint + preitter 相关依赖库，配置 vscode"></a>第五步：安装 eslint + preitter 相关依赖库，配置 vscode</h4><p>标准三件套</p><ul><li>代码规范 ESlint</li><li>代码格式美化 Prettier</li><li>多人协作保持代码风格一致配置 vscode</li></ul><ol><li><h5 id="安装相关依赖"><a href="#安装相关依赖" class="headerlink" title="安装相关依赖"></a>安装相关依赖</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add @typescript<span class="hljs-literal">-eslint</span>/eslint<span class="hljs-literal">-plugin</span> <span class="hljs-literal">-D</span><br>pnpm add @typescript<span class="hljs-literal">-eslint</span>/parser <span class="hljs-literal">-D</span><br>pnpm add @vue/eslint<span class="hljs-literal">-config-prettier</span> <span class="hljs-literal">-D</span><br>pnpm add @vue/eslint<span class="hljs-literal">-config-typescript</span> <span class="hljs-literal">-D</span><br>pnpm add @vuedx/typescript<span class="hljs-literal">-plugin-vue</span> <span class="hljs-literal">-D</span><br>pnpm add eslint <span class="hljs-literal">-D</span><br>pnpm add eslint<span class="hljs-literal">-plugin-prettier</span> <span class="hljs-literal">-D</span><br>pnpm add eslint<span class="hljs-literal">-plugin-vue</span> <span class="hljs-literal">-D</span><br>pnpm add prettier <span class="hljs-literal">-D</span><br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-info">提示</span></p><p><code>@vuedx/typecheck</code> 和 <code>@vuedx/typescript-plugin-vue</code> 不安装似乎也没啥影响，npm 上的描述是一个命令行检查 vue 项目的工具。在我的理解中一般使用于 githooks。</p><p>安装也没关系，反正开发环境使用</p></blockquote></li><li><h5 id="设置代码规范和格式化规则"><a href="#设置代码规范和格式化规则" class="headerlink" title="设置代码规范和格式化规则"></a>设置代码规范和格式化规则</h5><p>项目根目录创建 <code>.eslintrc.js</code> 并贴入以下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-comment">//  true: 它就会停止在父级目录中寻找</span><br>  <span class="hljs-attr">root</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-comment">// 预定义的全局变量，这里是浏览器环境</span><br>  <span class="hljs-attr">env</span>: &#123;<br>    <span class="hljs-attr">browser</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">es2021</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">node</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 如果defineProps报错</span><br>    <span class="hljs-string">&quot;vue/setup-compiler-macros&quot;</span>: <span class="hljs-literal">true</span>,<br>  &#125;, <br>  <span class="hljs-comment">// ESTree 只是一个 AST 的某一种规范，ESTree 本质上还是 AST</span><br>  <span class="hljs-comment">// ESLint 默认的 parser ，只转换 js，默认支持 ES5 的语法： 默认采用vue-eslint</span><br>  <span class="hljs-attr">parser</span>: <span class="hljs-string">&quot;vue-eslint-parser&quot;</span>,<br>  <span class="hljs-comment">// 子配置：优先使用typescript-eslint，支持es2021</span><br>  <span class="hljs-attr">parserOptions</span>: &#123; <span class="hljs-attr">parser</span>: <span class="hljs-string">&quot;@typescript-eslint/parser&quot;</span>, <span class="hljs-attr">ecmaVersion</span>: <span class="hljs-number">2021</span> &#125;,<br>  <span class="hljs-comment">// 扩展校验风格 合并 eslint 中的 plugins，rules 的</span><br>  <span class="hljs-attr">extends</span>: [<br>    <span class="hljs-string">&quot;plugin:vue/base&quot;</span>,<br>    <span class="hljs-string">&quot;plugin:vue/vue3-essential&quot;</span>,<br>    <span class="hljs-string">&quot;eslint:recommended&quot;</span>,<br>    <span class="hljs-string">&quot;@vue/prettier&quot;</span>,<br>    <span class="hljs-string">&quot;@vue/typescript&quot;</span>,<br>  ],<br>  <span class="hljs-comment">// 它的默认 parser 参数会将代码转换为 AST，AST 被 plugin&amp;rules 用来校验和生成错误信息</span><br>  <span class="hljs-attr">plugins</span>: [],<br>  <span class="hljs-attr">rules</span>: &#123;<br>    <span class="hljs-comment">// 检测未使用的变量，函数和函数的参数</span><br>    <span class="hljs-string">&quot;no-unused-vars&quot;</span>: <span class="hljs-string">&quot;off&quot;</span>,<br>    <span class="hljs-comment">// 检测未使用的变量，函数和函数的参数 for typescript</span><br>    <span class="hljs-string">&quot;@typescript-eslint/no-unused-vars&quot;</span>: <span class="hljs-string">&quot;off&quot;</span>,<br>    <span class="hljs-comment">// 语句强制分号结尾</span><br>    <span class="hljs-attr">semi</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-comment">// 如果报错回车结尾错误 window开发环境，但是上传git又是linux</span><br>    <span class="hljs-attr">endOfLine</span>: <span class="hljs-string">&quot;off&quot;</span>,<br>    <span class="hljs-string">&quot;no-console&quot;</span>: process.<span class="hljs-property">env</span>.<span class="hljs-property">NODE_ENV</span> === <span class="hljs-string">&quot;production&quot;</span> ? <span class="hljs-string">&quot;warn&quot;</span> : <span class="hljs-string">&quot;off&quot;</span>,<br>    <span class="hljs-string">&quot;no-debugger&quot;</span>: process.<span class="hljs-property">env</span>.<span class="hljs-property">NODE_ENV</span> === <span class="hljs-string">&quot;production&quot;</span> ? <span class="hljs-string">&quot;warn&quot;</span> : <span class="hljs-string">&quot;off&quot;</span>,<br>    <span class="hljs-comment">// 在rules中添加自定义规则 关闭组件命名规则</span><br>    <span class="hljs-string">&quot;vue/multi-word-component-names&quot;</span>: <span class="hljs-string">&quot;off&quot;</span>,<br>  &#125;,<br>  <span class="hljs-comment">// 忽略文件</span><br>  <span class="hljs-attr">ignorePatterns</span>: [<br>    <span class="hljs-string">&quot;*.css&quot;</span>,<br>    <span class="hljs-string">&quot;*.less&quot;</span>,<br>    <span class="hljs-string">&quot;*.scss&quot;</span>,<br>    <span class="hljs-string">&quot;*.jpg&quot;</span>,<br>    <span class="hljs-string">&quot;*.png&quot;</span>,<br>    <span class="hljs-string">&quot;*.gif&quot;</span>,<br>    <span class="hljs-string">&quot;*.svg&quot;</span>,<br>    <span class="hljs-string">&quot;*vue.d.ts&quot;</span>,<br>  ],<br>&#125;;<br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-info">提示</span></p><ol><li><p><code>extends:[]</code> </p><p>配置语法说明： </p><p><code>plugin:vue/base</code> 只是使解析工作的基本规则。还没有 lint 任何东西。  </p><p><code>plugin:vue/essential</code> 以上,加上仅用于防止 Vue 中的错误或意外行为的规则。  </p><p><code>plugin:vue/strongly-recommended</code> 以上,加上通常被认为是最佳实践的规则。  </p><p><code>plugin:vue/recommended</code> 以上,加上一些经常被建议的样式规则。  </p><p><code>extends: [...]</code> 大概语义：</p><p>使用vue最基本规则，vue3错误或意外行为的规则，eslint最佳实践的规则</p><p>简写说明： </p><p> 引入 <code>@vue/eslint-config-prettier</code> 可以简写为 <code>@vue/prettier</code>  </p><p><code>vue/base</code> 全称应该是 <code>eslint-plugin-vue/base</code></p><p>简单理解就是 eslint 默认把和自己相关命名进行了转行 <code>eslint-config-</code>，<code>eslint-plugin-</code></p></li><li><p><code>ignorePatterns: []</code> 忽略文件配置是为了 eslint 命令执行检测造成非必要的混淆报错</p></li></ol></blockquote><p>项目根目录创建 <code>.prettierrc.js</code> 并贴入以下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-comment">// 超过最大值换行</span><br>  <span class="hljs-attr">printWidth</span>: <span class="hljs-number">120</span>,<br>  <span class="hljs-comment">// 缩进2</span><br>  <span class="hljs-attr">tabWidth</span>: <span class="hljs-number">2</span>,<br>  <span class="hljs-comment">// ??? == useTabs</span><br>  <span class="hljs-attr">tabs</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-comment">// 末尾添加分号</span><br>  <span class="hljs-attr">semi</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-comment">// 使用单引号</span><br>  <span class="hljs-attr">singleQuote</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-comment">// 给对象里的属性名是否要加上引号，默认为as-needed，即根据需要决定，如果不加引号会报错则加，否则不加</span><br>  <span class="hljs-attr">quoteProps</span>: <span class="hljs-string">&quot;as-needed&quot;</span>,<br>  <span class="hljs-comment">// 对象大括号直接是否有空格，默认为true，效果：&#123; foo: bar &#125;</span><br>  <span class="hljs-attr">bracketSpacing</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-comment">// jsx 标签的反尖括号需要换行</span><br>  <span class="hljs-attr">jsxBracketSameLine</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-comment">// 箭头函数参数只有一个时是否要有小括号 avoid: 省略括号</span><br>  <span class="hljs-attr">arrowParens</span>: <span class="hljs-string">&quot;always&quot;</span>,<br>  <span class="hljs-comment">// 结尾是 \n \r \n\r auto</span><br>  <span class="hljs-attr">endOfLine</span>: <span class="hljs-string">&quot;auto&quot;</span>,<br>&#125;;<br></code></pre></td></tr></table></figure><p>在 <code>package.json</code> 中 script 添加 Ts 检查命令和 Eslint 检查命令</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;lint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;eslint --ext .ts,tsx,vue src/** --no-error-on-unmatched-pattern --quiet&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;lint:fix&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;eslint --ext .ts,tsx,vue src/** --no-error-on-unmatched-pattern --fix&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li><li><h5 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h5><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coq">pnpm lint<br>pnpm lint:<span class="hljs-built_in">fix</span><br></code></pre></td></tr></table></figure></li><li><h5 id="配置-vscode"><a href="#配置-vscode" class="headerlink" title="配置 vscode"></a>配置 vscode</h5><p>项目根目录创建 <code>.vscode/settings.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-comment">// 保存时格式化</span><br>  <span class="hljs-attr">&quot;editor.formatOnSave&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 保存时修复来自所有插件的所有可自动修复的ESlint错误</span><br>  <span class="hljs-attr">&quot;editor.codeActionsOnSave&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;source.fixAll.eslint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 应通过ESLint验证的语言数组</span><br>  <span class="hljs-attr">&quot;eslint.validate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;typescript&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;vue&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;html&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;json&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 默认格式化插件选择</span><br>  <span class="hljs-attr">&quot;editor.defaultFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// js格式化选择</span><br>  <span class="hljs-attr">&quot;[javascript]&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;editor.defaultFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// vue格式化选择</span><br>  <span class="hljs-attr">&quot;[vue]&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;editor.defaultFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// html格式化选择</span><br>  <span class="hljs-attr">&quot;[html]&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;editor.defaultFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// json格式化选择</span><br>  <span class="hljs-attr">&quot;[json]&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;editor.defaultFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span> <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-comment">//  &quot;json.format.enable&quot;: false</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li><li><h5 id="代码书写规范"><a href="#代码书写规范" class="headerlink" title="代码书写规范"></a>代码书写规范</h5><p>请参考 vue 官方文档规范保持一致性，小波页面参考</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;script setup lang=<span class="hljs-string">&quot;ts&quot;</span>&gt;<br> <span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 导入 start</span><br><span class="hljs-comment"> * 顺序：1.依赖库2.请求3.常量 4.组件 5. ts申明</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">import</span> vue<br><span class="hljs-keyword">import</span> api/data/piniaStore<br><span class="hljs-keyword">import</span> hooks.<span class="hljs-property">vue</span>/components.<span class="hljs-property">vue</span><br><span class="hljs-keyword">import</span> x.<span class="hljs-property">d</span><br>  <br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 变量 start</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> <span class="hljs-attr">store</span>: <span class="hljs-built_in">any</span> = ...<br><span class="hljs-keyword">const</span> <span class="hljs-attr">state</span>: stateType = <span class="hljs-title function_">reactive</span>(&#123;&#125;)<br>  <br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 函数 start</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@init</span> 初始 - 判断骨架屏处理</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> handleInit = <span class="hljs-keyword">async</span> (): <span class="hljs-title class_">Promise</span>&lt;<span class="hljs-built_in">void</span>&gt; =&gt; &#123;<br><span class="hljs-keyword">await</span> <span class="hljs-title function_">api</span>()<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>&#125;<br>  <br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 调用 start</span><br><span class="hljs-comment"> */</span><br><span class="hljs-title function_">handleInit</span>()<br>&lt;/script&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;scss&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="language-css"><span class="language-xml">  <span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;./style.scss&#x27;</span>;</span></span><br><span class="language-css"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li><li><h5 id="配置别名"><a href="#配置别名" class="headerlink" title="配置别名"></a>配置别名</h5><p><code>vite.config.ts</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; resolve &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;path&quot;</span>;<br>...<br><span class="hljs-attr">resolve</span>: &#123;    <br>  <span class="hljs-attr">alias</span>: [      <br>    &#123;        <br>      <span class="hljs-attr">find</span>: <span class="hljs-string">&quot;@&quot;</span>,        <br>      <span class="hljs-attr">replacement</span>: <span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&quot;src&quot;</span>),      <br>    &#125;,    <br>  ],  <br>&#125;,<br></code></pre></td></tr></table></figure><p>完整 <code>vite.config.ts</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; defineConfig &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite&#x27;</span><br><span class="hljs-comment">// 需要安装 @types/node</span><br><span class="hljs-keyword">import</span> &#123; resolve &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;path&#x27;</span><br><span class="hljs-keyword">import</span> uni <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@dcloudio/vite-plugin-uni&#x27;</span><br><br><span class="hljs-comment">// https://vitejs.dev/config/</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">defineConfig</span>(&#123;<br>  <span class="hljs-attr">plugins</span>: [<span class="hljs-title function_">uni</span>()],<br>  <span class="hljs-attr">resolve</span>: &#123;<br>    <span class="hljs-attr">alias</span>: [<br>      &#123;<br>        <span class="hljs-attr">find</span>: <span class="hljs-string">&#x27;@&#x27;</span>,<br>        <span class="hljs-attr">replacement</span>: <span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&#x27;src&#x27;</span>),<br>      &#125;,<br>    ],<br>  &#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><p><code>tsconfig.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;compilerOptions&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>    <br>  <span class="hljs-attr">&quot;baseUrl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;.&quot;</span><span class="hljs-punctuation">,</span>    <br>  <span class="hljs-attr">&quot;paths&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>      <br>    <span class="hljs-attr">&quot;@/*&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-string">&quot;src/*&quot;</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>    <br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span>  <br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>完整 <code>tsconfig.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;extends&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;@vue/tsconfig/tsconfig.json&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;compilerOptions&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;sourceMap&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;baseUrl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;.&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;paths&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;@/*&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;./src/*&quot;</span><span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;lib&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;esnext&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;dom&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;types&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;@dcloudio/types&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;jest&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-comment">// 导入 x.d.ts 报错 x.d.ts”不是模块。</span><br>    <span class="hljs-attr">&quot;typeRoots&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;node_modules/@types&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-comment">// 此导入从不用作值，必须使用 &quot;import type&quot; ，因为 &quot;importsNotUsedAsValues&quot; 设置为 &quot;error&quot;</span><br>    <span class="hljs-attr">&quot;importsNotUsedAsValues&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;remove&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-comment">// 是一种类型，在同时启用了 &quot;preserveValueImports&quot; 和 &quot;isolatedModules&quot; 时，必须使用仅类型导入进行导入。</span><br>    <span class="hljs-attr">&quot;preserveValueImports&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;include&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;src/**/*.ts&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;src/**/*.d.ts&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;src/**/*.tsx&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;src/**/*.vue&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;tests/**/*.ts&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;./types&quot;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-warning">注意</span></p><p>因为用了 typescript，<code>resolve</code>，<code>_dirname</code> 会报 ts 申明错误提示，需要在头部导入 ‘path’ 并安装 <strong>@types&#x2F;nodes</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add @types/node <span class="hljs-literal">-D</span><br></code></pre></td></tr></table></figure></blockquote></li></ol><br><h4 id="第六步：安装-pinia"><a href="#第六步：安装-pinia" class="headerlink" title="第六步：安装 pinia"></a>第六步：安装 pinia</h4><ol><li><h5 id="安装-pinia"><a href="#安装-pinia" class="headerlink" title="安装 pinia"></a>安装 pinia</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add pinia<br></code></pre></td></tr></table></figure></li><li><h5 id="导入-pinia"><a href="#导入-pinia" class="headerlink" title="导入 pinia"></a>导入 pinia</h5><p>正常情况直接在<code>main.ts</code> 导入 pinia</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// pinia状态管理</span><br><span class="hljs-keyword">import</span> &#123; createPinia &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">createApp</span>(<span class="hljs-params"></span>) &#123;  <br>  <span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createSSRApp</span>(<span class="hljs-title class_">App</span>)  <br>  app.<span class="hljs-title function_">use</span>(<span class="hljs-title function_">createPinia</span>())  <br>  <span class="hljs-keyword">return</span> &#123;    app,  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>但是为了做 jest 单元测试，所以需要做点调整，创建 <code>store/index.ts</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; createPinia &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><span class="hljs-keyword">const</span> pinia = <span class="hljs-title function_">createPinia</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> pinia<br></code></pre></td></tr></table></figure></li><li><h5 id="代码使用"><a href="#代码使用" class="headerlink" title="代码使用"></a>代码使用</h5><p><code>src/pages/menu/index.vue</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> pinia <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/stores/index&#x27;</span> <span class="hljs-comment">// == createPinia()</span><br><span class="hljs-keyword">import</span> &#123; useGolbalSysInfoStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/stores/golbalSysInfo&#x27;</span><br><br><span class="hljs-keyword">const</span> golbalSysInfo = <span class="hljs-title function_">useGolbalSysInfoStore</span>(pinia)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;customGlobalData------&#x27;</span>, golbalSysInfo.<span class="hljs-property">sysInfo</span>)<br></code></pre></td></tr></table></figure><p>需要响应式则如下操作，同 vue3 组件父子传值绑定双向原理相同</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> pinia <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/stores/index&#x27;</span> <span class="hljs-comment">// createPinia()</span><br><span class="hljs-keyword">import</span> &#123; useCounterStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/stores/counter&#x27;</span><br><span class="hljs-keyword">import</span> &#123; storeToRefs &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><br><span class="hljs-keyword">const</span> counter = <span class="hljs-title function_">useCounterStore</span>(pinia)<br><span class="hljs-comment">// 用 storeToRefs 双向后再解构出 count</span><br><span class="hljs-keyword">let</span> &#123; count &#125; = <span class="hljs-title function_">storeToRefs</span>(counter) <span class="hljs-comment">// 此时count为响应式的</span><br></code></pre></td></tr></table></figure></li></ol><br><h4 id="第七步：安装-sass"><a href="#第七步：安装-sass" class="headerlink" title="第七步：安装 sass"></a>第七步：安装 sass</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">pnpm <span class="hljs-built_in">add</span> sass -D<br></code></pre></td></tr></table></figure><p>因为我们是使用 Vite 进行开发，所以只需要安装一下 sass 就可以了，不需要额外配置，不像 webpack 那样安装loader</p><br><h4 id="第八步：封装-uni-request-实现网络请求"><a href="#第八步：封装-uni-request-实现网络请求" class="headerlink" title="第八步：封装 uni.request 实现网络请求"></a>第八步：封装 <code>uni.request</code> 实现网络请求</h4><ol><li><h5 id="src-文件夹中创建-config-app-ts"><a href="#src-文件夹中创建-config-app-ts" class="headerlink" title="src 文件夹中创建 config/app.ts"></a>src 文件夹中创建 <code>config/app.ts</code></h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// app名字</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">APP_NAME</span> = <span class="hljs-string">&#x27;廿壴博客&#x27;</span><br><span class="hljs-comment">// app的图片 // 静态资源的cos地址</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">IMAGE_URL</span> = <span class="hljs-string">&#x27;https://blog.ganxb2.com/img/about/blog_log.png&#x27;</span><br><span class="hljs-comment">// mock请求地址</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">HTTP_REQUEST_URL</span> = <span class="hljs-string">&#x27;http://localhost:3300&#x27;</span><br><span class="hljs-comment">// 请求头 - json</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">HEADER</span> = &#123;<br>  <span class="hljs-string">&#x27;content-type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>,<br>&#125;<br><span class="hljs-comment">// 请求头 - 表单</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">HEADERPARAMS</span> = &#123;<br>  <span class="hljs-string">&#x27;content-type&#x27;</span>: <span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>,<br>&#125;<br><span class="hljs-comment">// tokenName</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">TOKENNAME</span> = <span class="hljs-string">&#x27;Authorization&#x27;</span><br></code></pre></td></tr></table></figure></li><li><h5 id="src-文件夹中创建-utils-request-ts"><a href="#src-文件夹中创建-utils-request-ts" class="headerlink" title="src 文件夹中创建 utils/request.ts"></a>src 文件夹中创建 <code>utils/request.ts</code></h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">/* eslint-disable @typescript-eslint/ban-types */</span><br><span class="hljs-comment">// 获取常量</span><br><span class="hljs-keyword">import</span> &#123; <span class="hljs-variable constant_">HEADER</span>, <span class="hljs-variable constant_">HEADERPARAMS</span>, <span class="hljs-variable constant_">TOKENNAME</span>, <span class="hljs-variable constant_">HTTP_REQUEST_URL</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/config/app&#x27;</span><br><span class="hljs-comment">// import &#123; useCounterStore &#125; from &#x27;@/stores/counter&#x27;</span><br><span class="hljs-comment">// import &#123; useStore &#125; from &#x27;vuex&#x27;</span><br><span class="hljs-comment">// 导入申明</span><br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">RequestOptionsMethod</span>, <span class="hljs-title class_">RequestOptionsMethodAll</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./request.d&#x27;</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 发送请求</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-comment">// type handleBaseRequestType()</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleBaseRequest</span>(<span class="hljs-params"></span><br><span class="hljs-params">  url: <span class="hljs-built_in">string</span>,</span><br><span class="hljs-params">  method: RequestOptionsMethod,</span><br><span class="hljs-params">  data: <span class="hljs-built_in">any</span>,</span><br><span class="hljs-params">  &#123; noAuth = <span class="hljs-literal">false</span>, noVerify = <span class="hljs-literal">false</span> &#125;: <span class="hljs-built_in">any</span>,</span><br><span class="hljs-params">  params: <span class="hljs-built_in">unknown</span></span><br><span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">// const store = useStore()</span><br>  <span class="hljs-comment">// const token = store.state.app.token</span><br>  <span class="hljs-comment">// 从pinia中获取</span><br>  <span class="hljs-keyword">const</span> token = <span class="hljs-string">&#x27;islogin&#x27;</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-title class_">Url</span> = <span class="hljs-variable constant_">HTTP_REQUEST_URL</span><br>  <span class="hljs-keyword">let</span> header = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(<span class="hljs-variable constant_">HEADER</span>))<br><br>  <span class="hljs-comment">// 如果传了参数 =&gt; 表单</span><br>  <span class="hljs-keyword">if</span> (params != <span class="hljs-literal">undefined</span>) &#123;<br>    header = <span class="hljs-variable constant_">HEADERPARAMS</span><br>  &#125;<br>  <span class="hljs-comment">// 如果未授权</span><br>  <span class="hljs-keyword">if</span> (!noAuth) &#123;<br>    <span class="hljs-comment">// 并且token也是false</span><br>    <span class="hljs-keyword">if</span> (!token) &#123;<br>      <span class="hljs-comment">// 提示未登录</span><br>      <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(&#123;<br>        <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;未登录&#x27;</span>,<br>      &#125;)<br>    &#125;<br>    <span class="hljs-comment">// 有token并且不是Null 则拼token给请求头</span><br>    <span class="hljs-keyword">if</span> (token &amp;&amp; token !== <span class="hljs-literal">null</span>) header[<span class="hljs-variable constant_">TOKENNAME</span>] = <span class="hljs-string">&#x27;Bearer &#x27;</span> + token<br>  &#125;<br><br>  <span class="hljs-comment">// 返回封装请求</span><br>  <span class="hljs-comment">// resolve: (value: unknown) =&gt; void, reject: (reason?: any) =&gt; void) =&gt; void</span><br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>((reslove, reject): <span class="hljs-function"><span class="hljs-params">any</span> =&gt;</span> &#123;<br>    <span class="hljs-comment">// 加载提示</span><br>    uni.<span class="hljs-title function_">showLoading</span>(&#123;<br>      <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;加载中&#x27;</span>,<br>      <span class="hljs-attr">mask</span>: <span class="hljs-literal">true</span>,<br>    &#125;)<br><br>    <span class="hljs-comment">// uni请求</span><br>    uni.<span class="hljs-title function_">request</span>(&#123;<br>      <span class="hljs-comment">// 常量Url拼上调用时传入的不同接口</span><br>      <span class="hljs-attr">url</span>: <span class="hljs-title class_">Url</span> + url,<br>      <span class="hljs-attr">method</span>: method || <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-attr">header</span>: header,<br>      <span class="hljs-attr">data</span>: data || &#123;&#125;,<br>      <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res: <span class="hljs-built_in">any</span></span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;uni请求封装 -------&#x27;</span>, res)<br>        <span class="hljs-comment">// 成功关闭loading</span><br>        uni.<span class="hljs-title function_">hideLoading</span>()<br>        <span class="hljs-comment">// 如果有token并且token不为null则修改状态管理的token</span><br>        res.<span class="hljs-property">data</span>.<span class="hljs-property">token</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">token</span> !== <span class="hljs-string">&#x27;null&#x27;</span> &amp;&amp; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;修改状态管理的token&#x27;</span>)<br>        <span class="hljs-comment">// store.commit(&#x27;LOGIN&#x27;, &#123;</span><br>        <span class="hljs-comment">//   token: res.data.token,</span><br>        <span class="hljs-comment">// &#125;)</span><br>        <span class="hljs-comment">// console.log(&#x27;noVerify ------&#x27;, noVerify, res)</span><br>        <span class="hljs-comment">// 如果未验证抛出返回对象</span><br>        <span class="hljs-keyword">if</span> (noVerify) &#123;<br>          <span class="hljs-title function_">reslove</span>(res)<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (res.<span class="hljs-property">statusCode</span> === <span class="hljs-number">200</span>) &#123;<br>          <span class="hljs-comment">// console.log(&#x27;statusCode ------&#x27;, res.statusCode)</span><br>          <span class="hljs-comment">// 如果验证了并且 code = 200 则抛出返回的data</span><br>          <span class="hljs-title function_">reslove</span>(res.<span class="hljs-property">data</span>)<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-comment">// code 不是200也没有验证标识抛出错误</span><br>          <span class="hljs-title function_">reject</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span> || <span class="hljs-string">&#x27;系统错误&#x27;</span>)<br>        &#125;<br>      &#125;,<br>      <span class="hljs-comment">// 请求失败</span><br>      <span class="hljs-attr">fail</span>: <span class="hljs-function"><span class="hljs-params">msg</span> =&gt;</span> &#123;<br>        uni.<span class="hljs-title function_">hideLoading</span>()<br>        <span class="hljs-title function_">reject</span>(<span class="hljs-string">&#x27;请求失败&#x27;</span>)<br>      &#125;,<br>    &#125;)<br>  &#125;)<br>&#125;<br><br><span class="hljs-comment">// const request: Request = &#123;&#125;</span><br><span class="hljs-comment">// 请求类型数组</span><br><span class="hljs-keyword">const</span> <span class="hljs-attr">requestOptions</span>: <span class="hljs-title class_">RequestOptionsMethodAll</span>[] = [<br>  <span class="hljs-string">&#x27;options&#x27;</span>,<br>  <span class="hljs-string">&#x27;get&#x27;</span>,<br>  <span class="hljs-string">&#x27;post&#x27;</span>,<br>  <span class="hljs-string">&#x27;put&#x27;</span>,<br>  <span class="hljs-string">&#x27;head&#x27;</span>,<br>  <span class="hljs-string">&#x27;delete&#x27;</span>,<br>  <span class="hljs-string">&#x27;trace&#x27;</span>,<br>  <span class="hljs-string">&#x27;connect&#x27;</span>,<br>]<br><span class="hljs-comment">// 自定义ts的校验 methods</span><br><span class="hljs-keyword">type</span> <span class="hljs-title class_">Methods</span> = (<span class="hljs-keyword">typeof</span> requestOptions)[<span class="hljs-built_in">number</span>]<br><span class="hljs-comment">// 定义request对象去接封装的请求（TS申明：如果在Methods中的一项）</span><br><span class="hljs-keyword">const</span> <span class="hljs-attr">request</span>: &#123; [key <span class="hljs-keyword">in</span> <span class="hljs-title class_">Methods</span>]?: <span class="hljs-title class_">Function</span> &#125; = &#123;&#125;<br><br><span class="hljs-comment">// 循环请求类型数组</span><br>requestOptions.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">method</span> =&gt;</span> &#123;<br>  <span class="hljs-comment">// item</span><br>  <span class="hljs-keyword">const</span> m = method.<span class="hljs-title function_">toUpperCase</span>() <span class="hljs-keyword">as</span> <span class="hljs-built_in">unknown</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">RequestOptionsMethod</span><br>  <span class="hljs-comment">// ge: &#123; get()&#123;&#125; &#125;</span><br>  request[method] = <span class="hljs-function">(<span class="hljs-params">api: <span class="hljs-built_in">string</span>, data: <span class="hljs-built_in">any</span>, opt: RequestOptionsMethod, params: <span class="hljs-built_in">unknown</span></span>) =&gt;</span><br>    <span class="hljs-title function_">handleBaseRequest</span>(api, m, data, opt || &#123;&#125;, params)<br>&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> request<br></code></pre></td></tr></table></figure></li><li><h5 id="src-文件夹中创建-api-user-ts"><a href="#src-文件夹中创建-api-user-ts" class="headerlink" title="src 文件夹中创建 api/user.ts"></a>src 文件夹中创建 <code>api/user.ts</code></h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> request <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/utils/request&#x27;</span><br><span class="hljs-keyword">import</span> &#123; userInfoType &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./user.d&#x27;</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取用户信息</span><br><span class="hljs-comment"> * 考虑错误返回 还要联合申明，暂时只写正确返回</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">fetchUserInfo</span>(<span class="hljs-params"></span>): <span class="hljs-title class_">Promise</span>&lt;userInfoType&gt; &#123;<br>  <span class="hljs-keyword">return</span> request?.<span class="hljs-property">get</span>?.(<span class="hljs-string">&#x27;/user/userInfo&#x27;</span>, &#123;&#125;, &#123; <span class="hljs-attr">noAuth</span>: <span class="hljs-literal">true</span> &#125;)<br>&#125;<br></code></pre></td></tr></table></figure></li><li><h5 id="调用-1"><a href="#调用-1" class="headerlink" title="调用"></a>调用</h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; fetchUserInfo &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/api/user&#x27;</span><br>...<br><span class="hljs-title function_">fetchUserInfo</span>()<br>  .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">r: userInfoType</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;用户信息---&#x27;</span>, r)<br>  &#125;)<br>  .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err))<br></code></pre></td></tr></table></figure></li></ol><br><h4 id="第九步：利用-nodejs-koa-配置-mock-数据服务器"><a href="#第九步：利用-nodejs-koa-配置-mock-数据服务器" class="headerlink" title="第九步：利用 nodejs - koa 配置 mock 数据服务器"></a>第九步：利用 nodejs - koa 配置 mock 数据服务器</h4><p>因为这个服务是集成到当前 uni-app 中，所以不用把依赖装到 <code>dependencies</code> </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;devDependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>    <br>  <span class="hljs-attr">&quot;koa&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.13.0&quot;</span><span class="hljs-punctuation">,</span>    <br>  <span class="hljs-attr">&quot;koa-body&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^4.2.0&quot;</span><span class="hljs-punctuation">,</span> <br>  <span class="hljs-comment">// koa-logger提供了输出请求日志的功能，包括请求的url、状态码、响应时间、响应体大小等信息 logger返回的信息丢给log4js    </span><br>  <span class="hljs-attr">&quot;koa-logger&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.2.1&quot;</span><span class="hljs-punctuation">,</span>    <br>  <span class="hljs-attr">&quot;koa-router&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^10.0.0&quot;</span><span class="hljs-punctuation">,</span>    <br>  <span class="hljs-attr">&quot;koa2-cors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.6&quot;</span><span class="hljs-punctuation">,</span> <br>  <span class="hljs-comment">// Lodash 是一个一致性、模块化、高性能的 JavaScript 实用工具库。    </span><br>  <span class="hljs-attr">&quot;lodash&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^4.17.20&quot;</span><span class="hljs-punctuation">,</span> <br>  <span class="hljs-comment">// 日志    </span><br>  <span class="hljs-attr">&quot;log4js&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^6.3.0&quot;</span><span class="hljs-punctuation">,</span> <br>  <span class="hljs-comment">// Faker 模块用于生成伪造数据，不仅伪造数据，感染组织良好的伪造数据    </span><br>  <span class="hljs-attr">&quot;faker&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;5.1.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 是 ES7 的一个提案，它主要用来在声明的时候添加和读取元数据。    </span><br>  <span class="hljs-attr">&quot;reflect-metadata&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^0.1.13&quot;</span>    <br>  <span class="hljs-attr">&quot;@types/koa&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.11.6&quot;</span><span class="hljs-punctuation">,</span>    <br>  <span class="hljs-attr">&quot;@types/koa-logger&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.1.1&quot;</span><span class="hljs-punctuation">,</span>    <br>  <span class="hljs-attr">&quot;@types/koa-router&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^7.4.1&quot;</span><span class="hljs-punctuation">,</span>    <br>  <span class="hljs-attr">&quot;@types/koa2-cors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.1&quot;</span><span class="hljs-punctuation">,</span>  <br>  <span class="hljs-comment">// faker@6+ 已经默认带了申明不需要安装 @types/faker@6.6.9: This is a stub types definition. faker provides its own type definitions, so you do not need this installed.    </span><br>  <span class="hljs-attr">&quot;@types/faker&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;5.1.5&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;ts-node-dev&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;tslib&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.5.0&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><ol><li><h5 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add ts<span class="hljs-literal">-node-dev</span> <span class="hljs-literal">-D</span><br>pnpm add koa <span class="hljs-literal">-D</span><br>pnpm add koa<span class="hljs-literal">-body</span> <span class="hljs-literal">-D</span><br>pnpm add koa<span class="hljs-literal">-logger</span> <span class="hljs-literal">-D</span><br>pnpm add koa<span class="hljs-literal">-router</span> <span class="hljs-literal">-D</span><br>pnpm add koa2<span class="hljs-literal">-cors</span> <span class="hljs-literal">-D</span><br>// 一个一致性、模块化、高性能的 JavaScript 实用工具库<br>pnpm add lodash <span class="hljs-literal">-D</span><br>// 日志<br>pnpm add log4js <span class="hljs-literal">-D</span><br>// ES7 的一个提案，它主要用来在声明的时候添加和读取元数据。 <br>pnpm add reflect<span class="hljs-literal">-metadata</span> <span class="hljs-literal">-D</span><br>// 终端打印信息增加个性化颜色 特别注意 chalk 一定要指定版本<br>pnpm add chalk@<span class="hljs-number">4.1</span>.<span class="hljs-number">2</span> <span class="hljs-literal">-D</span><br>// 生成伪造数据 特别注意 faker 一定要指定版本<br>pnpm add faker@<span class="hljs-number">5.1</span>.<span class="hljs-number">0</span>  <span class="hljs-literal">-D</span><br>pnpm add @types/faker@<span class="hljs-number">5.1</span>.<span class="hljs-number">5</span> <span class="hljs-literal">-D</span><br>pnpm add @types/koa <span class="hljs-literal">-D</span><br>pnpm add @types/koa<span class="hljs-literal">-logger</span> <span class="hljs-literal">-D</span><br>pnpm add @types/koa<span class="hljs-literal">-router</span> <span class="hljs-literal">-D</span><br>pnpm add @types/koa2<span class="hljs-literal">-cors</span> <span class="hljs-literal">-D</span><br>pnpm add @types/koa2<span class="hljs-literal">-cors</span> <span class="hljs-literal">-D</span><br>pnpm add tslib <span class="hljs-literal">-D</span><br></code></pre></td></tr></table></figure></li><li><h5 id="贴入小波仓库中的-mock-文件夹"><a href="#贴入小波仓库中的-mock-文件夹" class="headerlink" title="贴入小波仓库中的 mock 文件夹"></a>贴入小波仓库中的 mock 文件夹</h5></li><li><h5 id="package-json-里配置-mock-服务器启动命令"><a href="#package-json-里配置-mock-服务器启动命令" class="headerlink" title="package.json 里配置 mock 服务器启动命令"></a><code>package.json</code> 里配置 mock 服务器启动命令</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;mock&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;cd mock &amp;&amp; ts-node-dev mock.ts&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li><li><h5 id="开启-mock-服务"><a href="#开启-mock-服务" class="headerlink" title="开启 mock 服务"></a>开启 mock 服务</h5><p>新建个终端窗口，然后切到 uni-app 工程项目文件夹执行以下代码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">cd</span> your uni<span class="hljs-literal">-app</span><br>pnpm mock<br></code></pre></td></tr></table></figure></li></ol><br><blockquote><p>你可能遇到错误请参考如下解决方案</p><p><span class="label label-danger">报错</span></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">[<span class="hljs-type">INFO</span>] <span class="hljs-number">17</span>:<span class="hljs-number">13</span>:<span class="hljs-number">02</span> ts<span class="hljs-literal">-node-dev</span> ver. <span class="hljs-number">2.0</span>.<span class="hljs-number">0</span> (<span class="hljs-keyword">using</span> ts-node ver. 10.9.1, <span class="hljs-keyword">type</span>script ver. 4.9.5)Error [ERR_REQUIRE_ESM]: require() of ES <span class="hljs-keyword">Module</span> C:\myWeb\vue3-vite-uniapp\node_<span class="hljs-keyword">module</span>s\.pnpm\chalk@5.2.0\node_<span class="hljs-keyword">module</span>s\chalk\source\index.js from C:\myWeb\vue3-vite-uniapp\mock\mock.ts not supported.Instead change the require of index.js in C:\myWeb\vue3-vite-uniapp\mock\mock.ts to a dynamic import() which is available in all CommonJS <span class="hljs-keyword">module</span>s.    at require.extensions..jsx.require.extensions..js (C:\Users\ganxb\AppData\Local\Temp\ts-node-dev-hook-33103583567897243.js:114:20)    at Object.nodeDevHook [as .js] (C:\myWeb\vue3-vite-uniapp\node_<span class="hljs-keyword">module</span>s\.pnpm\ts-node-dev@2.0.0_67kvwwhfsxe4y463wcu4dtvggu\node_<span class="hljs-keyword">module</span>s\ts-node-dev\lib\hook.js:63:13)    at Object.&lt;anonymous&gt; (C:\myWeb\vue3-vite-uniapp\mock\mock.ts:12:41)    at <span class="hljs-keyword">Module</span>._compile (C:\myWeb\vue3-vite-uniapp\node_<span class="hljs-keyword">module</span>s\.pnpm\source-map-support@0.5.21\node_<span class="hljs-keyword">module</span>s\source-map-support\source-map-support.js:568:25)    at <span class="hljs-keyword">Module</span>.m._compile (C:\Users\ganxb\AppData\Local\Temp\ts-node-dev-hook-33103583567897243.js:69:33)    at require.extensions..jsx.require.extensions..js (C:\Users\ganxb\AppData\Local\Temp\ts-node-dev-hook-33103583567897243.js:114:20)    at require.extensions.&lt;computed&gt; (C:\Users\ganxb\AppData\Local\Temp\ts-node-dev-hook-33103583567897243.js:71:20)    at Object.nodeDevHook [as .ts] (C:\myWeb\vue3-vite-uniapp\node_<span class="hljs-keyword">module</span>s\.pnpm\ts-node-dev@2.0.0_67kvwwhfsxe4y463wcu4dtvggu\node_<span class="hljs-keyword">module</span>s\ts-node-dev\lib\hook.js:63:13)    at Object.&lt;anonymous&gt; (C:\myWeb\vue3-vite-uniapp\node_<span class="hljs-keyword">module</span>s\.pnpm\ts-node-dev@2.0.0_67kvwwhfsxe4y463wcu4dtvggu\node_<span class="hljs-keyword">module</span>s\ts-node-dev\lib\wrap.js:104:1)    at <span class="hljs-keyword">Module</span>._compile (C:\myWeb\vue3-vite-uniapp\node_<span class="hljs-keyword">module</span>s\.pnpm\source-map-support@0.5.21\node_<span class="hljs-keyword">module</span>s\source-map-support\source-map-support.js:568:25)    at Object.require.extensions..jsx.require.extensions..js (C:\Users\ganxb\AppData\Local\Temp\ts-node-dev-hook-33103583567897243.js:95:24)[ERROR] 17:13:08 Error: require() of ES <span class="hljs-keyword">Module</span> C:\myWeb\vue3-vite-uniapp\node_<span class="hljs-keyword">module</span>s\.pnpm\chalk@5.2.0\node_<span class="hljs-keyword">module</span>s\chalk\source\index.js from C:\myWeb\vue3-vite-uniapp\mock\mock.ts not supported.Instead change the require of index.js in C:\myWeb\vue3-vite-uniapp\mock\mock.ts to a dynamic import() which is available in all CommonJS <span class="hljs-keyword">module</span>s.<br></code></pre></td></tr></table></figure><p>原因：因为chalk版本问题</p><p>解决方案：降到4.1.2</p><br><p><span class="label label-danger">报错</span></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">@prefix(<span class="hljs-string">&#x27;/banner&#x27;</span>)⨯ Unable to compile TypeScript:controller/banner.ts(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>): error TS2354: This syntax requires an imported helper but module <span class="hljs-string">&#x27;tslib&#x27;</span> cannot be found.<br></code></pre></td></tr></table></figure><p>解决方案：</p><p>安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add tslib <span class="hljs-literal">-D</span><br></code></pre></td></tr></table></figure><p>mock 后端服务文件夹中 <code>tsconfig.json</code> 增加</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;compilerOptions&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    ...<br>    <span class="hljs-attr">&quot;paths&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;tslib&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;node_modules/tslib/tslib.d.ts&quot;</span><span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><br><p><span class="label label-danger">报错</span></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">Cannot find module <span class="hljs-string">&#x27;C:\myWeb\vue3-vite-uniapp\node_modules\faker\index.js&#x27;</span>. Please verify that the package.json has a valid <span class="hljs-string">&quot;main&quot;</span> entry<br></code></pre></td></tr></table></figure><p>解决方案：卸载最新版本重新安装指定版本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm remove faker<br>pnpm remove @types/faker<br><br>pnpm add faker@<span class="hljs-number">5.1</span>.<span class="hljs-number">0</span> <br>pnpm add @types/faker@<span class="hljs-number">5.1</span>.<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure></blockquote><br><h4 id="第十步：配置-jest-单元测试"><a href="#第十步：配置-jest-单元测试" class="headerlink" title="第十步：配置 jest 单元测试"></a>第十步：配置 jest 单元测试</h4><ol><li><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add <span class="hljs-literal">-D</span> @babel/core @babel/p<span class="hljs-built_in">reset-env</span> @testing<span class="hljs-literal">-library</span>/jest<span class="hljs-literal">-dom</span> @types/jest @vue/<span class="hljs-built_in">test-utils</span>@next babel<span class="hljs-literal">-jest</span>@<span class="hljs-number">26.6</span>.<span class="hljs-number">3</span> ts<span class="hljs-literal">-jest</span>@<span class="hljs-number">26.5</span>.<span class="hljs-number">6</span> vue<span class="hljs-literal">-jest</span>@next jest@<span class="hljs-number">26.6</span>.<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure></li><li><h5 id="项目根目录创建-jest-config-js"><a href="#项目根目录创建-jest-config-js" class="headerlink" title="项目根目录创建 jest.config.js"></a>项目根目录创建 <code>jest.config.js</code></h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>)<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">rootDir</span>: path.<span class="hljs-title function_">resolve</span>(__dirname),<br>  <span class="hljs-attr">clearMocks</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">coverageDirectory</span>: <span class="hljs-string">&#x27;coverage&#x27;</span>,<br>  <span class="hljs-attr">coverageProvider</span>: <span class="hljs-string">&#x27;v8&#x27;</span>,<br>  <span class="hljs-attr">moduleFileExtensions</span>: [<span class="hljs-string">&#x27;vue&#x27;</span>, <span class="hljs-string">&#x27;js&#x27;</span>, <span class="hljs-string">&#x27;json&#x27;</span>, <span class="hljs-string">&#x27;jsx&#x27;</span>, <span class="hljs-string">&#x27;ts&#x27;</span>, <span class="hljs-string">&#x27;tsx&#x27;</span>, <span class="hljs-string">&#x27;node&#x27;</span>],<br>  <span class="hljs-comment">// 别名设置 src下components里组件  &lt;rootDir&gt;/src/components/$1</span><br>  <span class="hljs-attr">moduleNameMapper</span>: &#123;<br>    <span class="hljs-string">&#x27;@/(.*)$&#x27;</span>: <span class="hljs-string">&#x27;&lt;rootDir&gt;/src/$1&#x27;</span>,<br>  &#125;,<br>  <span class="hljs-attr">preset</span>: <span class="hljs-string">&#x27;ts-jest&#x27;</span>,<br>  <span class="hljs-attr">testEnvironment</span>: <span class="hljs-string">&#x27;jsdom&#x27;</span>,<br>  <span class="hljs-comment">// 测试文件 自己写的</span><br>  <span class="hljs-attr">testMatch</span>: [<span class="hljs-string">&#x27;&lt;rootDir&gt;/tests/unit/*.spec.ts?(x)&#x27;</span>],<br>  <span class="hljs-attr">transform</span>: &#123;<br>    <span class="hljs-string">&#x27;^.+\\.vue$&#x27;</span>: <span class="hljs-string">&#x27;vue-jest&#x27;</span>,<br>    <span class="hljs-string">&#x27;^.+\\js$&#x27;</span>: <span class="hljs-string">&#x27;babel-jest&#x27;</span>,<br>    <span class="hljs-string">&#x27;^.+\\.(t|j)sx?$&#x27;</span>: <span class="hljs-string">&#x27;ts-jest&#x27;</span>,<br>  &#125;,<br>&#125;<br></code></pre></td></tr></table></figure></li><li><h5 id="配置-tsconfig-json"><a href="#配置-tsconfig-json" class="headerlink" title="配置 tsconfig.json"></a>配置 <code>tsconfig.json</code></h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-string">&quot;compilerOptions&quot;</span>: &#123;<br>  <span class="hljs-string">&quot;types&quot;</span>: [<span class="hljs-string">&quot;@dcloudio/types&quot;</span>, <span class="hljs-string">&quot;jest&quot;</span>],<br>&#125;<br></code></pre></td></tr></table></figure></li><li><h5 id="项目根目录中创建实例-tests-unit-HelloWorld-spec-ts"><a href="#项目根目录中创建实例-tests-unit-HelloWorld-spec-ts" class="headerlink" title="项目根目录中创建实例 tests/unit/HelloWorld.spec.ts"></a>项目根目录中创建实例 <code>tests/unit/HelloWorld.spec.ts</code></h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; mount &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@vue/test-utils&#x27;</span><br><span class="hljs-comment">// 导入需要测试页面</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">HelloWorld</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/counter/counter.vue&#x27;</span><br><span class="hljs-keyword">import</span> &#123; useCounterStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../request&#x27;</span><br><br><span class="hljs-title function_">test</span>(<span class="hljs-string">&#x27;add stores count&#x27;</span>, <span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-comment">// 获取整个wrapper</span><br>  <span class="hljs-keyword">const</span> wrapper = <span class="hljs-title function_">mount</span>(<span class="hljs-title class_">HelloWorld</span>)<br><br>  <span class="hljs-comment">// 获取dom: title的text判断是不是&#x27;0&#x27;</span><br>  <span class="hljs-title function_">expect</span>(wrapper.<span class="hljs-title function_">find</span>(<span class="hljs-string">&#x27;.title&#x27;</span>).<span class="hljs-title function_">text</span>()).<span class="hljs-title function_">toBe</span>(<span class="hljs-string">&#x27;0&#x27;</span>)<br>  <span class="hljs-comment">// 触发按钮点击</span><br>  <span class="hljs-keyword">await</span> wrapper.<span class="hljs-title function_">find</span>(<span class="hljs-string">&#x27;.button&#x27;</span>).<span class="hljs-title function_">trigger</span>(<span class="hljs-string">&#x27;tap&#x27;</span>)<br>  <span class="hljs-keyword">const</span> acount = <span class="hljs-title function_">useCounterStore</span>()<br>  <span class="hljs-title function_">expect</span>(acount.<span class="hljs-property">count</span>).<span class="hljs-title function_">toBe</span>(<span class="hljs-number">1</span>)<br>  <span class="hljs-comment">// 再获取dom: title的text判断是不是&#x27;1&#x27;</span><br>  <span class="hljs-title function_">expect</span>(wrapper.<span class="hljs-title function_">find</span>(<span class="hljs-string">&#x27;.title&#x27;</span>).<span class="hljs-title function_">text</span>()).<span class="hljs-title function_">toBe</span>(<span class="hljs-string">&#x27;1&#x27;</span>)<br>&#125;)<br></code></pre></td></tr></table></figure></li><li><h5 id="package-json-添加命令"><a href="#package-json-添加命令" class="headerlink" title="package.json 添加命令"></a><code>package.json</code> 添加命令</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br> <span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br> ...<br>  <span class="hljs-attr">&quot;test&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jest&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;test:unit&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jest --coverage&quot;</span><br> <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm test<br><br>// 输出结果<br>&gt; uni<span class="hljs-literal">-preset-vue</span>@<span class="hljs-number">0.0</span>.<span class="hljs-number">0</span> test C:\myWeb\uniapp_vue3_vite_pinia<br>&gt; jest<br><br> PASS  tests/unit/HelloWorld.spec.ts<br> PASS  tests/unit/testIndex.spec.ts (<span class="hljs-number">9.762</span> s)<br>  ● Console<br><br>    console.log<br>      <span class="hljs-number">111</span><br><br>      at Object.&lt;anonymous&gt; (tests/unit/testIndex.spec.ts:<span class="hljs-number">34</span>:<span class="hljs-number">11</span>)<br><br><br>Test Suites: <span class="hljs-number">2</span> passed, <span class="hljs-number">2</span> total<br>Tests:       <span class="hljs-number">2</span> passed, <span class="hljs-number">2</span> total<br>Snapshots:   <span class="hljs-number">0</span> total<br>Time:        <span class="hljs-number">13.767</span> s, estimated <span class="hljs-number">19</span> s<br>Ran all test suites<br></code></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm test:unit<br><br>// 输出结果<br>&gt; uni<span class="hljs-literal">-preset-vue</span>@<span class="hljs-number">0.0</span>.<span class="hljs-number">0</span> test:unit C:\myWeb\uniapp_vue3_vite_pinia<br>&gt; jest <span class="hljs-literal">--coverage</span><br><br> PASS  tests/unit/testIndex.spec.ts<br>  ● Console<br><br>    console.log<br>      <span class="hljs-number">111</span><br><br>      at Object.&lt;anonymous&gt; (tests/unit/testIndex.spec.ts:<span class="hljs-number">34</span>:<span class="hljs-number">11</span>)<br><br> PASS  tests/unit/HelloWorld.spec.ts<br><span class="hljs-literal">------------------------</span>|<span class="hljs-literal">---------</span>|<span class="hljs-literal">----------</span>|<span class="hljs-literal">---------</span>|<span class="hljs-literal">---------</span>|<span class="hljs-literal">-------------------</span><br>File                    | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line <span class="hljs-comment">#s</span><br><span class="hljs-literal">------------------------</span>|<span class="hljs-literal">---------</span>|<span class="hljs-literal">----------</span>|<span class="hljs-literal">---------</span>|<span class="hljs-literal">---------</span>|<span class="hljs-literal">-------------------</span><br>All files               |   <span class="hljs-number">97.11</span> |      <span class="hljs-number">100</span> |      <span class="hljs-number">40</span> |   <span class="hljs-number">97.11</span> |<br> src/components/counter |     <span class="hljs-number">100</span> |      <span class="hljs-number">100</span> |     <span class="hljs-number">100</span> |     <span class="hljs-number">100</span> |<br>  counter.vue           |     <span class="hljs-number">100</span> |      <span class="hljs-number">100</span> |     <span class="hljs-number">100</span> |     <span class="hljs-number">100</span> |<br> src/stores             |   <span class="hljs-number">96.55</span> |      <span class="hljs-number">100</span> |      <span class="hljs-number">50</span> |   <span class="hljs-number">96.55</span> |<br>  counter.ts            |   <span class="hljs-number">96.15</span> |      <span class="hljs-number">100</span> |      <span class="hljs-number">50</span> |   <span class="hljs-number">96.15</span> | <span class="hljs-number">12</span><br>  index.ts              |     <span class="hljs-number">100</span> |      <span class="hljs-number">100</span> |     <span class="hljs-number">100</span> |     <span class="hljs-number">100</span> |<br> tests                  |      <span class="hljs-number">95</span> |      <span class="hljs-number">100</span> |       <span class="hljs-number">0</span> |      <span class="hljs-number">95</span> |<br>  request.ts            |      <span class="hljs-number">95</span> |      <span class="hljs-number">100</span> |       <span class="hljs-number">0</span> |      <span class="hljs-number">95</span> | <span class="hljs-number">20</span>,<span class="hljs-number">26</span><br><span class="hljs-literal">------------------------</span>|<span class="hljs-literal">---------</span>|<span class="hljs-literal">----------</span>|<span class="hljs-literal">---------</span>|<span class="hljs-literal">---------</span>|<span class="hljs-literal">-------------------</span><br><br>Test Suites: <span class="hljs-number">2</span> passed, <span class="hljs-number">2</span> total<br>Tests:       <span class="hljs-number">2</span> passed, <span class="hljs-number">2</span> total<br>Snapshots:   <span class="hljs-number">0</span> total<br>Time:        <span class="hljs-number">9.287</span> s, estimated <span class="hljs-number">10</span> s<br>Ran all test suites.<br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-info">提示</span></p><p>执行查询覆盖命令后同时会在项目根目录创建coverage 文件夹，<code>coverage/lcov-report/index.html</code> 可以网页UI模式查看。</p></blockquote></li></ol><br><blockquote><p>你可能遇到错误请参考如下解决方案</p><p><span class="label label-danger">报错</span></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">Test environment jest<span class="hljs-literal">-environment-jsdom</span> cannot be found.<br></code></pre></td></tr></table></figure><p>原因：由于 jest 版本不对</p><p>解决方案：安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add jest<span class="hljs-literal">-environment-jsdom</span> <span class="hljs-literal">-D</span><br></code></pre></td></tr></table></figure><br><p><span class="label label-danger">报错</span></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">TypeError: Cannot destructure property <span class="hljs-string">&#x27;config&#x27;</span> of <span class="hljs-string">&#x27;undefined&#x27;</span> as it is undefined.<br></code></pre></td></tr></table></figure><p>原因：同上，由于 jest 版本不对</p><p>解决方案：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">换 <span class="hljs-string">&quot;jest&quot;</span>: <span class="hljs-string">&quot;^26.6.3&quot;</span><br>换 <span class="hljs-string">&quot;ts-jest&quot;</span>: <span class="hljs-string">&quot;^26.5.6&quot;</span><br>换 babel<span class="hljs-literal">-jest</span>@<span class="hljs-number">26.3</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure></blockquote><br><h4 id="第十一步：挂载-uni-ui"><a href="#第十一步：挂载-uni-ui" class="headerlink" title="第十一步：挂载 uni-ui"></a>第十一步：挂载 uni-ui</h4><ol><li><h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add @dcloudio/uni<span class="hljs-literal">-ui</span><br></code></pre></td></tr></table></figure></li><li><h5 id="项目根目录创建并配置-vue-config-js"><a href="#项目根目录创建并配置-vue-config-js" class="headerlink" title="项目根目录创建并配置 vue.config.js"></a>项目根目录创建并配置 <code>vue.config.js</code></h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// vue.config.js</span><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">transpileDependencies</span>: [<span class="hljs-string">&#x27;@dcloudio/uni-ui&#x27;</span>],<br>&#125;<br></code></pre></td></tr></table></figure></li><li><h5 id="easycom-配置-src-pages-json"><a href="#easycom-配置-src-pages-json" class="headerlink" title="easycom 配置 src/pages.json"></a>easycom 配置 <code>src/pages.json</code></h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;easycom&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;autoscan&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;custom&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-comment">// uni-ui 规则如下配置</span><br>      <span class="hljs-attr">&quot;^uni-(.*)&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;@dcloudio/uni-ui/lib/uni-$1/uni-$1.vue&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;pages&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><br>  ...<br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-info">提示</span></p><p>easycom规则例子：</p><p>组件文件夹参考此路径创建组件 <code>src/components/uni-nav-bar/uni-nav-bar.vue</code></p><p>页面则不需要  <code>component</code>  中导入</p><p>直接 <code>&lt;template&gt; </code>书写即可: <code>&lt;uni-nav-bar&gt;&lt;/uni-nav-bar&gt;</code></p></blockquote></li></ol><br><h4 id="第十二步：HBuildX-配置小程序渲染"><a href="#第十二步：HBuildX-配置小程序渲染" class="headerlink" title="第十二步：HBuildX 配置小程序渲染"></a>第十二步：HBuildX 配置小程序渲染</h4><ol><li><p><code>manifest.json</code> 点击后基础配置–&gt; uni-app 应用标识(AppID)：注册dcloud自动生成</p></li><li><p>基础配置–&gt;微信小程序配置–&gt;微信小程序AppID</p></li><li><p>工具–&gt;设置–&gt;运行配置–&gt;微信开发者工具路径，填入自己安装的路径</p></li><li><p>微信开发工具—设置–通用设置–安全–服务端口（最好去安装目录里启动后操作）</p></li></ol><blockquote><p><span class="label label-info">提示</span></p><ol><li>生成后项目根目录会创建 <code>.hbuilderx</code> 文件夹</li><li>如果要用手机直接预览，需要去把 <code>src/manifest.json</code> 中 <code>&quot;scope.userLocation&quot;: &#123; &quot;desc&quot;: &quot;&quot;&#125;</code> 注释哈，uni-app默认把地域调用打开了。但是初始项目未调用微信地域 api</li><li>如果是用 cli 命令启动项目，微信开发工具中需要导入最后打包成功的文件夹而不是整个源码文件，不然会报错 无法找到 <code>app.json</code>， 例如 <code>dist/dev/mp-weixin</code></li></ol></blockquote><br><h4 id="第十三步：配置多环境-api-接口"><a href="#第十三步：配置多环境-api-接口" class="headerlink" title="第十三步：配置多环境 api 接口"></a>第十三步：配置多环境 api 接口</h4><ol><li><p><code>src/config</code> 文件夹分别创建 <code>.env.dev.ts</code>、<code>.env.pre.ts</code>、<code>.env.pro.ts</code>、<code>.env.test.ts</code>、<code>env.ts</code></p><p><code>.env.x.ts</code> 内容就是不同环境将要访问的 api 地址</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-comment">// 也就是你不同的环境将要访问的不同的服务器</span><br>  <span class="hljs-attr">BASE_API</span>: <span class="hljs-string">&#x27;http://localhost:3300&#x27;</span>,<br>  <span class="hljs-attr">ENV</span>: <span class="hljs-string">&#x27;dev&#x27;</span>,<br>&#125;<br></code></pre></td></tr></table></figure><p><code>env.ts</code> </p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> dev <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./.env.dev&#x27;</span><br><span class="hljs-keyword">import</span> test <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./.env.test&#x27;</span><br><span class="hljs-keyword">import</span> pre <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./.env.pre&#x27;</span><br><span class="hljs-keyword">import</span> prod <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./.env.pro&#x27;</span><br><br><span class="hljs-comment">// import.meta.env 这是vite环境变量</span><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">NODE_ENV</span> = <span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">env</span>.<span class="hljs-property">MODE</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;NODE_ENV----&#x27;</span>, <span class="hljs-variable constant_">NODE_ENV</span>)<br><br><span class="hljs-keyword">let</span> <span class="hljs-attr">ENV_VAR</span>: &#123; <span class="hljs-attr">BASE_API</span>: <span class="hljs-built_in">string</span> &#125; = &#123; <span class="hljs-attr">BASE_API</span>: <span class="hljs-string">&#x27;dev&#x27;</span> &#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable constant_">NODE_ENV</span> === <span class="hljs-string">&#x27;dev&#x27;</span> || <span class="hljs-variable constant_">NODE_ENV</span> === <span class="hljs-string">&#x27;development&#x27;</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;开发---&#x27;</span>)<br>  <span class="hljs-variable constant_">ENV_VAR</span> = dev<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-variable constant_">NODE_ENV</span> === <span class="hljs-string">&#x27;test&#x27;</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;测试---&#x27;</span>)<br>  <span class="hljs-variable constant_">ENV_VAR</span> = test<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-variable constant_">NODE_ENV</span> === <span class="hljs-string">&#x27;pre&#x27;</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;预发布---&#x27;</span>)<br>  <span class="hljs-variable constant_">ENV_VAR</span> = pre<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-variable constant_">NODE_ENV</span> === <span class="hljs-string">&#x27;pro&#x27;</span> || <span class="hljs-variable constant_">NODE_ENV</span> === <span class="hljs-string">&#x27;production&#x27;</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;生产---&#x27;</span>)<br>  <span class="hljs-variable constant_">ENV_VAR</span> = prod<br>&#125;<br><span class="hljs-comment">// else if (NODE_ENV === &#x27;demo&#x27;) &#123;</span><br><span class="hljs-comment">//   ENV_VAR = demo</span><br><span class="hljs-comment">// &#125;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-variable constant_">ENV_VAR</span><br></code></pre></td></tr></table></figure></li><li><p><code>package.json</code> 中增加命令</p><p>这里增加即是为了让 <code>import.meta.env.MODE</code> 拿到对应的值</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>  ...<br>  <span class="hljs-attr">&quot;dev:weixin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p mp-weixin --mode dev&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;test:weixin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni -p mp-weixin --mode test&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;build:weixin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uni build -p mp-weixin --mode pro&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li><li><p>api 接口常量文件 <code>src/config/app.ts</code> 获取 <code>env.ts</code>  返回的不同环境 api 地址</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> <span class="hljs-variable constant_">ENV_CONFIG</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/config/env&#x27;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;不同环境不同地址---&#x27;</span>, <span class="hljs-variable constant_">ENV_CONFIG</span>)<br><span class="hljs-comment">// mock请求地址 &#x27;http://localhost:3300&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">HTTP_REQUEST_URL</span> = <span class="hljs-variable constant_">ENV_CONFIG</span>.<span class="hljs-property">BASE_API</span><br></code></pre></td></tr></table></figure></li><li><p>启动项目</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm dev:weixin<br></code></pre></td></tr></table></figure></li></ol><p>参考文章<sup id="fnref:8" class="footnote-ref"><a href="#fn:8" rel="footnote"><span class="hint--top hint--rounded" aria-label="使用命令行构建uni-app + vue3 + vite + vant并实现多环境打包">[8]</span></a></sup></p><br><h3 id="😫小波搭建uni-app微信小程序APP工程化项目遇见的一些问题"><a href="#😫小波搭建uni-app微信小程序APP工程化项目遇见的一些问题" class="headerlink" title="😫小波搭建uni-app微信小程序APP工程化项目遇见的一些问题"></a>😫小波搭建uni-app微信小程序APP工程化项目遇见的一些问题</h3><blockquote><p><span class="label label-danger">报错</span></p><p><code>vue cli3中eslint报错“no-undef“和eslint规则配置</code></p><p>解决方案：</p><p><code>.eslintrc.js</code> 中 <code>rules</code> 增加如下代码</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-attr">rules</span>: &#123;<br><span class="hljs-string">&#x27;no-undef&#x27;</span>: <span class="hljs-number">0</span>,<br>&#125;<br></code></pre></td></tr></table></figure></blockquote><blockquote><p><span class="label label-danger">报错</span></p><p><code>[@vue/compiler-sfc] type argument passed to defineProps() must be a literal type, or a reference to an interface or literal type.</code></p><p>原因及解决方案：因为组件中 <code>defineProps</code> 不支持外部导入的ts申明，只能写在组件页面中</p></blockquote><blockquote><p><span class="label label-danger">报错</span></p><p> <code>Type &#39;&#123;&#125;&#39; is not assignable to type &#39;(props: Readonly) =&gt; object&#39;. Type &#39;&#123;&#125;&#39; provides no match for the signature &#39;(props: Readonly): object&#39;.</code></p><p>当使用基于类型的声明时，我们失去了为 <code>props</code> 声明默认值的能力。这可以通过 <code>withDefaults</code> 编译器宏解决：</p><p>解决方案：</p><p>数组，对象需要用函数返回</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-attr">goods</span>: <span class="hljs-function">() =&gt;</span> [<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">6905</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-attr">sort</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">is_show_backstage</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">goods_list</span>: [],<br>  &#125;,<br>],<br><span class="hljs-attr">computedMenuCartNum</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>&#125;,<br></code></pre></td></tr></table></figure></blockquote><blockquote><p><span class="label label-danger">报错</span></p><p><code>Set &quot;volar.inlayHints.eventArgumentInInlineHandlers&quot;: false to hide Event Argument in Inline Handlers.</code></p><p>上面翻译过来就是：设置<code>“volar.inlayHints。eventArgumentInInlineHandlers&quot;: false </code>在内联处理程序中隐藏事件参数。</p><p>解决方案：</p><p>vscode 的 <code>setting.json</code> 中添加</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;editor.inlayHints.enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;off&quot;</span><br></code></pre></td></tr></table></figure></blockquote><blockquote><p><span class="label label-danger">报错</span></p><p><code>Component is not found in path &quot;pages/menu/hooks/useNav&quot; (using by &quot;pages/menu/index&quot;)</code></p><p>原因及解决方案：uniapp 如果在页面文件夹引入子 hooks 组件，则只能用 <code>menuHook/index.vue</code> 模式， 不然报错</p></blockquote><blockquote><p><span class="label label-danger">报错</span></p><p>JSON 中不允许有注释。</p><p>解决方案：右下角的 <code>json</code> 点一下，然后输入 <code>comment</code>，下拉选择 <code>json with comments</code> 就可以了</p></blockquote><blockquote><p><span class="label label-danger">报错</span></p><p>微信开发工具启用手机预览编译后报错小程序按需注入</p><p>解决方案：</p><p><code>manifest.json</code> 中增加以下代码</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;mp-weixin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-comment">// 小程序按需注入</span><br>  <span class="hljs-attr">&quot;lazyCodeLoading&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;requiredComponents&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></blockquote><br><h3 id="😚直接克隆项目后安装步骤"><a href="#😚直接克隆项目后安装步骤" class="headerlink" title="😚直接克隆项目后安装步骤"></a>😚直接克隆项目后安装步骤</h3><ol><li><code>pnpm install</code> 后， 用 HBuildX 启动（选择项目–&gt;运行–&gt;运行到小程序模拟器） 或者 <code>pnpm dev:mp-weixin</code></li><li>微信开发工具勾选  <strong>不校验合法域名、web-view（业务域名）、TLS 版本以及 HTTPS 证书</strong></li></ol><br><h3 id="😊来自小波的bilibili视频教程"><a href="#😊来自小波的bilibili视频教程" class="headerlink" title="😊来自小波的bilibili视频教程"></a>😊来自小波的bilibili视频教程</h3><ol><li>安装搭建项目如果遇到什么问题，请留言，小波会尽快回复。</li><li>小波主参考 Cobyte 大大写的文章<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="使用Vue3 + Vite + TS 创建uni-app项目工程化实践">[3]</span></a></sup>。万分感谢  ！</li></ol><br><h3 id="🙂小波用到的相关参考资料链接"><a href="#🙂小波用到的相关参考资料链接" class="headerlink" title="🙂小波用到的相关参考资料链接"></a>🙂小波用到的相关参考资料链接</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.pnpm.cn/" target="_blank" rel="noopener external nofollow noreferrer">pnpm官网</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://uniapp.dcloud.net.cn/quickstart-cli.html" target="_blank" rel="noopener external nofollow noreferrer">https://uniapp.dcloud.net.cn/quickstart-cli.html</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://juejin.cn/post/7046632389237293087" target="_blank" rel="noopener external nofollow noreferrer">使用Vue3 + Vite + TS 创建uni-app项目工程化实践</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://uniapp.dcloud.net.cn/quickstart-cli.html" target="_blank" rel="noopener external nofollow noreferrer">uni-app官网</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://cn.vuejs.org/guide/introduction.html" target="_blank" rel="noopener external nofollow noreferrer">vue官网</a><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span><a href="https://koa.bootcss.com/" target="_blank" rel="noopener external nofollow noreferrer">koa官网</a><a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span><a href="https://segmentfault.com/a/1190000038533257" target="_blank" rel="noopener external nofollow noreferrer">vue3 + vite + typescript + eslint + jest项目配置实践</a><a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:8" class="footnote-text"><span><a href="https://www.jianshu.com/p/d5b11d140574" target="_blank" rel="noopener external nofollow noreferrer">使用命令行构建uni-app + vue3 + vite + vant并实现多环境打包</a><a href="#fnref:8" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;br&gt;

&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;一方面是为了把 vue3+typescript+pinia+pnpm+vite+uni-app+uni-ui 玩</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="前端" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="https://blog.ganxb2.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="编程" scheme="https://blog.ganxb2.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="typescript" scheme="https://blog.ganxb2.com/tags/typescript/"/>
    
    <category term="vue3" scheme="https://blog.ganxb2.com/tags/vue3/"/>
    
    <category term="uniapp" scheme="https://blog.ganxb2.com/tags/uniapp/"/>
    
    <category term="vite" scheme="https://blog.ganxb2.com/tags/vite/"/>
    
    <category term="uni-ui" scheme="https://blog.ganxb2.com/tags/uni-ui/"/>
    
    <category term="pinia" scheme="https://blog.ganxb2.com/tags/pinia/"/>
    
    <category term="pnpm" scheme="https://blog.ganxb2.com/tags/pnpm/"/>
    
  </entry>
  
  <entry>
    <title>设计素材分享：app实体模型(mockup)psd免费下载</title>
    <link href="https://blog.ganxb2.com/13007.html"/>
    <id>https://blog.ganxb2.com/13007.html</id>
    <published>2023-03-31T15:46:23.000Z</published>
    <updated>2024-12-30T18:48:24.546Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p>前面小波给自己<a href="https://blog.ganxb2.com/48056.html"> taro3+vue3+typescript+nutui3+pinia 微信小程序</a>做实体模型 (mockup) 展示下载的 psd 素材，有需要的童鞋自己拿去吧。免费下载哈，觉得不错的话顺手帮小波关注一波廿壴博客微信公众号吧…万分感谢~</p><br><h3 id="😚app-实体模型-mockup-效果图展示"><a href="#😚app-实体模型-mockup-效果图展示" class="headerlink" title="😚app 实体模型 (mockup) 效果图展示"></a>😚app 实体模型 (mockup) 效果图展示</h3><p><img src="https://article.biliimg.com/bfs/article/51592ed7966f92db826496b22f790eb80f788892.jpg@1e_1c.webp" alt="廿壴博客微信小程序APP预览1"></p><p><img src="https://article.biliimg.com/bfs/article/e262bb02c27c49552f5450443cff3949404652bb.jpg@1e_1c.webp" alt="廿壴博客微信小程序APP预览2"></p><p><img src="https://article.biliimg.com/bfs/article/39624783e52e72b23846c4de90fe4e3edc33b9c3.jpg@1e_1c.webp" alt="廿壴博客微信小程序APP预览3"></p><br><h3 id="😊app-实体模型-mockup-素材下载"><a href="#😊app-实体模型-mockup-素材下载" class="headerlink" title="😊app 实体模型 (mockup) 素材下载"></a>😊app 实体模型 (mockup) 素材下载</h3><p>包含3个 psd 素材，1个 ai 矢量素材</p><p><strong><a href="https://pan.baidu.com/s/1VstZpEjuJB4dP2nXlR4cuQ?pwd=69p8 " target="_blank" rel="noopener external nofollow noreferrer" data-download="goDown">点我去廿壴博客的百度云下载</a></strong></p> <!--data-download="goDown"--><br>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;前面小波给自己&lt;a href=&quot;https://blog.ganxb2.com/48056.html&quot;&gt; taro3+vue</summary>
      
    
    
    
    <category term="设计" scheme="https://blog.ganxb2.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="设计素材" scheme="https://blog.ganxb2.com/tags/%E8%AE%BE%E8%AE%A1%E7%B4%A0%E6%9D%90/"/>
    
    <category term="实体模型mockup" scheme="https://blog.ganxb2.com/tags/%E5%AE%9E%E4%BD%93%E6%A8%A1%E5%9E%8Bmockup/"/>
    
    <category term="app" scheme="https://blog.ganxb2.com/tags/app/"/>
    
    <category term="psd" scheme="https://blog.ganxb2.com/tags/psd/"/>
    
  </entry>
  
  <entry>
    <title>typescript如何快速上手应用于vue项目的书写申明？</title>
    <link href="https://blog.ganxb2.com/11259.html"/>
    <id>https://blog.ganxb2.com/11259.html</id>
    <published>2023-03-21T18:00:40.000Z</published>
    <updated>2024-12-30T18:48:24.547Z</updated>
    
    <content type="html"><![CDATA[<br><h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p>typescript 如何快速上手应用于 vue 项目？vue 项目引入了 typescript 后应该如何书写申明？</p><p>小波基于自己写 <a href="https://blog.ganxb2.com/48056.html">taro3+vue3+tsx+pinia+pnpm 微信小程序</a> 的实际开发做个总结。</p><p>当然主要是快速上手，还有些进阶方面的小波也还在学习中。</p><p>typescript 虽然相对以前工作方式表面增加了一定工作量，但同时也解决了以前写法容易忽视的bug或是代码不严谨，不优雅，同时装了相关 vscode 插件还能自动推导类型，语法提示，类型信息的预校验，着实写完一次后还是感觉棒棒的。</p><br><h3 id="🧐typescript-申明的作用"><a href="#🧐typescript-申明的作用" class="headerlink" title="🧐typescript 申明的作用"></a>🧐typescript 申明的作用</h3><ul><li>用来为已存在的 JS 库提供类型信息。</li><li>声明文件可以让我们不需要将JS重构为TS，只需要加上声明文件就可以使用系统。</li><li>在 TS 项目中使用第三方库时，就像在用 TS 一样，都会有代码提示、类型保护等机制，极大的提高了开发效率，降低了心智负担。</li><li>类型声明在编译的时候都会被删除，不会影响真正的代码。</li></ul><h3 id="🧐typescript-必备-vscode-插件"><a href="#🧐typescript-必备-vscode-插件" class="headerlink" title="🧐typescript 必备 vscode 插件"></a>🧐typescript 必备 vscode 插件</h3><ul><li><strong>volar 全家桶</strong>那是必须的</li><li><strong>JSON to TS</strong>(快速把后端接口返回的json数据转成ts申明，当然有些地方可能还是需要自己二次稍稍修改)</li><li><strong>ESLint</strong></li></ul><br><h3 id="🤔typescript-如何引入项目"><a href="#🤔typescript-如何引入项目" class="headerlink" title="🤔typescript 如何引入项目"></a>🤔typescript 如何引入项目</h3><p>无论什么项目，首先安装 <code>typescript</code> 依赖</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">pnpm <span class="hljs-built_in">add</span> typescript -D<br></code></pre></td></tr></table></figure><p>如果是 vue, 安装 <code>vue-tsc</code> </p><p>对于单文件组件，你可以使用工具 <a href="https://github.com/vuejs/language-tools/tree/master/packages/vue-tsc" target="_blank" rel="noopener external nofollow noreferrer"><code>vue-tsc</code></a> 在命令行检查类型和生成类型声明文件。 参看 <a href="https://cn.vuejs.org/guide/typescript/overview.html#project-setup" target="_blank" rel="noopener external nofollow noreferrer">vue3 官网文档</a></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">pnpm <span class="hljs-built_in">add</span> vue-tsc -D<br></code></pre></td></tr></table></figure><p>如果是 node 服务端</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">pnpm add ts-<span class="hljs-keyword">node</span> <span class="hljs-title">-D</span><br></code></pre></td></tr></table></figure><br><h3 id="🤔typescript-配置文件-tsconfig-json"><a href="#🤔typescript-配置文件-tsconfig-json" class="headerlink" title="🤔typescript 配置文件 tsconfig.json"></a>🤔typescript 配置文件 tsconfig.json</h3><p>以小波写的 taro3+vue3+tsx 微信小程序项目为例</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs typescript">&#123;<br>  <span class="hljs-string">&quot;compilerOptions&quot;</span>: &#123;<br>    <span class="hljs-comment">// target 指的是 TypeScript transpile 出来想要生成什么 version 的 ECMAScript</span><br>    <span class="hljs-string">&quot;target&quot;</span>: <span class="hljs-string">&quot;es2017&quot;</span>,<br>    <span class="hljs-comment">// 如果是 for Node.js 那么 module 的值是 &quot;CommonJS&quot; 或者 &quot;ES2020&quot;.</span><br>    <span class="hljs-string">&quot;module&quot;</span>: <span class="hljs-string">&quot;commonjs&quot;</span>,<br>    <span class="hljs-comment">// 把 .ts 里面的注释 comment 在 transpile 过程中移除. .js file 里面就看不到任何 comment 了</span><br>    <span class="hljs-string">&quot;removeComments&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-comment">// 常量枚举 preserveConstEnums 选项 (简单讲就是ts相关申明最后编译都不会到生产的js文件，这里单独对枚举做处理)</span><br>    <span class="hljs-string">&quot;preserveConstEnums&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-comment">// 有 2 个值, &quot;Classic&quot; 和 &quot;Node&quot;. 默认是 Classic, 但凡你有用 node_modules 就设置成 Node 就对了.</span><br>    <span class="hljs-string">&quot;moduleResolution&quot;</span>: <span class="hljs-string">&quot;node&quot;</span>,<br>    <span class="hljs-comment">// 想做到类似 C# 那种 Data Annotation Validation, 反射, 就需要借助 TypeScript 的 Decorators 功能. ***</span><br>    <span class="hljs-string">&quot;experimentalDecorators&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-comment">// “noImplicitAny”不允许使用隐式any类型，默认为false</span><br>    <span class="hljs-string">&quot;noImplicitAny&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-comment">// 和 module &amp; moduleResolution 配合使用的</span><br>    <span class="hljs-string">&quot;allowSyntheticDefaultImports&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-comment">// 指 transpile 后的 .js 要 output 到哪里. 默认情况下是 output 到 .ts 的 sibling. 实际项目里没发现，不太理解？</span><br>    <span class="hljs-string">&quot;outDir&quot;</span>: <span class="hljs-string">&quot;lib&quot;</span>,<br>    <span class="hljs-comment">// 检测Typescript中未使用的变量</span><br>    <span class="hljs-string">&quot;noUnusedLocals&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-comment">// 检测Typescript中未使用的变量 和 noUnusedLocals 配合使用</span><br>    <span class="hljs-string">&quot;noUnusedParameters&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-comment">// strictNullChecks 标志使处理 null 和 undefined 更加明确，让我们不必担心是否忘记处理 null 和 undefined。</span><br>    <span class="hljs-string">&quot;strictNullChecks&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-comment">// transpile 的 JavaScript 阅读非常不友好, runtime debug 就会很困难. 开启 sourceMap compiler 就会创建一个 .map 的 file</span><br>    <span class="hljs-string">&quot;sourceMap&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-comment">// 设置baseUrl来告诉编译器到哪里去查找模块。</span><br>    <span class="hljs-string">&quot;baseUrl&quot;</span>: <span class="hljs-string">&quot;./&quot;</span>,<br>    <span class="hljs-comment">// 可以告诉编译器生成这个虚拟目录的roots</span><br>    <span class="hljs-string">&quot;rootDir&quot;</span>: <span class="hljs-string">&quot;.&quot;</span>,<br>    <span class="hljs-comment">// TypeScript具有三种JSX模式：preserve(后续可被babel处理)，react和react-native(相当于preserve)</span><br>    <span class="hljs-string">&quot;jsx&quot;</span>: <span class="hljs-string">&quot;preserve&quot;</span>,<br>    <span class="hljs-comment">// 如果想 import js 文件那么需要在 tsconfig 设置 allowJs</span><br>    <span class="hljs-string">&quot;allowJs&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-comment">// 导入json</span><br>    <span class="hljs-string">&quot;resolveJsonModule&quot;</span>: <span class="hljs-literal">true</span>,<br>   <span class="hljs-comment">// 我们需要让 TypeScript compiler 知道第三方包手动加的 .d.ts 这个 folder, 所以需要添加上这个配置项</span><br>    <span class="hljs-string">&quot;typeRoots&quot;</span>: <br>      <span class="hljs-string">&quot;node_modules/@types&quot;</span><br>    ],<br>    <span class="hljs-comment">// types 做用是进一步 filter, 配合 typeRoots 使用，这里值只有vue3才被纳入</span><br>    <span class="hljs-string">&quot;types&quot;</span>: [<span class="hljs-string">&quot;@tarojs/components/vue3&quot;</span>],<br><span class="hljs-comment">// config/index.js中别名 alias</span><br><span class="hljs-string">&quot;paths&quot;</span>: &#123;<br><span class="hljs-comment">// &quot;@/*&quot;: [&quot;src/*&quot;],</span><br><span class="hljs-string">&quot;@/components/*&quot;</span>: [<span class="hljs-string">&quot;./src/components/*&quot;</span>],<br>      <span class="hljs-string">&quot;@/utils/*&quot;</span>: [<span class="hljs-string">&quot;./src/utils/*&quot;</span>],<br><span class="hljs-comment">// &quot;Utils/*&quot;: [&quot;./src/utils/*&quot;]</span><br>&#125;<br>  &#125;,<br>  <span class="hljs-comment">// ts扫描的范围</span><br>  <span class="hljs-string">&quot;include&quot;</span>: [<span class="hljs-string">&quot;./src&quot;</span>, <span class="hljs-string">&quot;./types&quot;</span>],<br>  <span class="hljs-comment">// compileOnSave 是声明是否需要在保存时候自动触发 tsc 编译的字段 </span><br>  <span class="hljs-string">&quot;compileOnSave&quot;</span>: <span class="hljs-literal">false</span>,<br>&#125;<br><br></code></pre></td></tr></table></figure><p><code>allowSyntheticDefaultImports</code> 生动解释参考 TypeScript Tips (1) - allowSyntheticDefaultImports<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://zhuanlan.zhihu.com/p/29022311">[4]</span></a></sup></p><blockquote><p><span class="label label-info">提示</span></p><p>通常装好 typescript 后，项目根目录还有个<code>types</code>文件夹，里面的 <code>global.d.ts</code>表示全局的申明。</p><p>不需要通过<code>export</code>导出和<code>Import</code>导入，这是typescript的默认规则</p><p>如果要自己页面私有使用的申明，则自己在页面文件夹建个<code>x.d.ts</code>，同时需要使用<code>export</code>导出和<code>Import</code>导入配合使用</p><p>当然在业务逻辑页面<code>x.ts</code>或者<code>x.tsx</code>里写申明也是可以的，但是小波建议还是<strong>单独写在专用申明文件</strong>里吧。</p></blockquote><br><h3 id="😚typescript-申明vue项目实例书写规则"><a href="#😚typescript-申明vue项目实例书写规则" class="headerlink" title="😚typescript 申明vue项目实例书写规则"></a>😚typescript 申明vue项目实例书写规则</h3><h4 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">isDone</span>: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">false</span>;<br></code></pre></td></tr></table></figure><h4 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">decLiteral</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">6</span>;<br></code></pre></td></tr></table></figure><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span> = <span class="hljs-string">&quot;bob&quot;</span>;<br></code></pre></td></tr></table></figure><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>用<code>[]</code>表示数组，则类型放在前面</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">list</span>: <span class="hljs-built_in">number</span>[] = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>];<br></code></pre></td></tr></table></figure><p>用 <code>Array</code>表示数组，则类型用断言放在后面</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">list</span>: <span class="hljs-title class_">Array</span>&lt;<span class="hljs-built_in">number</span>&gt; = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>];<br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-info">提示</span></p><p><code>&lt;&gt;</code>类型断言有两种形式。 其一是“尖括号”语法：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">someValue</span>: <span class="hljs-built_in">any</span> = <span class="hljs-string">&quot;this is a string&quot;</span>;<br><span class="hljs-keyword">let</span> <span class="hljs-attr">strLength</span>: <span class="hljs-built_in">number</span> = (&lt;<span class="hljs-built_in">string</span>&gt;someValue).<span class="hljs-property">length</span>;<br></code></pre></td></tr></table></figure><p><code>as</code>语法</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> list = [] <span class="hljs-keyword">as</span> <span class="hljs-built_in">string</span>[]<br></code></pre></td></tr></table></figure><p>两种形式是等价的。 至于使用哪个大多数情况下是凭个人喜好；然而，当你在TypeScript里使用JSX时，只有 <code>as</code>语法断言是被允许的。</p></blockquote><h4 id="元组-tuple"><a href="#元组-tuple" class="headerlink" title="元组 tuple"></a>元组 tuple</h4><p>算是数组的扩展吧，相当于 const 常量一样，定死了数组位置和值</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">x</span>: [<span class="hljs-built_in">string</span>, <span class="hljs-built_in">number</span>] = [ <span class="hljs-string">&#x27;111&#x27;</span>, <span class="hljs-number">111</span>, <span class="hljs-number">222</span>]<br><span class="hljs-comment">//不能将类型“[string, number, number]”分配给类型“[string, number]”。源具有 3 个元素，但目标仅允许 2 个。ts(2322)</span><br></code></pre></td></tr></table></figure><h4 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h4><p><code>enum</code>类型是对 JavaScript 标准数据类型的一个补充。 像 C# 等其它语言一样，使用枚举类型可以为一组数值赋予友好的名字。</p><p>默认：从0开始递增</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Color</span> &#123;<span class="hljs-title class_">Red</span>, <span class="hljs-title class_">Green</span>, <span class="hljs-title class_">Blue</span>&#125;<br><span class="hljs-keyword">let</span> <span class="hljs-attr">c</span>: <span class="hljs-title class_">Color</span> = <span class="hljs-title class_">Color</span>.<span class="hljs-property">Green</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(c)<br><span class="hljs-comment">// 1</span><br></code></pre></td></tr></table></figure><p>也可以自己指定初始值</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-variable">enum</span> <span class="hljs-variable">Color</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-built_in">Red</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">,</span> <span class="hljs-built_in">Green</span><span class="hljs-operator">,</span> <span class="hljs-built_in">Blue</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-variable">let</span> <span class="hljs-variable">c</span><span class="hljs-operator">:</span> <span class="hljs-variable">Color</span> <span class="hljs-operator">=</span> <span class="hljs-variable">Color</span><span class="hljs-operator">.</span><span class="hljs-built_in">Green</span><br><span class="hljs-variable">console</span><span class="hljs-operator">.</span><span class="hljs-variable">log</span><span class="hljs-punctuation">(</span><span class="hljs-variable">c</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">//</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>场景1：字符串枚举，后端可能返回的json名称不标准或者不统一，可以通过枚举进行重新规范</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">enum</span> jsonType &#123;<br>  userName = <span class="hljs-string">&#x27;name&#x27;</span>, <br>  userId = <span class="hljs-string">&#x27;id&#x27;</span>, <br>  userNick = <span class="hljs-string">&#x27;nick&#x27;</span><br>&#125;<br><span class="hljs-comment">// 假定一个拿到的返回值</span><br><span class="hljs-keyword">const</span> c = <span class="hljs-string">&#x27;nick&#x27;</span> <span class="hljs-keyword">as</span> jsonType;<br><span class="hljs-comment">// 这里则可以使用ts枚举申明来进行判断</span><br><span class="hljs-keyword">if</span>(c === jsonType.<span class="hljs-property">userNick</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">333</span>, c)<br>&#125;<br><span class="hljs-comment">// 333 &quot;nick&quot;</span><br></code></pre></td></tr></table></figure><h4 id="any"><a href="#any" class="headerlink" title="any"></a>any</h4><p>有时候，我们会想要为那些在编程阶段还不清楚类型的变量指定一个类型。 这些值可能来自于动态的内容，比如来自用户输入或第三方代码库。 这种情况下，我们不希望类型检查器对这些值进行检查而是直接让它们通过编译阶段的检查。 那么我们可以使用 <code>any</code>类型来标记这些变量：</p><p>小波个人项目中使用，通常是第三方库方法返回无法更好完成ts申明的情况可以先用<code>any</code>来解决报错，后续代码完成后ts会根据上下文推导成正确的申明再去除<code>any</code></p><p>例如 vue3 的<code>inject</code>获取全局变量时</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 获取系统相关信息</span><br><span class="hljs-keyword">const</span> <span class="hljs-attr">customGlobalData</span>: <span class="hljs-built_in">any</span> = <span class="hljs-title function_">inject</span>(<span class="hljs-string">&#x27;$customGlobalData&#x27;</span>)<br></code></pre></td></tr></table></figure><h4 id="void"><a href="#void" class="headerlink" title="void"></a>void</h4><p>某种程度上来说，<code>void</code>类型像是与<code>any</code>类型相反，它表示没有任何类型。 </p><p>当一个函数没有返回值时，你通常会见到其返回值类型是 <code>void</code>：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> handleLike = (<span class="hljs-attr">item</span>: commentType): <span class="hljs-function"><span class="hljs-params">void</span> =&gt;</span> &#123;&#125;<br></code></pre></td></tr></table></figure><h4 id="null-和-undefined"><a href="#null-和-undefined" class="headerlink" title="null 和 undefined"></a>null 和 undefined</h4><p>TypeScript里，<code>undefined</code>和<code>null</code>两者各自有自己的类型分别叫做<code>undefined</code>和<code>null</code>。</p><p> 和 <code>void</code>相似，它们的本身的类型用处不是很大：</p><p>小波个人总结就是尽量少用这个吧，原来 js 因为这个属性写判断已经很恶心了。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// Not much else we can assign to these variables!</span><br><span class="hljs-keyword">let</span> <span class="hljs-attr">u</span>: <span class="hljs-literal">undefined</span> = <span class="hljs-literal">undefined</span>;<br><span class="hljs-keyword">let</span> <span class="hljs-attr">n</span>: <span class="hljs-literal">null</span> = <span class="hljs-literal">null</span>;<br></code></pre></td></tr></table></figure><h4 id="never"><a href="#never" class="headerlink" title="never"></a>never</h4><p><code>never</code>类型表示的是那些永不存在的值的类型。 </p><p>例如， <code>never</code>类型是那些总是会抛出异常或根本就不会有返回值的函数表达式或箭头函数表达式的返回值类型；</p><p> 变量也可能是 <code>never</code>类型，当它们被永不为真的类型保护所约束时。</p><p><strong>Typescript报错 类型“any”的参数不能赋给类型“never”的参数</strong>，更多时候小波遇见的场景，通常就是定义了变量却未申明，后续又对变量操作则容易出现这样的提示</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> tempArray = []<br>array.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;<br>tempArray.<span class="hljs-title function_">push</span>(item)<br>&#125;);<br></code></pre></td></tr></table></figure><h4 id="object"><a href="#object" class="headerlink" title="object"></a>object</h4><p><code>object</code>表示非原始类型，也就是除<code>number</code>，<code>string</code>，<code>boolean</code>，<code>symbol</code>，<code>null</code>或<code>undefined</code>之外的类型。</p><p>例如小波在使用 nutui 组件的 <code>nut-tabbar</code> 时。组件返回的 <code>item</code> ，因为是组件固定返回所以项目中也未使用 <code>interface</code> 定义接口，那就直接用 <code>object</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">nut-tabbar</span></span><br><span class="hljs-tag"><span class="hljs-attr">onTabSwitch</span>=<span class="hljs-string">&#123;handleTabSwitch&#125;</span></span><br><span class="hljs-tag">&gt;</span><br>  ...<br><span class="hljs-tag">&lt;/<span class="hljs-name">nut-tabbar</span>&gt;</span>  <br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> handleTabSwitch = (item?: <span class="hljs-built_in">object</span>, index?: <span class="hljs-built_in">string</span>): <span class="hljs-function"><span class="hljs-params">void</span> =&gt;</span> &#123;<br>  ...<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="接口-interface"><a href="#接口-interface" class="headerlink" title="接口 interface"></a>接口 interface</h4><p>通常使用在后端返回接口的值做申明</p><p>简单场景：函数的参数这样不需要公共使用则直接书写对象</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> eventChannel = current.<span class="hljs-title function_">getOpenerEventChannel</span>()<br><span class="hljs-comment">// 接收 A页面的 events 中的 pushDateToComment 传递的数据</span><br>eventChannel.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;pushDateToComment&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">res: &#123; commentTotal: <span class="hljs-built_in">number</span> &#125;</span>) =&gt;</span> &#123;<br>  state.<span class="hljs-property">commentTotal</span> = res.<span class="hljs-property">commentTotal</span><br>&#125;)<br></code></pre></td></tr></table></figure><p>公共场景：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Shape</span> &#123;<br><span class="hljs-attr">color</span>: <span class="hljs-built_in">string</span>;<br>&#125;<br><span class="hljs-keyword">interface</span> listObjType <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Shape</span> &#123;<br>  list?: <span class="hljs-title class_">Array</span>&lt;listType&gt;<br>  <span class="hljs-attr">total</span>: <span class="hljs-built_in">string</span><br><span class="hljs-keyword">readonly</span> <span class="hljs-attr">listCount</span>: <span class="hljs-built_in">number</span><br>  <span class="hljs-attr">getSuccess</span>: <span class="hljs-built_in">boolean</span><br>&#125;<br><span class="hljs-keyword">interface</span> listType &#123;<br>  <span class="hljs-attr">img</span>: <span class="hljs-built_in">string</span><br>  <span class="hljs-attr">title</span>: <span class="hljs-built_in">string</span><br>  <span class="hljs-attr">description</span>: <span class="hljs-built_in">string</span><br>  <span class="hljs-attr">like</span>: <span class="hljs-built_in">number</span><br>  <span class="hljs-attr">avatar</span>: <span class="hljs-built_in">string</span><br>  <span class="hljs-attr">author</span>: <span class="hljs-built_in">string</span><br>  <span class="hljs-attr">visite</span>: <span class="hljs-built_in">number</span><br>  <span class="hljs-attr">category</span>: <span class="hljs-built_in">string</span><br>  <span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span><br><span class="hljs-attr">createdAt</span>: <span class="hljs-built_in">string</span><br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-info">提示</span></p><p><code>extends</code>表示<strong>继承</strong>，当然也可以继承多个</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Shape</span> &#123;<br><span class="hljs-attr">color</span>: <span class="hljs-built_in">string</span>;<br>&#125;<br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">PenStroke</span> &#123;<br><span class="hljs-attr">penWidth</span>: <span class="hljs-built_in">number</span>;<br>&#125;<br><span class="hljs-keyword">interface</span> listObjType <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Shape</span>, <span class="hljs-title class_">PenStroke</span> &#123;<br>  <span class="hljs-attr">total</span>: <span class="hljs-built_in">string</span><br><span class="hljs-attr">listCount</span>: <span class="hljs-built_in">number</span><br>  <span class="hljs-attr">getSuccess</span>: <span class="hljs-built_in">boolean</span><br>&#125;<br></code></pre></td></tr></table></figure><p><code>?</code> 表示 <strong>可选属性</strong>，也就是绑定申明的对象，即使没有<code>list</code>这个值也不会报错</p><p><code>readonly</code> 表示 <strong>只读</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 只要进行了1次绑定值，则后续都无法修改</span><br><span class="hljs-keyword">const</span> <span class="hljs-attr">tempJson</span>: listObjType  = &#123;<br>...<br>  <span class="hljs-attr">listCount</span>: <span class="hljs-number">1</span><br>&#125;<br>tempJson.<span class="hljs-property">listCount</span> = <span class="hljs-number">10</span><br><span class="hljs-comment">// 报错：无法为“listCount”赋值，因为它是只读属性。ts(2540)</span><br></code></pre></td></tr></table></figure></blockquote><h5 id="函数类型，可索引的类型，类类型，混合类型"><a href="#函数类型，可索引的类型，类类型，混合类型" class="headerlink" title="函数类型，可索引的类型，类类型，混合类型"></a>函数类型，可索引的类型，类类型，混合类型</h5><p>这几个进阶类别可以自己查阅下官方文档<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="typescript 中文文档">[3]</span></a></sup>，像函数类型我自己觉得没必要还用<code>Interface</code>来写，这不是完全给自己增加难度系数么，明明直接用<code>type</code>就行</p><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><p>场景1：直接申明</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> handleClickSmile = (<span class="hljs-attr">item</span>: &#123; <span class="hljs-attr">icon</span>: <span class="hljs-built_in">string</span>; text?: <span class="hljs-built_in">string</span> &#125;): <span class="hljs-function"><span class="hljs-params">void</span> =&gt;</span> &#123;<br>  state.<span class="hljs-property">textareaVal</span> += item.<span class="hljs-property">icon</span><br>&#125;<br></code></pre></td></tr></table></figure><p>场景2：外部引用</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// x.d.ts文件</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> handleSearchType = <span class="hljs-function">(<span class="hljs-params">quickSearchValue: <span class="hljs-built_in">string</span></span>) =&gt;</span> <span class="hljs-built_in">void</span><br><br><span class="hljs-comment">// x.ts文件 业务代码</span><br><span class="hljs-keyword">import</span> &#123; handleSearchType &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../types/index&#x27;</span><br><span class="hljs-keyword">const</span> <span class="hljs-attr">handleSearch</span>: handleSearchType = <span class="hljs-function"><span class="hljs-params">quickSearchValue</span> =&gt;</span> &#123;<br>...<br>&#125;<br></code></pre></td></tr></table></figure><p>当然参数同样都是支持 <code>？</code> <code>|</code> <strong>可选参数和默认参数</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> handleClickSmile = (<span class="hljs-attr">item</span>: &#123; <span class="hljs-attr">icon</span>: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">number</span> = <span class="hljs-number">1</span>; text?: <span class="hljs-built_in">string</span> &#125;): <span class="hljs-function"><span class="hljs-params">void</span> =&gt;</span> &#123;<br>  state.<span class="hljs-property">textareaVal</span> += item.<span class="hljs-property">icon</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="this和箭头函数"><a href="#this和箭头函数" class="headerlink" title="this和箭头函数"></a><code>this</code>和箭头函数</h4><p>简单讲，非箭头函数中的this值取决于这个函数是怎样被调用的，大概理解会是向上级查询</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 默认场景</span><br><span class="hljs-keyword">const</span> circle = &#123;<br>  <span class="hljs-attr">radius</span>: <span class="hljs-number">10</span>,<br>  <span class="hljs-title function_">getRadius</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">11111111</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span>)<br>  &#125;<br>&#125;<br>circle.<span class="hljs-title function_">getRadius</span>() <span class="hljs-comment">// 打印 10</span><br><span class="hljs-comment">// 使用临时变量self</span><br><span class="hljs-keyword">const</span> circle2 = &#123;<br>  <span class="hljs-attr">radius</span>: <span class="hljs-number">10</span>,<br>  <span class="hljs-title function_">outerDiameter</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> self = <span class="hljs-variable language_">this</span><br>    <span class="hljs-keyword">const</span> innerDiameter = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">22222</span>, self.<span class="hljs-property">radius</span>)<br>    &#125;<br>    <span class="hljs-title function_">innerDiameter</span>()<br>  &#125;<br>&#125;<br>circle2.<span class="hljs-title function_">outerDiameter</span>() <span class="hljs-comment">// 打印 10</span><br><br><span class="hljs-comment">// 直接使用 this 的问题</span><br><span class="hljs-keyword">const</span> circle3 = &#123;<br>  <span class="hljs-attr">radius</span>: <span class="hljs-number">10</span>,<br>  <span class="hljs-title function_">outerDiameter</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> innerDiameter = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">333</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span>);<br>    &#125;;<br>    <span class="hljs-title function_">innerDiameter</span>();<br>  &#125;<br>&#125;;<br><span class="hljs-comment">// circle3.outerDiameter(); // 打印NaN  直接报错 Cannot read property &#x27;radius&#x27; of undefined</span><br><br><span class="hljs-comment">// 使用.bind(this)</span><br><span class="hljs-keyword">const</span> circle4 = &#123;<br>  <span class="hljs-attr">radius</span>: <span class="hljs-number">10</span>,<br>  <span class="hljs-title function_">outerDiameter</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> innerDiameter = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">444</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span>);<br>    &#125;;<br>    innerDiameter = innerDiameter.<span class="hljs-title function_">bind</span>(<span class="hljs-variable language_">this</span>);<br>    <span class="hljs-title function_">innerDiameter</span>();<br>  &#125;<br>&#125;;<br>circle4.<span class="hljs-title function_">outerDiameter</span>(); <span class="hljs-comment">// 打印 10</span><br><span class="hljs-comment">// 使用箭头函数</span><br><span class="hljs-keyword">const</span> circle5 = &#123;<br>  <span class="hljs-attr">radius</span>: <span class="hljs-number">10</span>,<br>  <span class="hljs-title function_">outerDiameter</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> <span class="hljs-title function_">innerDiameter</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">555</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span>);<br>    &#125;;<br>    <span class="hljs-title function_">innerDiameter</span>();<br>  &#125;<br>&#125;;<br>circle5.<span class="hljs-title function_">outerDiameter</span>(); <span class="hljs-comment">// 打印 10</span><br></code></pre></td></tr></table></figure><p><code>.bind()</code> 更多说明参考 JS【详解】函数 <code>.bind()</code><sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://blog.csdn.net/weixin_41192489/article/details/124127582">[6]</span></a></sup></p><h4 id="declare"><a href="#declare" class="headerlink" title="declare"></a>declare</h4><ol><li><p>以<code>declare</code>声明的变量和模块后，其他地方不需要引入，就可以直接使用了，和<code>export</code>一起使用放在同一个 x.d.ts 则需要导出</p></li><li><p>同时也是区分 js 和 ts 的标识</p></li><li><p><code>interface</code>和<code>type</code>不需要使用<code>declare</code></p></li><li><p><code>declare</code> 的申明变量通常用在申明文件中做判断，例如 <code>typeof</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">declare</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">ANIMATION</span> = <span class="hljs-string">&quot;animation&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">declare</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">TransitionProps</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BaseTransitionProps</span>&lt;<span class="hljs-title class_">Element</span>&gt; &#123;<br><span class="hljs-keyword">type</span>?: <span class="hljs-keyword">typeof</span> <span class="hljs-variable constant_">TRANSITION</span> | <span class="hljs-keyword">typeof</span> <span class="hljs-variable constant_">ANIMATION</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h4 id="type"><a href="#type" class="headerlink" title="type"></a>type</h4><p>type作用就是给类型起一个新名字，支持基本类型、联合类型、元祖及其它任何你需要的手写类型,常用于<strong>联合类型</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">//基本类型</span><br><span class="hljs-keyword">type</span> test = <span class="hljs-built_in">number</span>; <br><span class="hljs-keyword">let</span> <span class="hljs-attr">num</span>: test = <span class="hljs-number">10</span>;<br><span class="hljs-comment">// 对象</span><br><span class="hljs-keyword">type</span> userOjb = &#123;<span class="hljs-attr">name</span>:<span class="hljs-built_in">string</span>&#125; <br><span class="hljs-comment">// 函数</span><br><span class="hljs-keyword">type</span> getName = <span class="hljs-function">()=&gt;</span><span class="hljs-built_in">string</span>  <br><span class="hljs-comment">// 元组</span><br><span class="hljs-keyword">type</span> data = [<span class="hljs-built_in">number</span>,<span class="hljs-built_in">string</span>] <br><span class="hljs-comment">// 联合类型</span><br><span class="hljs-keyword">type</span> numOrFun = <span class="hljs-title class_">Second</span> | getName  <br></code></pre></td></tr></table></figure><h5 id="type和interface的区别"><a href="#type和interface的区别" class="headerlink" title="type和interface的区别"></a>type和interface的区别</h5><ol><li><p>和接口一样，用来描述对象或函数的类型(小波个人还是建议用interface)</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">type</span> <span class="hljs-keyword">User</span> <span class="hljs-title">= &#123;</span><br><span class="hljs-title">  name</span>: <span class="hljs-keyword">string</span><br>  age: <span class="hljs-keyword">number</span><br>&#125;;<br><span class="hljs-keyword">type</span> SetUser = (name: <span class="hljs-keyword">string</span>, age: <span class="hljs-keyword">number</span>)=&gt;void;<br></code></pre></td></tr></table></figure></li><li><p>接口的继承 <code>extends</code> <code>type</code>可以通过交叉实现，当然<code>interface</code>也能同时 <code>extends</code> <code>type</code>的申明，<code>type</code>也能交叉<code>interface</code>的申明</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// type 交叉 interface</span><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Name1</span> &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br>&#125;<br><span class="hljs-keyword">type</span> <span class="hljs-title class_">User</span> = <span class="hljs-title class_">Name1</span> &amp; &#123;<br>  <span class="hljs-attr">age</span>: <span class="hljs-built_in">number</span>;<br>&#125;<br><br><span class="hljs-comment">// type 交叉 == interface 的 extends</span><br><span class="hljs-keyword">type</span> <span class="hljs-title class_">Name2</span> = &#123;<br><span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br>&#125;<br><span class="hljs-keyword">type</span> <span class="hljs-title class_">User</span> = <span class="hljs-title class_">Name2</span> &amp; &#123;<span class="hljs-attr">age</span>: <span class="hljs-built_in">number</span>&#125;<br><br><span class="hljs-comment">// interface extends type</span><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">User</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Name2</span> &#123;<br>  <span class="hljs-attr">age</span>: <span class="hljs-built_in">number</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ol><h5 id="映射类型"><a href="#映射类型" class="headerlink" title="映射类型"></a>映射类型</h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Keys</span> = <span class="hljs-string">&quot;name&quot;</span> | <span class="hljs-string">&quot;sex&quot;</span><br><span class="hljs-keyword">type</span> <span class="hljs-title class_">DuKey</span> = &#123;<br>  [<span class="hljs-title class_">Key</span> <span class="hljs-keyword">in</span> <span class="hljs-title class_">Keys</span>]: <span class="hljs-built_in">string</span> <span class="hljs-comment">//类似 for ... in</span><br>&#125;<br><span class="hljs-keyword">let</span> <span class="hljs-attr">stu</span>: <span class="hljs-title class_">Dukey</span> = &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;wang&#x27;</span>，<br>  <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;man&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><br><p><strong>重载，剩余参数，泛型，命名空间，声明合并等</strong>请自己查看下官方文档<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="typescript 中文文档">[3]</span></a></sup>或问问度娘，小波晚点再更新，也还在学习中…</p><br><h3 id="🙂小波用到的相关参考资料链接"><a href="#🙂小波用到的相关参考资料链接" class="headerlink" title="🙂小波用到的相关参考资料链接"></a>🙂小波用到的相关参考资料链接</h3><br><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.cnblogs.com/keatkeat/p/16204926.html" target="_blank" rel="noopener external nofollow noreferrer">typescript - tsconfig</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/z591102/article/details/120010235" target="_blank" rel="noopener external nofollow noreferrer">typescript 枚举介绍</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://www.tslang.cn/docs/handbook/basic-types.html" target="_blank" rel="noopener external nofollow noreferrer">typescript 中文文档</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://zhuanlan.zhihu.com/p/29022311" target="_blank" rel="noopener external nofollow noreferrer">https://zhuanlan.zhihu.com/p/29022311</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://www.typescriptlang.org/tsconfig" target="_blank" rel="noopener external nofollow noreferrer">typescript 官方的tsconfig文档</a><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span><a href="https://blog.csdn.net/weixin_41192489/article/details/124127582" target="_blank" rel="noopener external nofollow noreferrer">https://blog.csdn.net/weixin_41192489/article/details/124127582</a><a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span><a href="https://www.jianshu.com/p/fdd867125af5" target="_blank" rel="noopener external nofollow noreferrer">ts 中的type关键字</a><a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;br&gt;

&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;typescript 如何快速上手应用于 vue 项目？vue 项目引入了 typescript 后应该如何书写</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="前端" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="https://blog.ganxb2.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="编程" scheme="https://blog.ganxb2.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="typescript" scheme="https://blog.ganxb2.com/tags/typescript/"/>
    
    <category term="vue3" scheme="https://blog.ganxb2.com/tags/vue3/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序APP博客免费开源：taro3+vue3+typescript+nutui3+pnpm+pinia+leancloud</title>
    <link href="https://blog.ganxb2.com/48056.html"/>
    <id>https://blog.ganxb2.com/48056.html</id>
    <published>2023-03-17T17:56:48.000Z</published>
    <updated>2024-12-30T18:48:24.549Z</updated>
    
    <content type="html"><![CDATA[<br><h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p>小波原计划是想把<a href="https://blog.ganxb2.com/">廿壴博客</a>做到全平台的覆盖，即PC端响应式 <a href="https://blog.ganxb2.com/23535.html">hexo+github+vercel+leancloud</a>，taro3+vue3+leancloud 微信小程序APP，微信公众号h5。</p><p>奈何微信小程序个人是无法成功审核通过，那就干脆开源分享出来，有需要的童鞋请自便吧。</p><p>暂时因为个人时间原因，todo 的功能会放置晚些时间开发，小波个人测试未发现的 bug 也请能自己搞定尽量自己搞定吧，后续有时间了才能做进一步修复升级，感谢理解。</p><br><h3 id="😍廿壴博客微信小程序APP-taro3-vue3-tsx-成品效果"><a href="#😍廿壴博客微信小程序APP-taro3-vue3-tsx-成品效果" class="headerlink" title="😍廿壴博客微信小程序APP(taro3+vue3+tsx)成品效果"></a>😍廿壴博客微信小程序APP(taro3+vue3+tsx)成品效果</h3><p><img src="https://article.biliimg.com/bfs/article/51592ed7966f92db826496b22f790eb80f788892.jpg@1e_1c.webp" alt="廿壴博客微信小程序APP预览1"></p><p><img src="https://article.biliimg.com/bfs/article/e262bb02c27c49552f5450443cff3949404652bb.jpg@1e_1c.webp" alt="廿壴博客微信小程序APP预览2"></p><p><img src="https://article.biliimg.com/bfs/article/39624783e52e72b23846c4de90fe4e3edc33b9c3.jpg@1e_1c.webp" alt="廿壴博客微信小程序APP预览3"></p><p><a href="https://github.com/gumpBOBO/wx_app/tree/master" target="_blank" rel="noopener external nofollow noreferrer">github仓库传送门</a></p><p><a href="https://gitee.com/ganxb2/wx_app" target="_blank" rel="noopener external nofollow noreferrer">gitee仓库传送门</a></p><p><strong>廿壴博客微信小程序APP在线体验版，需要体验的童鞋可以联系小波</strong></p><p><strong>– 因为微信小程序需要加一下体验成员才能直接扫码在线访问</strong></p><img src="https://article.biliimg.com/bfs/article/b45cc97e6da8a2b036acd0e05f541716e2695ab0.jpg@1e_1c.webp" alt="廿壴博客微信小程序APP体验版" style="zoom:50%;" /><br><h3 id="🙂总纲"><a href="#🙂总纲" class="headerlink" title="🙂总纲"></a>🙂总纲</h3><ul><li>微信小程序篇</li><li>taro篇</li><li>leancloud篇</li><li><a href="https://blog.ganxb2.com/11259.html">typescript篇</a></li><li>nutui3篇</li><li>pinia篇</li><li>pnpm篇</li><li>tsx&#x2F;jsx篇</li><li>webpack篇</li></ul><br><h3 id="😦目标功能"><a href="#😦目标功能" class="headerlink" title="😦目标功能"></a>😦目标功能</h3><p><img src="https://article.biliimg.com/bfs/article/2c55ba1629e2c3cfe5b226cbafdd6e50d77f2391.jpg@1e_1c.webp" alt="廿壴博客微信小程序APP流程交互"></p><p><img src="https://article.biliimg.com/bfs/article/fb961ed74c10415d77aba67f30a97447f816aa4e.jpg@1e_1c.webp" alt="廿壴博客微信小程序APP部署包结构"></p><h4 id="done"><a href="#done" class="headerlink" title="done:"></a>done:</h4><ol><li>集成 vue3、typescript、pinia，使用 tsx 语法开发</li><li>pnpm 软件包管理</li><li>多成员代码检查和格式优化</li><li>pinia 全局状态管理</li><li>小程序分包配置</li><li>ios样式兼容，多行文本样式封装</li><li>小程序自定义顶部导航</li><li>用户关注粉丝</li><li>用户注册登录</li><li>用户文章评论</li><li>用户评论回复</li><li>用户评论等级</li><li>用户消息提示</li><li>我的页面用户照片墙更换</li><li>文章点赞，收藏，访问统计</li><li>页面：发现，首页，我的，友链，联系，商务合作，查看授权，个人隐私，用户信息</li></ol><h4 id="todo"><a href="#todo" class="headerlink" title="todo:"></a>todo:</h4><ul><li>改成更友好的的配置方式初始项目</li><li>用户的浏览历史</li><li>用户投稿</li><li>文章打赏</li><li>用户信息更改</li></ul><br><h3 id="🧐主要技术栈"><a href="#🧐主要技术栈" class="headerlink" title="🧐主要技术栈"></a>🧐主要技术栈</h3><p>一方面是为了把廿壴博客做全平台覆盖，另一方面则是为了把 vue3+tsx+pinia+pnpm 玩一玩。</p><ul><li>taro3</li><li>vue3</li><li>typescript(tsx)</li><li>nutui3</li><li>pinia</li><li>pnpm</li><li>leancloud</li><li>webpack5</li></ul><br><h3 id="🤔搭建微信小程序APP博客架构步骤"><a href="#🤔搭建微信小程序APP博客架构步骤" class="headerlink" title="🤔搭建微信小程序APP博客架构步骤"></a>🤔搭建微信小程序APP博客架构步骤</h3><h4 id="第一步：安装-vscode-插件和微信开发工具"><a href="#第一步：安装-vscode-插件和微信开发工具" class="headerlink" title="第一步：安装 vscode 插件和微信开发工具"></a>第一步：安装 vscode 插件和微信开发工具</h4><ol><li><p><strong>vscode 插件</strong></p><ul><li><p><strong>eslint</strong></p></li><li><p><strong>prettier</strong></p></li><li><p><strong>volar</strong>(ts版本也可一并安装)</p></li><li><p><strong>sass</strong></p></li></ul><p>以上的插件可以在 <strong>vue volar extension pack</strong> 中直接全装</p></li><li><p><strong><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noopener external nofollow noreferrer">微信开发工具</a></strong></p></li></ol><p><img src="https://res.wx.qq.com/wxdoc/dist/assets/img/addproject.87088c43.png" alt="微信开发工具"></p><p>小程序帐号<a href="https://mp.weixin.qq.com/wxopen/waregister?action=step1" target="_blank" rel="noopener external nofollow noreferrer">注册</a>，获取的 AppID 并导入本地的项目</p><br><h4 id="第二步：安装-pnpm-和-taro3-cli-脚手架"><a href="#第二步：安装-pnpm-和-taro3-cli-脚手架" class="headerlink" title="第二步：安装 pnpm 和 taro3-cli 脚手架"></a>第二步：安装 pnpm 和 taro3-cli 脚手架</h4><ol><li><p><strong>安装 pnpm</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">// 全局安装<br>npm install pnpm <span class="hljs-literal">-g</span> <br>// 切换淘宝源<br>pnpm config <span class="hljs-built_in">set</span> registry https://registry.npmmirror.com/<br>// 查看源<br>pnpm config get registry<br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-info">提示</span></p><p>pnpm 跟 npm 和 yarn 的差距就是把原来每个项目安装 modules 放到统一的文件夹中，通过<strong>符号链接</strong>(软连接)和<strong>硬链接</strong>，注意<strong>项目要和统一放的 modules 同盘</strong>，不然就等于丢失了 pnpm 的优势。</p></blockquote></li><li><p><strong>安装 taro3-cli 脚手架(参考官网文档<sup id="fnref:14" class="footnote-ref"><a href="#fn:14" rel="footnote"><span class="hint--top hint--rounded" aria-label="taro3官方文档">[14]</span></a></sup>)</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">// 全局安装<br>pnpm add <span class="hljs-literal">-g</span> @tarojs/<span class="hljs-built_in">cli</span><br>// 查看<br>npm info @tarojs/<span class="hljs-built_in">cli</span><br>// 如果安装过程出现sass相关的安装错误<br>pnpm add <span class="hljs-literal">-g</span> mirror<span class="hljs-literal">-config-china</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/a09d0ed383020cbdf279cb944f77356826202ace.jpg@1e_1c.webp" alt="taro3-cli "></p></li></ol><br><h4 id="第三步：初始项目"><a href="#第三步：初始项目" class="headerlink" title="第三步：初始项目"></a>第三步：初始项目</h4><ol><li><p><strong>切到 pnpm 设置存包的同盘符执行初始命令</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">cd</span> x:/<br>taro init myApp<br><br>请输入项目介绍 廿壴<br>? 请选择框架 Vue3<br>? 是否需要使用 TypeScript ？ Yes<br>? 请选择 CSS 预处理器（Sass/Less/Stylus） Stylus<br>? 请选择编译工具 Webpack5<br>? 请选择包管理工具 pnpm<br>? 请选择模板源 Gitee（最快）<br>✔ 拉取远程模板仓库成功！<br>? 请选择模板 vue3<span class="hljs-literal">-pinia</span>（Vue3 + Pinia 模板（https://pinia.esm.dev/））<br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-warning">注意</span></p><ol><li>css 预处理最好选择 sass，因为 nutui3 或者其他移动端组件库都是用的这个来写的样式，也因为这个问题导致小波后面为了解决 sass 问题重新安装 node-sass 和 python2</li><li>模版可以选择 vue3-nutui ，未测试不知道是否选择这个模版就可以预处理 sass 安装报错的相关问题</li></ol></blockquote><p>初始的 <code>package.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;myApp&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1.0.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;private&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;廿壴&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;templateInfo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vue3-pinia&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;typescript&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;css&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;stylus&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;build:weapp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;taro build --type weapp&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:swan&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;taro build --type swan&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:alipay&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;taro build --type alipay&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:tt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;taro build --type tt&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:h5&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;taro build --type h5&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:rn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;taro build --type rn&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:qq&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;taro build --type qq&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build:quickapp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;taro build --type quickapp&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:weapp&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;set NODE_ENV=production &amp;&amp; npm run build:weapp -- --watch&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:swan&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;npm run build:swan -- --watch&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:alipay&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;npm run build:alipay -- --watch&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:tt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;npm run build:tt -- --watch&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:h5&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;npm run build:h5 -- --watch&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:rn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;npm run build:rn -- --watch&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:qq&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;npm run build:qq -- --watch&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;dev:quickapp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;npm run build:quickapp -- --watch&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;browserslist&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-string">&quot;last 3 versions&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;Android &gt;= 4.1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;ios &gt;= 8&quot;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;author&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;license&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;MIT&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;dependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@babel/runtime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^7.7.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/components&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/helper&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/plugin-platform-weapp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/plugin-platform-alipay&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/plugin-platform-tt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/plugin-platform-swan&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/plugin-platform-jd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/plugin-platform-qq&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/router&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/runtime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/shared&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/taro&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/taro-h5&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/plugin-framework-vue3&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;vue&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.2.24&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;pinia&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.0.10&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;devDependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@babel/core&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^7.8.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/cli&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@tarojs/webpack5-runner&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@types/webpack-env&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.13.6&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@typescript-eslint/eslint-plugin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^5.20.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@typescript-eslint/parser&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^5.20.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@vue/babel-plugin-jsx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.0.6&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@vue/compiler-sfc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;babel-preset-taro&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;css-loader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.4.2&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;eslint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^8.12.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;eslint-config-taro&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.5.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;eslint-plugin-vue&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^8.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;style-loader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1.3.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;stylelint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;9.3.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;typescript&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^4.1.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;vue-loader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^17.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;webpack&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;5.69.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong>和小波已经搭建好的项目 <code>package.json</code> 差异的引入包</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;dependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-comment">// nutui</span><br><span class="hljs-attr">&quot;@nutui/nutui-taro&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// nutui相关文件引入插件</span><br>  <span class="hljs-attr">&quot;@tarojs/plugin-html&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^3.5.12&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;devDependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-comment">// sass插件</span><br>  <span class="hljs-attr">&quot;@tarojs/plugin-sass&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^2.2.10&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// esline for prettier</span><br>  <span class="hljs-attr">&quot;@vue/eslint-config-prettier&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^7.0.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// esline for typescript</span><br>  <span class="hljs-attr">&quot;@vue/eslint-config-typescript&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^11.0.2&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 编译过程中将 import 语句自动转换为按需引入的方式</span><br>  <span class="hljs-attr">&quot;babel-plugin-import&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.13.6&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 压缩资源,生成.gz文件</span><br>  <span class="hljs-attr">&quot;compression-webpack-plugin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^10.0.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// esline for prettier</span><br>  <span class="hljs-attr">&quot;eslint-plugin-prettier&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^4.2.1&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// git提交钩子代码校验</span><br>  <span class="hljs-attr">&quot;husky&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^8.0.2&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 京东凹凸实验室打造的类 React 前端框架</span><br>  <span class="hljs-attr">&quot;nervjs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.5.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 挂载sass插件</span><br>  <span class="hljs-attr">&quot;node-sass&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^8.0.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 代码格式美化插件</span><br>  <span class="hljs-attr">&quot;prettier&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&gt;=2.0.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// vue for typescript校验</span><br>  <span class="hljs-attr">&quot;vue-tsc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.0.9&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// webpack分包插件</span><br>  <span class="hljs-attr">&quot;webpack-bundle-analyzer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^4.7.0&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>   初始的文件树</p>   <img src="https://article.biliimg.com/bfs/article/60fdb0bf8086cd65034f9d154e1ea70fe3e885e8.jpg@1e_1c.webp" alt="taro3脚手架初始的文件树"  /><p><strong>和小波已经搭建好的项目文件树的差异</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs powershell">taro<span class="hljs-literal">-vue3</span>                       <br>├─ config                                           <br>│  ├─ dev.js                  开发时配置          <br>│  ├─ index.js                默认配置       <br>│  └─ prod.js                 打包时配置           <br>├─ src   <br>│  ├─ assets  静态资源<br>│  ├─ components              组件文件夹  <br>│  │  └─ Counter.vue   <br>│  ├─ libs                库文件夹<br>│  ├─ pages                   页面<br>│  │  └─ index  <br>│  │     ├─ libs              分包使用的插件库文件<br>│  │     ├─ types             分包使用的ts申明<br>│  │     ├─ section             <br>│  │     │  └─ useBanner.tsx  页面模块(业务逻辑跟着模块走)  <br>│  │     ├─ data.ts           分包使用的数据常量<br>│  │     ├─ index.config.ts   页面配置(小程序默认)<br>│  │     ├─ index.styl        页面样式(小程序默认)<br>│  │     └─ index.vue         页面主页(小程序默认)<br>│  │     └─ useindex.tsx      tsx入口<br>│  ├─ stores                  pinia状态管理文件夹<br>│  │  └─ counter.ts <br>│  ├─ utils                   <br>│  │  └─ createApp.ts  入口配置<br>│  │  └─ deta.ts  全局常量<br>│  │  └─ nutPlguin.ts  nutui组件导入<br>│  │  └─ utils.ts  公共工具类方法<br>│  ├─ app.config.ts           小程序进行全局配置<br>│  ├─ app.styl                小程序全局样式<br>│  ├─ app.ts                  入口页面js<br>│  └─ index.html              入口页面html<br>├─ types                      <br>│  └─ global.d.ts             ts全局申明<br>├─ .editorconfig              多人协作维护一致的编码风格(初始时生成，其配置可覆盖vscode本地配置)<br>├─ .eslintrc                  taro初始默认esline配置文件<br>├─ .eslintrc.js               小波增加的esline配置文件    <br>├─ .gitignore                 git忽略配置<br>├─ .npmrc                     npm镜像地址<br>├─ .prettierrc                prettier代码格式美化配置<br>├─ babel.config.js            babel配置<br>├─ LICENSE                    <br>├─ package.json               项目配置，依赖<br>├─ pnpm<span class="hljs-literal">-lock</span>.yaml             pnpm配置<br>├─ project.config.json        微信小程序项目配置 project.config.json<br>├─ project.private.config.json对应上面project.config.json的私有配置<br>├─ project.tt.json            字节跳动小程序项目配置 project.tt.json<br>├─ README.en.md                 <br>├─ README.md    <br>├─ .husky                     git自动检测<br>└─ tsconfig.json              TypeScript 配置<br><br></code></pre></td></tr></table></figure></li><li><p><strong>启动命令</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm dev:weapp<br></code></pre></td></tr></table></figure></li></ol><br><h4 id="第四步：设置代码规范"><a href="#第四步：设置代码规范" class="headerlink" title="第四步：设置代码规范"></a>第四步：设置代码规范</h4><p>标准三件套</p><ul><li>代码规范 ESlint</li><li>代码格式化 Prettier</li><li>提交前检查 husky</li></ul><ol><li><p><strong>安装依赖(批量操作)</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add @vue/eslint<span class="hljs-literal">-config-prettier</span> @vue/eslint<span class="hljs-literal">-config-typescript</span> eslint<span class="hljs-literal">-plugin-prettier</span> vue<span class="hljs-literal">-tsc</span> husky <span class="hljs-literal">-D</span><br></code></pre></td></tr></table></figure></li><li><p><strong>设置代码规范和格式化规则</strong></p><p>创建 <code>.eslintrc.js</code> 并贴入以下代码</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">root</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">env</span>: &#123;<br>    <span class="hljs-attr">node</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&#x27;vue/setup-compiler-macros&#x27;</span>: <span class="hljs-literal">true</span><br>  &#125;,<br>  <span class="hljs-attr">parser</span>: <span class="hljs-string">&#x27;vue-eslint-parser&#x27;</span>,<br>  <span class="hljs-attr">extends</span>: [<br>    <span class="hljs-string">&#x27;plugin:vue/base&#x27;</span>,<br>    <span class="hljs-string">&#x27;plugin:vue/vue3-essential&#x27;</span>,<br>    <span class="hljs-string">&#x27;eslint:recommended&#x27;</span>,<br>    <span class="hljs-string">&#x27;@vue/prettier&#x27;</span>,<br>    <span class="hljs-string">&#x27;@vue/typescript&#x27;</span><br>  ],<br>  <span class="hljs-attr">parserOptions</span>: &#123;<br>    <span class="hljs-attr">parser</span>: <span class="hljs-string">&#x27;@typescript-eslint/parser&#x27;</span><br>  &#125;,<br>  <span class="hljs-attr">rules</span>: &#123;<br><span class="hljs-string">&#x27;endOfLine&#x27;</span>: <span class="hljs-string">&#x27;auto&#x27;</span>,<br>    <span class="hljs-string">&#x27;prettier/prettier&#x27;</span>: [<br>      <span class="hljs-string">&#x27;error&#x27;</span>,<br>      &#123;<br>        <span class="hljs-attr">singleQuote</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">semi</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">trailingComma</span>: <span class="hljs-string">&#x27;none&#x27;</span>,<br>        <span class="hljs-attr">arrowParens</span>: <span class="hljs-string">&#x27;avoid&#x27;</span>,<br>        <span class="hljs-attr">printWidth</span>: <span class="hljs-number">100</span><br>      &#125;<br>    ],<br>    <span class="hljs-string">&#x27;no-console&#x27;</span>: process.<span class="hljs-property">env</span>.<span class="hljs-property">NODE_ENV</span> === <span class="hljs-string">&#x27;production&#x27;</span> ? <span class="hljs-string">&#x27;warn&#x27;</span> : <span class="hljs-string">&#x27;off&#x27;</span>,<br>    <span class="hljs-string">&#x27;no-debugger&#x27;</span>: process.<span class="hljs-property">env</span>.<span class="hljs-property">NODE_ENV</span> === <span class="hljs-string">&#x27;production&#x27;</span> ? <span class="hljs-string">&#x27;warn&#x27;</span> : <span class="hljs-string">&#x27;off&#x27;</span>,<br>    <span class="hljs-comment">//在rules中添加自定义规则</span><br>    <span class="hljs-comment">//关闭组件命名规则</span><br>    <span class="hljs-string">&#x27;vue/multi-word-component-names&#x27;</span>: <span class="hljs-string">&#x27;off&#x27;</span><br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>创建 <code>.prettierrc</code> 并贴入以下代码</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-comment">// 缩进2</span><br>  <span class="hljs-attr">&quot;tabWidth&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 使用单引号</span><br>  <span class="hljs-attr">&quot;singleQuote&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 末尾添加分号</span><br>  <span class="hljs-attr">&quot;semi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 在对象或数组最后一个元素后面是否添加逗号</span><br>  <span class="hljs-attr">&quot;trailingComma&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;none&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 箭头函数参数只有一个时是否要有小括号 avoid: 省略括号</span><br>  <span class="hljs-attr">&quot;arrowParens&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;avoid&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 结尾是 \n \r \n\r auto</span><br>  <span class="hljs-attr">&quot;endOfLine&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;auto&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 超过最大值换行</span><br>  <span class="hljs-attr">&quot;printWidth&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">100</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>在 <code>package.json</code> 中 script 添加 Ts 检查命令和 Eslint 检查命令</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;tsc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vue-tsc --noEmit --skipLibCheck&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;lint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;eslint --ext .vue --ext .js --ext .ts src/&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>添加 <a href="https://github.com/typicode/husky" target="_blank" rel="noopener external nofollow noreferrer">husky</a> 触发 Git 钩子，代码提交前检查</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm husky install<br></code></pre></td></tr></table></figure><p>编辑 <code>pre-commit</code> 执行 Eslint 检查和 Ts 检查</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#!/bin/sh</span><br>. <span class="hljs-string">&quot;<span class="hljs-variable">$</span>(dirname &quot;</span><span class="hljs-variable">$0</span><span class="hljs-string">&quot;)/_/husky.sh&quot;</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;---eslint start---&quot;</span><br>npm run lint<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;---eslint end---&quot;</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;---ts lint start---&quot;</span><br>npm run tsc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;---ts lint end---&quot;</span><br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-info">提示</span></p><p>小波只引入了插件包，并未亲自测试，有需要的童鞋自己参考文档添加，或者参考 <a href="https://github.com/typicode/husky" target="_blank" rel="noopener external nofollow noreferrer">husky</a> 官方仓库文档，晚些时间小波会更新版本加上</p></blockquote></li><li><p><strong>代码书写规范，请参考taro官方文档</strong><sup id="fnref:14" class="footnote-ref"><a href="#fn:14" rel="footnote"><span class="hint--top hint--rounded" aria-label="taro3官方文档">[14]</span></a></sup></p><ol><li>组件名遵从<strong>小程序规范</strong>（全小写，kebab-case）。</li><li>组件属性遵从<strong>小程序规范</strong>（全小写，kebab-case）。</li><li>Boolean 值的组件属性需要显式绑定为 true，不支持简写。</li><li>事件和 Web 端一样。在事件回调函数中，第一个参数是事件对象，回调中调用 stopPropagation 可以阻止冒泡。</li><li>使用 @ 修饰符（或 v-on:，更多用法可以参考<a href="https://cn.vuejs.org/v2/guide/events.html" target="_blank" rel="noopener external nofollow noreferrer">Vue文档</a>）替代小程序事件名中的 bind(替代支付宝小程序事件名中的 on)。</li><li>Vue 中点击事件使用 @tap。</li><li>事件名称一般遵循组件属性规范（全部小写）。</li><li>在 <a href="mailto:&#x76;&#x75;&#101;&#x40;&#x33;&#46;&#48;&#46;&#x36;">&#x76;&#x75;&#101;&#x40;&#x33;&#46;&#48;&#46;&#x36;</a> 或之后版本使用 JSX 时，事件名遵循 <strong>onCamelcase</strong> 规范，例如 onGetphonenumber。具体原因可参考 <a href="https://github.com/NervJS/taro/issues/8796#issuecomment-802796286" target="_blank" rel="noopener external nofollow noreferrer">#8796</a>。</li></ol></li><li><p><strong>其它限制</strong></p><ul><li>由于小程序访问元素位置为异步 API，因此小程序中无法使用内置的 transition-group 组件。</li><li>小程序中不支持 <code>&lt;style scoped&gt;</code>，建议使用 <code>cssModules</code> 代替。<a href="https://github.com/NervJS/taro/issues/6662" target="_blank" rel="noopener external nofollow noreferrer">#6662</a></li><li>所有组件的 id 必须在整个应用中保持唯一（即使他们在不同的页面），否则可能导致事件不触发的问题，<a href="https://github.com/NervJS/taro/issues/7317" target="_blank" rel="noopener external nofollow noreferrer">#7317</a></li></ul></li><li><p><strong>tsx 代码格式风格</strong></p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> vue<br><span class="hljs-keyword">import</span> hook<br><span class="hljs-keyword">import</span> data/css/types<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">useIndex</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-comment">// 全局变量&amp;公共常量</span><br>  <span class="hljs-comment">// 获取系统相关信息</span><br>  <span class="hljs-keyword">const</span> customGlobalData = inject&lt;<span class="hljs-title class_">CustomGlobalDataType</span>&gt;(<span class="hljs-string">&#x27;$customGlobalData&#x27;</span>)<br>  <br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 定义页面变量</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@object</span> state 页面双向对象集合</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-attr">state</span>: <span class="hljs-keyword">type</span> = <span class="hljs-title function_">reactive</span>(&#123;&#125;)<br>  <br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 定义方法</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">const</span> handleFun = (): <span class="hljs-function"><span class="hljs-params">void</span> =&gt;</span> &#123;&#125;<br>  <br>  <br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 引入子模块并给hook传值</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@topplaceholderHook</span> 头部占位符高度 = topbarHook</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-attr">topplaceholderHook</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-variable constant_">JSX</span>.<span class="hljs-property">Element</span> = <span class="hljs-title function_">useTopPlaceholder</span>(customGlobalData)<br>  <br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 调用</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-title function_">handleFun</span>()<br>  <br>  <span class="hljs-keyword">return</span> <span class="hljs-function">() =&gt;</span> (<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br>  )<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ol><br><h4 id="第五步：引入-nutui-移动端组件库"><a href="#第五步：引入-nutui-移动端组件库" class="headerlink" title="第五步：引入 nutui 移动端组件库"></a>第五步：引入 nutui 移动端组件库</h4><p>由于小波 taro 初始配置时模版并未选择 vue3-NutUI ，所以需要自己单独命令安装，也可参考 nutui 官方文档<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="nutui3文档">[2]</span></a></sup></p><ol><li><p><strong>安装 nutui</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add @nutui/nutui<span class="hljs-literal">-taro</span><br></code></pre></td></tr></table></figure></li><li><p><strong>安装 taro 插件 @tarojs&#x2F;plugin-html</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add @tarojs/plugin<span class="hljs-literal">-html</span><br></code></pre></td></tr></table></figure><p>配置 nutui 375 尺寸  <code>config/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js">config = &#123;<br>  <span class="hljs-comment">// ...</span><br>  <span class="hljs-attr">plugins</span>: [<span class="hljs-string">&#x27;@tarojs/plugin-html&#x27;</span>]<br>  <span class="hljs-comment">// 给 sass-loader 传递选项 ！！！！ 按需加载方式必须配置</span><br>  <span class="hljs-attr">sass</span>: &#123;<br>    <span class="hljs-comment">// data: `@import &quot;@nutui/nutui-taro/dist/styles/variables.scss&quot;;`</span><br>    <span class="hljs-attr">data</span>: <span class="hljs-string">`@import &quot;@nutui/nutui-taro/dist/styles/variables-jdt.scss&quot;;`</span><br>  &#125;,<br>  <span class="hljs-comment">// ...</span><br>  <span class="hljs-attr">designWidth</span>: <span class="hljs-number">375</span>,<br>  <span class="hljs-attr">deviceRatio</span>: &#123;<br>    <span class="hljs-number">640</span>: <span class="hljs-number">2.34</span> / <span class="hljs-number">2</span>,<br>    <span class="hljs-number">750</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-number">828</span>: <span class="hljs-number">1.81</span> / <span class="hljs-number">2</span>,<br>    <span class="hljs-number">375</span>: <span class="hljs-number">2</span> / <span class="hljs-number">1</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>添加按需加载插件</strong></p><p><a href="https://github.com/ant-design/babel-plugin-import" target="_blank" rel="noopener external nofollow noreferrer">babel-plugin-import</a> 是一款 babel 插件，它会在编译过程中将 import 语句自动转换为按需引入的方式。</p><p>安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add babel<span class="hljs-literal">-plugin-import</span> <span class="hljs-literal">--save-dev</span><br></code></pre></td></tr></table></figure><p>配置  <code>.babelrc</code> 或 <code>babel.config.js</code> 中添加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>  <span class="hljs-comment">// ...</span><br>  <span class="hljs-attr">plugins</span>: [<br>    [<br>      <span class="hljs-string">&#x27;import&#x27;</span>,<br>      &#123;<br>        <span class="hljs-attr">libraryName</span>: <span class="hljs-string">&#x27;@nutui/nutui-taro&#x27;</span>,<br>        <span class="hljs-attr">libraryDirectory</span>: <span class="hljs-string">&#x27;dist/packages/_es&#x27;</span>,<br>        <span class="hljs-comment">// customName自定义兼容国际化使用</span><br>        <span class="hljs-comment">// customName: (name, file) =&gt; &#123;</span><br>        <span class="hljs-attr">customName</span>: <span class="hljs-function"><span class="hljs-params">name</span> =&gt;</span> &#123;<br>          <span class="hljs-keyword">if</span> (name == <span class="hljs-string">&#x27;Locale&#x27;</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;@nutui/nutui-taro/dist/packages/locale/lang&#x27;</span><br>          &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">`@nutui/nutui-taro/dist/packages/_es/<span class="hljs-subst">$&#123;name&#125;</span>`</span><br>          &#125;<br>        &#125;,<br>        <span class="hljs-comment">// style: (name, file) =&gt; name.toLowerCase().replace(&#x27;_es/&#x27;, &#x27;&#x27;) + &#x27;/index.scss&#x27;,</span><br>        <span class="hljs-attr">style</span>: <span class="hljs-function"><span class="hljs-params">name</span> =&gt;</span> name.<span class="hljs-title function_">toLowerCase</span>().<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;_es/&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>) + <span class="hljs-string">&#x27;/index.scss&#x27;</span>,<br>        <span class="hljs-attr">camel2DashComponentName</span>: <span class="hljs-literal">false</span><br>      &#125;,<br>      <span class="hljs-string">&#x27;nutui3-taro&#x27;</span><br>    ]<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>入口配置中导入组件</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123;<br>  <span class="hljs-title class_">Button</span>,<br>  <span class="hljs-title class_">Cell</span>,<br>  <span class="hljs-title class_">CellGroup</span>,<br>  <span class="hljs-title class_">Icon</span>,<br>  <span class="hljs-title class_">Tag</span>,<br>  <span class="hljs-title class_">Tabbar</span>,<br>  <span class="hljs-title class_">TabbarItem</span>,<br>  <span class="hljs-title class_">SearchBar</span>,<br>  <span class="hljs-title class_">Tabs</span>,<br>  <span class="hljs-title class_">TabPane</span>,<br>  <span class="hljs-title class_">Avatar</span>,<br>  <span class="hljs-title class_">AvatarGroup</span>,<br>  <span class="hljs-title class_">Empty</span>,<br>  <span class="hljs-title class_">Skeleton</span>,<br>  <span class="hljs-title class_">Navbar</span>,<br>  <span class="hljs-title class_">Popup</span>,<br>  <span class="hljs-title class_">OverLay</span>,<br>  <span class="hljs-title class_">Grid</span>,<br>  <span class="hljs-title class_">GridItem</span>,<br>  <span class="hljs-title class_">Swiper</span>,<br>  <span class="hljs-title class_">SwiperItem</span>,<br>  <span class="hljs-title class_">TextArea</span>,<br>  <span class="hljs-comment">// List,</span><br>  <span class="hljs-title class_">Notify</span>,<br>  <span class="hljs-title class_">NoticeBar</span>,<br>  <span class="hljs-comment">// Input</span><br>  <span class="hljs-comment">// Animate </span><br>  <span class="hljs-comment">// Badge,</span><br>  <span class="hljs-comment">// 因为项目初始选择了stylus导致sass的变量报错无法使用nutui的布局组件</span><br>  <span class="hljs-comment">// Layout,</span><br>  <span class="hljs-comment">// Row,</span><br>  <span class="hljs-comment">// Col</span><br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@nutui/nutui-taro&#x27;</span><br><br><span class="hljs-title class_">App</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Button</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Cell</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CellGroup</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Icon</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tag</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tabbar</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">TabbarItem</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SearchBar</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tabs</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">TabPane</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Avatar</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">AvatarGroup</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Empty</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Skeleton</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Navbar</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Popup</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">OverLay</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Grid</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">GridItem</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Swiper</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SwiperItem</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">TextArea</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">NoticeBar</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Notify</span>)<br></code></pre></td></tr></table></figure></li></ol><br><h4 id="第六步：分包"><a href="#第六步：分包" class="headerlink" title="第六步：分包"></a>第六步：分包</h4><ol><li><p><strong>小程序分包配置</strong></p><p><code>app.config.ts</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs typescript"> <span class="hljs-comment">// 页面路径列表 String Array</span><br> <span class="hljs-attr">pages</span>: [<span class="hljs-string">&#x27;pages/index/index&#x27;</span>],<br> <span class="hljs-comment">// 分包</span><br> <span class="hljs-attr">subpackages</span>: [<br>   &#123;<br>     <span class="hljs-attr">root</span>: <span class="hljs-string">&#x27;pages/user&#x27;</span>,<br>     <span class="hljs-attr">pages</span>: [<span class="hljs-string">&#x27;index&#x27;</span>]<br>   &#125;,<br>   &#123;<br>     <span class="hljs-attr">root</span>: <span class="hljs-string">&#x27;pages/post&#x27;</span>,<br>     <span class="hljs-attr">pages</span>: [<span class="hljs-string">&#x27;index&#x27;</span>]<br>   &#125;,<br>   &#123;<br>     <span class="hljs-attr">root</span>: <span class="hljs-string">&#x27;pages/comment&#x27;</span>,<br>     <span class="hljs-attr">pages</span>: [<span class="hljs-string">&#x27;index&#x27;</span>]<br>   &#125;,<br>   &#123;<br>     <span class="hljs-attr">root</span>: <span class="hljs-string">&#x27;pages/userInfo&#x27;</span>,<br>     <span class="hljs-attr">pages</span>: [<span class="hljs-string">&#x27;index&#x27;</span>]<br>   &#125;,<br>   &#123;<br>     <span class="hljs-attr">root</span>: <span class="hljs-string">&#x27;pages/userNotice&#x27;</span>,<br>     <span class="hljs-attr">pages</span>: [<span class="hljs-string">&#x27;index&#x27;</span>]<br>   &#125;,<br>   &#123;<br>     <span class="hljs-attr">root</span>: <span class="hljs-string">&#x27;pages/userCollect&#x27;</span>,<br>     <span class="hljs-attr">pages</span>: [<span class="hljs-string">&#x27;index&#x27;</span>]<br>   &#125;,<br>   &#123;<br>     <span class="hljs-attr">root</span>: <span class="hljs-string">&#x27;pages/find&#x27;</span>,<br>     <span class="hljs-attr">pages</span>: [<span class="hljs-string">&#x27;index&#x27;</span>]<br>   &#125;,<br>   &#123;<br>     <span class="hljs-attr">root</span>: <span class="hljs-string">&#x27;pages/feedback&#x27;</span>,<br>     <span class="hljs-attr">pages</span>: [<span class="hljs-string">&#x27;index&#x27;</span>]<br>   &#125;,<br>   &#123;<br>     <span class="hljs-attr">root</span>: <span class="hljs-string">&#x27;pages/contact&#x27;</span>,<br>     <span class="hljs-attr">pages</span>: [<span class="hljs-string">&#x27;index&#x27;</span>]<br>   &#125;,<br>   &#123;<br>     <span class="hljs-attr">root</span>: <span class="hljs-string">&#x27;pages/business&#x27;</span>,<br>     <span class="hljs-attr">pages</span>: [<span class="hljs-string">&#x27;index&#x27;</span>]<br>   &#125;,<br>   &#123;<br>     <span class="hljs-attr">root</span>: <span class="hljs-string">&#x27;pages/todo&#x27;</span>,<br>     <span class="hljs-attr">pages</span>: [<span class="hljs-string">&#x27;index&#x27;</span>]<br>   &#125;,<br>   &#123;<br>     <span class="hljs-attr">root</span>: <span class="hljs-string">&#x27;pages/privacy&#x27;</span>,<br>     <span class="hljs-attr">pages</span>: [<span class="hljs-string">&#x27;index&#x27;</span>]<br>   &#125;,<br>   &#123;<br>     <span class="hljs-attr">root</span>: <span class="hljs-string">&#x27;pages/friends&#x27;</span>,<br>     <span class="hljs-attr">pages</span>: [<span class="hljs-string">&#x27;index&#x27;</span>]<br>   &#125;,<br>   <span class="hljs-comment">// &#123;</span><br>   <span class="hljs-comment">//   root: &#x27;pages/reward&#x27;,</span><br>   <span class="hljs-comment">//   pages: [&#x27;index&#x27;]</span><br>   <span class="hljs-comment">// &#125;,</span><br>   <span class="hljs-comment">// &#123;</span><br>   <span class="hljs-comment">//   root: &#x27;pages/myadmin&#x27;,</span><br>   <span class="hljs-comment">//   pages: [&#x27;index&#x27;]</span><br>   <span class="hljs-comment">// &#125;,</span><br>   <span class="hljs-comment">// &#123;</span><br>   <span class="hljs-comment">//   root: &#x27;pages/mybooks&#x27;,</span><br>   <span class="hljs-comment">//   pages: [&#x27;index&#x27;]</span><br>   <span class="hljs-comment">// &#125;,</span><br> ],<br><span class="hljs-comment">// ...</span><br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-info">提示</span></p><ol><li>小程序主包超过 2M，就无法真机预览了，为了提前做好准备在一开始就进行分包处理。（现在开发工具测试时可以把主包大小调整到4M）</li><li>小程序的主包，包括主页自己使用的相关文件，同时项目主入口挂载的相关文件都会打进主包中，common 全局公共方法也会打进主包</li><li>分包中使用的公共文件虽然不会打进主包中，但是会在各自分包中生成文件，所以会导致整包大小增加。</li></ol></blockquote></li><li><p><strong>使用 webpack 分包</strong></p><ol><li><p><strong>开启taro自带的分包优化</strong>   <code>config/index.js</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// ...</span><br><span class="hljs-comment">// 小程序端专用配置</span><br><span class="hljs-attr">mini</span>: &#123;<br>  <span class="hljs-comment">// 可开启智能提取分包依赖插件 by ganxb</span><br>  <span class="hljs-attr">optimizeMainPackage</span>: &#123;<br>    <span class="hljs-attr">enable</span>: <span class="hljs-literal">true</span>,<br>      <span class="hljs-attr">exclude</span>: [<br>        <span class="hljs-comment">// path.resolve(__dirname, &#x27;../src/utils/moduleName.js&#x27;),</span><br>        <span class="hljs-comment">// module =&gt; module.resource?.indexOf(&#x27;pinia&#x27;) &gt;= 0</span><br>      ]<br>  &#125;,<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>webpack 分包插件</strong></p><p>安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add webpack<span class="hljs-literal">-bundle-analyzer</span> <span class="hljs-literal">-D</span><br></code></pre></td></tr></table></figure><p>配置   <code>config/index.js</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 引入依赖</span><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">BundleAnalyzerPlugin</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;webpack-bundle-analyzer&#x27;</span>).<span class="hljs-property">BundleAnalyzerPlugin</span><br><span class="hljs-keyword">const</span> config = &#123;<br>  <span class="hljs-comment">// 小程序端专用配置</span><br>  <span class="hljs-attr">mini</span>: &#123;<br>    <span class="hljs-comment">// 如果这里不配置，只有分包引用的插件会变成无依赖！！！</span><br>    <span class="hljs-attr">commonChunks</span>: [<span class="hljs-string">&#x27;runtime&#x27;</span>, <span class="hljs-string">&#x27;vendors&#x27;</span>, <span class="hljs-string">&#x27;taro&#x27;</span>, <span class="hljs-string">&#x27;common&#x27;</span>, <span class="hljs-string">&#x27;nutui&#x27;</span>, <span class="hljs-string">&#x27;pinia&#x27;</span>, <span class="hljs-string">&#x27;leancloud&#x27;</span>],<br>     <span class="hljs-comment">// 自定义 Webpack 配置</span><br>    <span class="hljs-title function_">webpackChain</span>(<span class="hljs-params">chain, webpack</span>) &#123;<br>    chain.<span class="hljs-title function_">plugin</span>(<span class="hljs-string">&#x27;analyzer&#x27;</span>).<span class="hljs-title function_">use</span>(<span class="hljs-title class_">BundleAnalyzerPlugin</span>)<br>    chain.<span class="hljs-title function_">merge</span>(&#123;<br>        <span class="hljs-attr">optimization</span>: &#123;<br>          <span class="hljs-comment">// runtimeChunk: &#123;&#125;</span><br>          <span class="hljs-attr">splitChunks</span>: &#123;<br>            <span class="hljs-attr">cacheGroups</span>: &#123;<br>              <span class="hljs-attr">vendors</span>: &#123;<br>                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;vendors&#x27;</span>,<br>                <span class="hljs-attr">minChunks</span>: <span class="hljs-number">2</span>,<br>                <span class="hljs-attr">test</span>: <span class="hljs-function"><span class="hljs-params">module</span> =&gt;</span> &#123;<br>                  <span class="hljs-keyword">return</span> <span class="hljs-regexp">/[\\/]node_modules[\\/]/</span>.<span class="hljs-title function_">test</span>(<span class="hljs-variable language_">module</span>.<span class="hljs-property">resource</span>)<br>                &#125;,<br>                <span class="hljs-attr">priority</span>: <span class="hljs-number">10</span><br>              &#125;,<br>              <span class="hljs-attr">nutui</span>: &#123;<br>                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;nutui&#x27;</span>,<br>                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/[\\/]node_modules[\\/]@nutui[\\/]/</span>,<br>                <span class="hljs-attr">priority</span>: <span class="hljs-number">15</span>, <span class="hljs-comment">// 优先级 &gt; vendors的10，故优先优化</span><br>                <span class="hljs-attr">enforce</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 始终为此缓存组创建chunk 忽略 minSize、minChunks、maxAsyncRequests、maxInitialRequests</span><br>                <span class="hljs-attr">reuseExistingChunk</span>: <span class="hljs-literal">true</span> <span class="hljs-comment">// 如果当前 chunk 包含已从主 bundle 中拆分出的模块，则它将被重用，而不是生成新的模块。</span><br>              &#125;,<br>              <span class="hljs-attr">pinia</span>: &#123;<br>                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;pinia&#x27;</span>,<br>                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/[\\/]node_modules[\\/]pinia[\\/]/</span>,<br>                <span class="hljs-attr">priority</span>: <span class="hljs-number">20</span>, <span class="hljs-comment">// 优先级 &gt; vendors的10，故优先优化</span><br>                <span class="hljs-attr">enforce</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 始终为此缓存组创建chunk 忽略 minSize、minChunks、maxAsyncRequests、maxInitialRequests</span><br>                <span class="hljs-attr">reuseExistingChunk</span>: <span class="hljs-literal">true</span> <span class="hljs-comment">// 如果当前 chunk 包含已从主 bundle 中拆分出的模块，则它将被重用，而不是生成新的模块。</span><br>              &#125;,<br>              <span class="hljs-attr">leancloud</span>: &#123;<br>                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;leancloud&#x27;</span>,<br>                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/[\\/]node_modules[\\/]leancloud-storage[\\/]/</span>,<br>                <span class="hljs-attr">priority</span>: <span class="hljs-number">25</span>, <span class="hljs-comment">// 优先级 &gt; vendors的10，故优先优化</span><br>                <span class="hljs-comment">// enforce: true, // 始终为此缓存组创建chunk 忽略 minSize、minChunks、maxAsyncRequests、maxInitialRequests</span><br>                <span class="hljs-attr">reuseExistingChunk</span>: <span class="hljs-literal">true</span> <span class="hljs-comment">// 如果当前 chunk 包含已从主 bundle 中拆分出的模块，则它将被重用，而不是生成新的模块。</span><br>              &#125;<br>            &#125;<br>          &#125;<br>        &#125;,<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>gz 压缩包</strong></p><p>安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm compression<span class="hljs-literal">-webpack-plugin</span> <span class="hljs-literal">-D</span><br></code></pre></td></tr></table></figure><p>配置   <code>config/index.js</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// ... </span><br><span class="hljs-comment">// 小程序端专用配置</span><br><span class="hljs-attr">mini</span>: &#123;<br>  <span class="hljs-comment">// 自定义 Webpack 配置</span><br>  <span class="hljs-title function_">webpackChain</span>(<span class="hljs-params">chain, webpack</span>) &#123;<br>    chain.<span class="hljs-title function_">merge</span>(&#123;<br>      <span class="hljs-attr">plugin</span>: &#123;<br>        <span class="hljs-attr">install</span>: &#123;<br>          <span class="hljs-attr">plugin</span>: <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;compression-webpack-plugin&#x27;</span>),<br>          <span class="hljs-attr">args</span>: [&#123;<br>            <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.(js|css)/</span>,<br>            <span class="hljs-comment">// filename: &#x27;[path].gz[query]&#x27;,</span><br>            <span class="hljs-comment">// <span class="hljs-doctag">FIXME:</span> webpack最新版本必须改成这样 =&gt; completed</span><br>            <span class="hljs-attr">filename</span>: <span class="hljs-string">&#x27;[path][base].gz&#x27;</span>,<br>            <span class="hljs-attr">algorithm</span>: <span class="hljs-string">&#x27;gzip&#x27;</span>,<br>            <span class="hljs-attr">threshold</span>: <span class="hljs-number">10240</span>,<br>            <span class="hljs-attr">minRatio</span>: <span class="hljs-number">0.8</span><br>          &#125;]<br>        &#125;<br>      &#125;,<br>    &#125;)<br>  &#125;<br>&#125;<br><span class="hljs-comment">// ...</span><br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-warning">注意</span></p><p>体验版真机测试 gz 压缩包无法上传，小波不确定如果正式上线版本是否可以。如果不行，可删除该插件包</p></blockquote></li></ol></li></ol><br><h4 id="第七步：安装-leancloud-连接数据库"><a href="#第七步：安装-leancloud-连接数据库" class="headerlink" title="第七步：安装 leancloud 连接数据库"></a>第七步：安装 leancloud 连接数据库</h4><p>安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add leancloud<span class="hljs-literal">-storage</span><br></code></pre></td></tr></table></figure><p>配置</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// leancloud</span><br><span class="hljs-keyword">import</span> <span class="hljs-variable constant_">AV</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;leancloud-storage/dist/av-weapp.js&#x27;</span><br><span class="hljs-variable constant_">AV</span>.<span class="hljs-title function_">init</span>(&#123;<br>  <span class="hljs-attr">appId</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>  <span class="hljs-attr">appKey</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>  <span class="hljs-comment">// 请将 xxx.example.com 替换为你的应用绑定的自定义 API 域名</span><br>  <span class="hljs-attr">serverURLs</span>: <span class="hljs-string">&#x27;https://xxxx.lc-cn-n1-shared.com&#x27;</span><br>&#125;)<br></code></pre></td></tr></table></figure><p>调用</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> <span class="hljs-variable constant_">AV</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;leancloud-storage/dist/av-weapp.js&#x27;</span><br><br><span class="hljs-keyword">const</span> handleTotal = (categoryCode?: <span class="hljs-built_in">string</span>): <span class="hljs-function"><span class="hljs-params">void</span> =&gt;</span> &#123;<br><span class="hljs-keyword">const</span> query = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">AV</span>.<span class="hljs-title class_">Query</span>(<span class="hljs-string">&#x27;app_post&#x27;</span>)<br>  query.<span class="hljs-title function_">notEqualTo</span>(<span class="hljs-string">&#x27;recommend&#x27;</span>, <span class="hljs-number">1</span>)<br>  query.<span class="hljs-title function_">equalTo</span>(<span class="hljs-string">&#x27;status&#x27;</span>, <span class="hljs-string">&#x27;approved&#x27;</span>)<br>  <span class="hljs-keyword">if</span> (categoryCode) &#123;<br>    query.<span class="hljs-title function_">equalTo</span>(<span class="hljs-string">&#x27;categoryCode&#x27;</span>, categoryCode)<br>  &#125;<br>  query.<span class="hljs-title function_">count</span>().<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">count: <span class="hljs-built_in">number</span></span>) =&gt;</span> &#123;<br>    listObj.<span class="hljs-property">total</span> = count<br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><span class="label label-warning">注意</span></p><p>小程序后台管理页面，<strong>开发管理–&gt;开发设置–&gt;服务器域名</strong>添加 leancloud 和自己 api接口域名(其他开放 api接口都要添加进来，EG：腾讯地图接口)</p><p><img src="https://article.biliimg.com/bfs/article/a755497e7ca7bc3b3205f10571c9dc65ded46d26.jpg@1e_1c.webp" alt="小程序后台管理--服务器域名"></p></blockquote><br><h3 id="😚微信小程序IOS优化，代码优化"><a href="#😚微信小程序IOS优化，代码优化" class="headerlink" title="😚微信小程序IOS优化，代码优化"></a>😚微信小程序IOS优化，代码优化</h3><ol><li><p>IOS页脚兼容样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- html --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fix-bottom-bar&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bottom-bar-content&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">/* css */</span><br><span class="hljs-selector-class">.fixed-bottom-bar</span><br><span class="hljs-attribute">height</span> <span class="hljs-built_in">calc</span>(<span class="hljs-number">50px</span> + <span class="hljs-built_in">constant</span>(safe-area-inset-bottom)) // 兼容 IOS&lt;<span class="hljs-number">11.2</span><br><span class="hljs-attribute">height</span> <span class="hljs-built_in">calc</span>(<span class="hljs-number">50px</span> + <span class="hljs-built_in">env</span>(safe-area-inset-bottom)) // 兼容 IOS&gt;<span class="hljs-number">11.2</span><br><span class="hljs-selector-class">.bottom-bar-content</span><br><span class="hljs-attribute">padding-bottom</span> <span class="hljs-built_in">constant</span>(safe-area-inset-bottom) // 兼容 IOS&lt;<span class="hljs-number">11.2</span><br><span class="hljs-attribute">padding-bottom</span> <span class="hljs-built_in">env</span>(safe-area-inset-bottom) // 兼容 IOS&gt;<span class="hljs-number">11.2</span><br><span class="hljs-attribute">position</span> fixed<br><span class="hljs-attribute">bottom</span> <span class="hljs-number">0</span><br><span class="hljs-attribute">left</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure></li><li><p>一行超出省略</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">/* 一行省略... */</span><br><span class="hljs-function"><span class="hljs-title">ellipis</span><span class="hljs-params">(fontVal = <span class="hljs-number">16px</span>)</span></span><br><span class="hljs-attribute">height</span> <span class="hljs-number">22px</span><br><span class="hljs-attribute">color</span> <span class="hljs-number">#fff</span><br><span class="hljs-attribute">font-size</span> <span class="hljs-number">16px</span><br><span class="hljs-attribute">text-indent</span> <span class="hljs-number">10px</span><br><span class="hljs-attribute">display</span> inline-block<br><span class="hljs-attribute">text-overflow</span> ellipsis<br><span class="hljs-attribute">white-space</span> nowrap<br><span class="hljs-attribute">overflow</span> hidden<br></code></pre></td></tr></table></figure></li><li><p>多行超出省略</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">/* 多行省略... */</span><br><span class="hljs-function"><span class="hljs-title">ellipis-clamp</span><span class="hljs-params">(clampVal = <span class="hljs-number">2</span>, heightVal = <span class="hljs-number">44px</span>)</span></span><br><span class="hljs-attribute">max-height</span> heightVal<br><span class="hljs-attribute">overflow</span> hidden<br><span class="hljs-attribute">word-break</span> break-all<br><span class="hljs-attribute">display</span> -webkit-box<br>-webkit-box-orient vertical<br>-webkit-line-clamp clampVal<br></code></pre></td></tr></table></figure></li><li><p><code>app.ts</code> 入口文件配置和组件挂载拆分</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// 入口配置</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./utils/createApp&#x27;</span><br><span class="hljs-comment">// nutUi组件</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./utils/nutPlguin&#x27;</span><br><span class="hljs-keyword">import</span> &#123; createPinia &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><span class="hljs-comment">// 全局自定义样式</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./app.styl&#x27;</span><br><br><span class="hljs-title class_">App</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title function_">createPinia</span>())<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">App</span><br><br></code></pre></td></tr></table></figure><p><code>utils/createApp.ts</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Taro</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@tarojs/taro&#x27;</span><br><br><span class="hljs-keyword">const</span> <span class="hljs-attr">customGlobalData</span>: <span class="hljs-title class_">CustomGlobalDataType</span> = &#123;<br>  <span class="hljs-attr">menuButtonInfo</span>: &#123;<br>    <span class="hljs-attr">bottom</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">height</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">left</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">right</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">top</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">width</span>: <span class="hljs-number">1</span><br>  &#125;,<br>  <span class="hljs-attr">systemInfo</span>: &#123;<br>    <span class="hljs-attr">model</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-attr">pixelRatio</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">windowWidth</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">windowHeight</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">system</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-attr">language</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-attr">version</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-attr">deviceOrientation</span>: <span class="hljs-string">&#x27;portrait&#x27;</span>,<br>    <span class="hljs-attr">screenWidth</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">screenHeight</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-title class_">SDKVersion</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-attr">brand</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-attr">fontSizeSetting</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">benchmarkLevel</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-comment">// batteryLevel: 100,</span><br>    <span class="hljs-attr">statusBarHeight</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">bluetoothEnabled</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">locationEnabled</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">wifiEnabled</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">cameraAuthorized</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">locationAuthorized</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">microphoneAuthorized</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">notificationAuthorized</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">safeArea</span>: &#123;<br>      <span class="hljs-attr">top</span>: <span class="hljs-number">47</span>,<br>      <span class="hljs-attr">left</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">right</span>: <span class="hljs-number">390</span>,<br>      <span class="hljs-attr">bottom</span>: <span class="hljs-number">810</span>,<br>      <span class="hljs-attr">width</span>: <span class="hljs-number">390</span>,<br>      <span class="hljs-attr">height</span>: <span class="hljs-number">763</span><br>    &#125;,<br>    <span class="hljs-attr">platform</span>: <span class="hljs-string">&#x27;devtools&#x27;</span>,<br>    <span class="hljs-attr">enableDebug</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-comment">// devicePixelRatio: 3,</span><br>    <span class="hljs-comment">// mode: &#x27;default&#x27;,</span><br>    <span class="hljs-attr">theme</span>: <span class="hljs-string">&#x27;light&#x27;</span><br>  &#125;,<br>  <span class="hljs-attr">topbarTop</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-attr">topbarPaddingR</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-attr">topbarBoxHeight</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-attr">topbarHeight</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-attr">user</span>: <span class="hljs-string">&#x27;&#x27;</span><br>&#125;<br><br><span class="hljs-comment">// leancloud</span><br><span class="hljs-keyword">import</span> <span class="hljs-variable constant_">AV</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;leancloud-storage/dist/av-weapp.js&#x27;</span><br><span class="hljs-variable constant_">AV</span>.<span class="hljs-title function_">init</span>(&#123;<br>  <span class="hljs-attr">appId</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>  <span class="hljs-attr">appKey</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>  <span class="hljs-comment">// 请将 xxx.example.com 替换为你的应用绑定的自定义 API 域名</span><br>  <span class="hljs-attr">serverURLs</span>: <span class="hljs-string">&#x27;https://.lc-cn-n1-shared.com&#x27;</span><br>&#125;)<br><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">App</span> = <span class="hljs-title function_">createApp</span>(&#123;<br>  <span class="hljs-title function_">onLaunch</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 第一执行</span><br>    <span class="hljs-comment">// console.log(&#x27;onlaunch----------&#x27;, Taro.getMenuButtonBoundingClientRect())</span><br><br>    <span class="hljs-comment">// customGlobalData.menuButtonInfo = Taro.getMenuButtonBoundingClientRect()</span><br>    customGlobalData.<span class="hljs-property">menuButtonInfo</span> = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(<br>      customGlobalData.<span class="hljs-property">menuButtonInfo</span>,<br>      <span class="hljs-title class_">Taro</span>.<span class="hljs-title function_">getMenuButtonBoundingClientRect</span>()<br>    )<br>    <span class="hljs-comment">// 获取接口的数据不要自己转别名，尽量用接口返回参数名</span><br>    customGlobalData.<span class="hljs-property">systemInfo</span> = <span class="hljs-title class_">Taro</span>.<span class="hljs-title function_">getSystemInfoSync</span>()<br><br>    <span class="hljs-comment">// 距离顶部的距离 = 胶囊按钮的top</span><br>    customGlobalData.<span class="hljs-property">topbarTop</span> = customGlobalData.<span class="hljs-property">menuButtonInfo</span>.<span class="hljs-property">top</span><br>    <span class="hljs-comment">// topbar盒子高度 = 顶部高度+胶囊按钮高度+胶囊按钮的上下间距</span><br>    customGlobalData.<span class="hljs-property">topbarBoxHeight</span> =<br>      (customGlobalData.<span class="hljs-property">systemInfo</span>.<span class="hljs-property">statusBarHeight</span> || <span class="hljs-number">0</span>) +<br>        customGlobalData.<span class="hljs-property">menuButtonInfo</span>.<span class="hljs-property">height</span> +<br>        (customGlobalData.<span class="hljs-property">menuButtonInfo</span>.<span class="hljs-property">top</span> - (customGlobalData.<span class="hljs-property">systemInfo</span>.<span class="hljs-property">statusBarHeight</span> || <span class="hljs-number">0</span>)) *<br>          <span class="hljs-number">2</span> || <span class="hljs-number">0</span><br>    <span class="hljs-comment">// 右填充：窗口宽度 - 胶囊按钮的左间距 - 10</span><br>    customGlobalData.<span class="hljs-property">topbarPaddingR</span> =<br>      customGlobalData.<span class="hljs-property">systemInfo</span>.<span class="hljs-property">windowWidth</span> - (customGlobalData.<span class="hljs-property">menuButtonInfo</span>.<span class="hljs-property">left</span> + <span class="hljs-number">10</span>) || <span class="hljs-number">0</span><br>    <span class="hljs-comment">// topbar的高度 = 胶囊高度 + 胶囊的上下间距</span><br>    customGlobalData.<span class="hljs-property">topbarHeight</span> =<br>      customGlobalData.<span class="hljs-property">menuButtonInfo</span>.<span class="hljs-property">height</span> +<br>      (customGlobalData.<span class="hljs-property">menuButtonInfo</span>.<span class="hljs-property">top</span> - (customGlobalData.<span class="hljs-property">systemInfo</span>.<span class="hljs-property">statusBarHeight</span> || <span class="hljs-number">0</span>)) * <span class="hljs-number">2</span><br>  &#125;,<br>  <span class="hljs-title function_">onShow</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 第二执行</span><br>    <span class="hljs-comment">// console.log(&#x27;onshow----------&#x27;)</span><br>  &#125;,<br>  <span class="hljs-title function_">onHide</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// console.log(&#x27;onhide----------&#x27;)</span><br>  &#125;<br>  <span class="hljs-comment">// onPullDownRefresh: function ()&#123;</span><br>  <span class="hljs-comment">//   Taro.stopPullDownRefresh()</span><br>  <span class="hljs-comment">// &#125;</span><br><br>  <span class="hljs-comment">// 入口组件不需要实现 render 方法，即使实现了也会被 taro 所覆盖</span><br>&#125;)<br><br><span class="hljs-comment">// 全局变量</span><br><span class="hljs-title class_">App</span>.<span class="hljs-title function_">provide</span>(<span class="hljs-string">&#x27;$customGlobalData&#x27;</span>, customGlobalData)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">App</span><br></code></pre></td></tr></table></figure><p><code>utils/nutPlguin.ts</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./createApp&#x27;</span><br><span class="hljs-keyword">import</span> &#123;<br>  <span class="hljs-title class_">Button</span>,<br>  <span class="hljs-title class_">Cell</span>,<br>  <span class="hljs-title class_">CellGroup</span>,<br>  <span class="hljs-title class_">Icon</span>,<br>  <span class="hljs-title class_">Tag</span>,<br>  <span class="hljs-title class_">Tabbar</span>,<br>  <span class="hljs-title class_">TabbarItem</span>,<br>  <span class="hljs-title class_">SearchBar</span>,<br>  <span class="hljs-title class_">Tabs</span>,<br>  <span class="hljs-title class_">TabPane</span>,<br>  <span class="hljs-title class_">Avatar</span>,<br>  <span class="hljs-title class_">AvatarGroup</span>,<br>  <span class="hljs-title class_">Empty</span>,<br>  <span class="hljs-title class_">Skeleton</span>,<br>  <span class="hljs-title class_">Navbar</span>,<br>  <span class="hljs-title class_">Popup</span>,<br>  <span class="hljs-title class_">OverLay</span>,<br>  <span class="hljs-title class_">Grid</span>,<br>  <span class="hljs-title class_">GridItem</span>,<br>  <span class="hljs-title class_">Swiper</span>,<br>  <span class="hljs-title class_">SwiperItem</span>,<br>  <span class="hljs-title class_">TextArea</span>,<br>  <span class="hljs-title class_">Notify</span>,<br>  <span class="hljs-title class_">NoticeBar</span>,<br>  <span class="hljs-comment">// 因为项目初始选择了stylus导致sass的变量报错无法使用nutui的布局组件</span><br>  <span class="hljs-comment">// Layout,</span><br>  <span class="hljs-comment">// Row,</span><br>  <span class="hljs-comment">// Col</span><br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@nutui/nutui-taro&#x27;</span><br><br><span class="hljs-title class_">App</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Button</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Cell</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CellGroup</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Icon</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tag</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tabbar</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">TabbarItem</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SearchBar</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tabs</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">TabPane</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Avatar</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">AvatarGroup</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Empty</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Skeleton</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Navbar</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Popup</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">OverLay</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Grid</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">GridItem</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Swiper</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SwiperItem</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">TextArea</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">NoticeBar</span>)<br>  .<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Notify</span>)<br></code></pre></td></tr></table></figure></li><li><p>webpack 打包后生产环境去除 console</p><p><code>config/index.js</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> config = &#123;<br><span class="hljs-comment">// ...</span><br><span class="hljs-comment">// 配置只在生产模式下生效(去除consoloe)</span><br><span class="hljs-attr">terser</span>: &#123;<br>    <span class="hljs-attr">enable</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">config</span>: &#123;<br>      <span class="hljs-comment">// 配置项同 https://github.com/terser/terser#minify-options</span><br>      <span class="hljs-attr">ecma</span>: <span class="hljs-literal">undefined</span>,<br>      <span class="hljs-attr">warnings</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-attr">parse</span>: &#123;&#125;,<br>      <span class="hljs-attr">compress</span>: &#123; <br>        <span class="hljs-attr">drop_console</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">drop_debugger</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">pure_funcs</span>: [<span class="hljs-string">&#x27;console.log&#x27;</span>] <span class="hljs-comment">// 移除console</span><br>      &#125;<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-comment">// ...</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ol><br><h3 id="😫搭建过程中小波遇见的问题"><a href="#😫搭建过程中小波遇见的问题" class="headerlink" title="😫搭建过程中小波遇见的问题"></a>😫搭建过程中小波遇见的问题</h3><blockquote><p><span class="label label-danger">错误</span></p><p>出现 sass 安装失败提示</p><p>报错1</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-number">404</span> status code downloading <span class="hljs-number">32</span><span class="hljs-literal">-bit</span> node.lib <br>Error: <span class="hljs-number">404</span> status code downloading <span class="hljs-number">32</span><span class="hljs-literal">-bit</span> node.lib <br></code></pre></td></tr></table></figure><p>报错2</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">check python checking <span class="hljs-keyword">for</span> Python executable <span class="hljs-string">&quot;python2&quot;</span> <span class="hljs-keyword">in</span> the PATH<br></code></pre></td></tr></table></figure></blockquote><br><p>报错1原因：18 以上的 node 版本  镜像库里没有32-bit 文件夹,安装18版本以下的 node</p><p>解决方案：小波换成了 <strong>16.13.1</strong></p><br><p>报错2解决方案：</p><p>方法1：按官方给的建议执行以下命令后再重新初始安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">// 如果安装过程出现sass相关的安装错误<br>pnpm add <span class="hljs-literal">-g</span> mirror<span class="hljs-literal">-config-china</span><br></code></pre></td></tr></table></figure><p>方法2：只更改 sass 的镜像下载地址或者更改 pnpm 的镜像地址</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm config <span class="hljs-built_in">set</span> sass_binary_site https://npm.taobao.org/mirrors/node<span class="hljs-literal">-sass</span>/<br>pnpm config <span class="hljs-built_in">set</span> registry https://registry.npmmirror.com<br></code></pre></td></tr></table></figure><p>如果以上方法都失败，恭喜你和小波遭遇一样</p><p>方法3：打开 powershell 管理员模式执行以下 (项目文件中安装)</p><ol><li><p>安装 window 安装工具</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add <span class="hljs-literal">--global</span> <span class="hljs-literal">--production</span> windows<span class="hljs-literal">-build-tools</span><br>// 或<br>pnpm add <span class="hljs-literal">-g</span> windows<span class="hljs-literal">-build-tools</span><br></code></pre></td></tr></table></figure></li><li><p>卸载高版本 node 自带安装的 python3 ，镜像网站下载 <a href="https://registry.npmmirror.com/binary.html?path=python/2.7.5/" target="_blank" rel="noopener external nofollow noreferrer">python-2.7.5.amd64.msi</a> </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell">UNCAUGHT EXCEPTION This is a bug <span class="hljs-keyword">in</span> `node<span class="hljs-literal">-gyp</span>`<br>// command <span class="hljs-string">&quot;C:\Program Files\nodejs\node.exe&quot;</span> <span class="hljs-string">&quot;C:\myWeb\taro-vue3\node_modules\.pnpm\node-gyp@3.8.0\n</span><br><span class="hljs-string">// │ gyp ERR! cwd C:\myWeb\taro-vue3\node_modules.pnpm\node-sass@4.14.1\node_modules\node-sass</span><br><span class="hljs-string">// │ gyp ERR! node -v v16.13.1</span><br><span class="hljs-string">// │ gyp ERR! node-gyp -v v3.8.0</span><br><span class="hljs-string">// │ gyp ERR! This is a bug in node-gyp.</span><br><span class="hljs-string"></span><br><span class="hljs-string">// This is a bug in `node-gyp`. Try to update node-gyp and file an Issue if it does not help</span><br></code></pre></td></tr></table></figure><p>解决方法：安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add <span class="hljs-literal">-g</span> node<span class="hljs-literal">-gyp</span><br></code></pre></td></tr></table></figure></li><li><p>安装 node-sass</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add node<span class="hljs-literal">-sass</span> <span class="hljs-literal">-D</span><br></code></pre></td></tr></table></figure></li><li><p>安装 @tarojs&#x2F;plugin-sass</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pnpm add @tarojs/plugin<span class="hljs-literal">-sass</span> <span class="hljs-literal">-D</span><br></code></pre></td></tr></table></figure></li><li><p>配置插件 <code>config/index.js</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">// ...</span><br><span class="hljs-attr">plugins</span>: [<br>    <span class="hljs-string">&#x27;@tarojs/plugin-sass&#x27;</span>, <span class="hljs-comment">// 使用 Sass</span><br>    <span class="hljs-comment">// &#x27;@tarojs/plugin-less&#x27;, // 使用 Less</span><br>    <span class="hljs-comment">// &#x27;@tarojs/plugin-stylus&#x27;, // 使用 Stylus</span><br>],<br><span class="hljs-comment">// ...</span><br></code></pre></td></tr></table></figure></li></ol><br><h3 id="😊直接克隆项目后安装步骤"><a href="#😊直接克隆项目后安装步骤" class="headerlink" title="😊直接克隆项目后安装步骤"></a>😊直接克隆项目后安装步骤</h3><ol><li><code>utils/createApp.ts</code> 绑定 leancloud 的 appId,appKey,域名</li><li><code>userInfo/useIndex.tsx</code> 中 storageLkey 绑定 leancloud 的 appId</li><li>微信小程序后台管理–&gt;开发管理加入自己的 leancloud 域名、腾讯地图 api域名、自己的相应 api域名</li><li><code>pnpm install</code> 后 <code>pnpm dev:weapp</code></li><li>微信开发工具勾选  <strong>不校验合法域名、web-view（业务域名）、TLS 版本以及 HTTPS 证书</strong></li></ol><br><h3 id="😊来自小波的bilibili视频教程"><a href="#😊来自小波的bilibili视频教程" class="headerlink" title="😊来自小波的bilibili视频教程"></a>😊来自小波的bilibili视频教程</h3><br><h3 id="🙂小波用到的相关参考资料链接"><a href="#🙂小波用到的相关参考资料链接" class="headerlink" title="🙂小波用到的相关参考资料链接"></a>🙂小波用到的相关参考资料链接</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.pnpm.cn/" target="_blank" rel="noopener external nofollow noreferrer">pnpm官网</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://nutui.jd.com/3x/#/zh-CN/guide/start" target="_blank" rel="noopener external nofollow noreferrer">nutui3文档</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://github.com/gumpBOBO/taro-vue3" target="_blank" rel="noopener external nofollow noreferrer">taro-vue3小程序模版</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://cn.vuejs.org/" target="_blank" rel="noopener external nofollow noreferrer">vue3文档</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://docs.leancloud.cn/sdk/storage/guide/js/#async-%E5%92%8C-await" target="_blank" rel="noopener external nofollow noreferrer">leancloud-js开发文档</a><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/userProfile.html" target="_blank" rel="noopener external nofollow noreferrer">微信小程序开发文档</a><a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span><a href="https://gitee.com/" target="_blank" rel="noopener external nofollow noreferrer">gitee官网</a><a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:8" class="footnote-text"><span><a href="https://www.tslang.cn/docs/handbook/functions.html" target="_blank" rel="noopener external nofollow noreferrer">typescript文档</a><a href="#fnref:8" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:9" class="footnote-text"><span><a href="https://es6.ruanyifeng.com/#docs/object-methods" target="_blank" rel="noopener external nofollow noreferrer">es6文档</a><a href="#fnref:9" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:10" class="footnote-text"><span><a href="https://pinia.web3doc.top/introduction.html" target="_blank" rel="noopener external nofollow noreferrer">pinia中文文档</a><a href="#fnref:10" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:11" class="footnote-text"><span><a href="https://juejin.cn/post/6966106927990308872" target="_blank" rel="noopener external nofollow noreferrer">volar开发神器</a><a href="#fnref:11" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:12" class="footnote-text"><span><a href="https://juejin.cn/post/6986847203885056036" target="_blank" rel="noopener external nofollow noreferrer">Pinia 快速入门</a><a href="#fnref:12" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:13" class="footnote-text"><span><a href="https://jelly.jd.com/article/6006b1055b6c6a01506c87fd" target="_blank" rel="noopener external nofollow noreferrer">适配iphoneX，就是这么简单</a><a href="#fnref:13" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:14" class="footnote-text"><span><a href="https://taro-docs.jd.com/docs/GETTING-STARTED" target="_blank" rel="noopener external nofollow noreferrer">taro3官方文档</a><a href="#fnref:14" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;br&gt;

&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;小波原计划是想把&lt;a href=&quot;https://blog.ganxb2.com/&quot;&gt;廿壴博客&lt;/a&gt;做到全平台</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="前端" scheme="https://blog.ganxb2.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="https://blog.ganxb2.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="编程" scheme="https://blog.ganxb2.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="typescript" scheme="https://blog.ganxb2.com/tags/typescript/"/>
    
    <category term="vue3" scheme="https://blog.ganxb2.com/tags/vue3/"/>
    
    <category term="pinia" scheme="https://blog.ganxb2.com/tags/pinia/"/>
    
    <category term="pnpm" scheme="https://blog.ganxb2.com/tags/pnpm/"/>
    
    <category term="taro3" scheme="https://blog.ganxb2.com/tags/taro3/"/>
    
    <category term="leancloud" scheme="https://blog.ganxb2.com/tags/leancloud/"/>
    
    <category term="nutui3" scheme="https://blog.ganxb2.com/tags/nutui3/"/>
    
    <category term="webpack" scheme="https://blog.ganxb2.com/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>廿壴(ganxb2)首页2023全新改版设计</title>
    <link href="https://blog.ganxb2.com/45700.html"/>
    <id>https://blog.ganxb2.com/45700.html</id>
    <published>2023-03-08T19:49:29.000Z</published>
    <updated>2024-12-30T18:48:24.543Z</updated>
    
    <content type="html"><![CDATA[<br><h3 id="🙂-前言"><a href="#🙂-前言" class="headerlink" title="🙂 前言"></a>🙂 前言</h3><p>廿壴(ganxb2)首页 2023 年完成全新改版设计，灵感来源于《三体》- 刘慈欣 &amp;《世界的理想》- 五条人。</p><p>风格选择了亮色的简图插画来传达人类历史长河的 5 个故事。</p><p><img src="https://article.biliimg.com/bfs/article/99d5a8b34c2a14f568661ab1d277fb9e507f3651.jpg@1e_1c.webp" alt="总有一天，这旖旎的星光将成为更伟大的存在"></p><br><h3 id="😚-廿壴-ganxb2-首页-2022版"><a href="#😚-廿壴-ganxb2-首页-2022版" class="headerlink" title="😚 廿壴(ganxb2)首页 2022版"></a>😚 廿壴(ganxb2)首页 2022版</h3><p><img src="https://article.biliimg.com/bfs/article/5616907ef51b496ae5f7dce84b9aaa3dc533c5ff.jpg@1e_1c.webp" alt="廿壴(ganxb2)首页2022版"></p><br><h3 id="😍-廿壴-ganxb2-首页-2023版"><a href="#😍-廿壴-ganxb2-首页-2023版" class="headerlink" title="😍 廿壴(ganxb2)首页 2023版"></a>😍 廿壴(ganxb2)首页 2023版</h3><h4 id="完整页面"><a href="#完整页面" class="headerlink" title="完整页面"></a>完整页面</h4><p><img src="https://article.biliimg.com/bfs/article/4558bf22368d642e2707b0bd8c6ac39b2bd1d8b8.jpg@1e_1c.webp" alt="廿壴(ganxb2)首页2023版"></p><br><h4 id="字体规范"><a href="#字体规范" class="headerlink" title="字体规范"></a>字体规范</h4><p><img src="https://article.biliimg.com/bfs/article/a0c9bdb719fa01d968c64409c57c08b05245191c.jpg@1e_1c.webp" alt="设计规范 - 字体"></p><br><h4 id="五屏五个故事"><a href="#五屏五个故事" class="headerlink" title="五屏五个故事"></a>五屏五个故事</h4><h5 id="「诞生」"><a href="#「诞生」" class="headerlink" title="「诞生」"></a>「诞生」</h5><p>寒武纪大爆发之后</p><p>我们的祖先从大海里爬了出来</p><p>在那之后我们就将石头和木头</p><p>凿成了人的模样</p><p><img src="https://article.biliimg.com/bfs/article/55da984b47918af3a0e5b7f9d3fd5e16679055df.jpg@1e_1c.webp" alt="诞生"></p><br><h5 id="「传承」"><a href="#「传承」" class="headerlink" title="「传承」"></a>「传承」</h5><p>人类最终还是厌倦了</p><p>像猴子那样咿咿呀呀乱喊乱叫</p><p>人们自由地歌唱跳舞</p><p>创造文字传承文明</p><p><img src="https://article.biliimg.com/bfs/article/cec05fe1cdf74f52bea5ee1fd56f2c0720c882f6.jpg@1e_1c.webp" alt="传承"></p><br><h5 id="「命运共同体」"><a href="#「命运共同体」" class="headerlink" title="「命运共同体」"></a>「命运共同体」</h5><p>当今世界面临着百年未有之大变</p><p>资源短缺、气候变化、人口爆炸、疾病流行</p><p>人类只有一个地球，一个世界</p><p>WE ARE FAMILY</p><p><img src="https://article.biliimg.com/bfs/article/0b14204332d3d6f633f0d4dec3bbf75ca6e7e950.jpg@1e_1c.webp" alt="命运共同体"></p><br><h5 id="「流浪地球」"><a href="#「流浪地球」" class="headerlink" title="「流浪地球」"></a>「流浪地球」</h5><p>太阳内核极速老化</p><p>地球即将被吞没</p><p>为了生存人类制定了前所未有的恢宏计划</p><p>驱使整个地球逃离到4.22光年外的新家园</p><p><img src="https://article.biliimg.com/bfs/article/854d06767cb300ac03cbd8537d42d094d1a6fe47.jpg@1e_1c.webp" alt="流浪地球"></p><br><h5 id="「绝望与希望」"><a href="#「绝望与希望」" class="headerlink" title="「绝望与希望」"></a>「绝望与希望」</h5><p>浩瀚而漫长的宇宙之旅</p><p>人类把勇气与坚毅镌刻于星空之下</p><p>把呼唤的涟漪荡漾于星系之间</p><p>把生命之火照耀万古长夜</p><p><img src="https://article.biliimg.com/bfs/article/a52222fa9e133e072c2559b4c496ab75b32c6ab9.jpg@1e_1c.webp" alt="绝望与希望"></p><br>]]></content>
    
    
      
      
    <summary type="html">&lt;br&gt;

&lt;h3 id=&quot;🙂-前言&quot;&gt;&lt;a href=&quot;#🙂-前言&quot; class=&quot;headerlink&quot; title=&quot;🙂 前言&quot;&gt;&lt;/a&gt;🙂 前言&lt;/h3&gt;&lt;p&gt;廿壴(ganxb2)首页 2023 年完成全新改版设计，灵感来源于《三体》- 刘慈欣 &amp;amp;《世界的</summary>
      
    
    
    
    <category term="设计" scheme="https://blog.ganxb2.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="廿壴(ganxb2)" scheme="https://blog.ganxb2.com/tags/%E5%BB%BF%E5%A3%B4-ganxb2/"/>
    
    <category term="视觉传达" scheme="https://blog.ganxb2.com/tags/%E8%A7%86%E8%A7%89%E4%BC%A0%E8%BE%BE/"/>
    
    <category term="ui/web网页设计" scheme="https://blog.ganxb2.com/tags/ui-web%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="创意设计" scheme="https://blog.ganxb2.com/tags/%E5%88%9B%E6%84%8F%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>网易云用户的福音来了，电脑端免费美化增强插件betterNCM Ⅱ</title>
    <link href="https://blog.ganxb2.com/7020.html"/>
    <id>https://blog.ganxb2.com/7020.html</id>
    <published>2023-01-12T19:12:44.000Z</published>
    <updated>2024-12-30T18:48:24.544Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🙂前言"><a href="#🙂前言" class="headerlink" title="🙂前言"></a>🙂前言</h3><p>网易云对动漫和很多创作型歌手的支持一直比酷狗和qq音乐等其他听歌软件做的更好，也算是独一档了，所以小波N年前就果断选择听歌都是用的网易云。</p><p>但是唯独不好就是这界面和酷狗和qq音乐比起来是真的素然无味，当发现betterNCM Ⅱ后果断开启模仿酷狗和QQ音乐的美化之路。</p><br><h3 id="😍小波网易云betterNCM-Ⅱ美化后成品效果"><a href="#😍小波网易云betterNCM-Ⅱ美化后成品效果" class="headerlink" title="😍小波网易云betterNCM Ⅱ美化后成品效果"></a>😍小波网易云betterNCM Ⅱ美化后成品效果</h3><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://i0.hdslb.com/bfs/album/ac312b84df06769e22ff099cb416c98467df6fa1.jpg@1e_1c.webp" alt="网易云美化插件 betterNCM Ⅱ"></div><div class="group-image-wrap"><img src="https://i0.hdslb.com/bfs/album/3e913942f2606312459ad121de2b643fdbac333e.jpg@1e_1c.webp" alt="听歌排行添加音乐封面"></div></div></div><br><h3 id="😚betterNCM-Ⅱ-插件列表"><a href="#😚betterNCM-Ⅱ-插件列表" class="headerlink" title="😚betterNCM Ⅱ 插件列表"></a>😚betterNCM Ⅱ 插件列表</h3><ul><li><p><strong>TinyNCM</strong></p><p>更改字体，删除无用组件</p></li><li><p><strong>what is the cover of this music</strong> <span class="label label-success">推荐</span></p><p>给歌曲列表添加音乐封面（目前仅支持每日推荐与听歌排行）</p></li><li><p><strong>HideScrollbar</strong></p><p>隐藏滚动条</p></li><li><p><strong>RefineNowPlaying</strong></p><p>美化音乐播放界面</p></li><li><p><strong>miku-plugin</strong> <span class="label label-success">推荐</span></p><p>精简网易云音乐，关闭任何组件菜单</p></li><li><p><strong>visualRecord</strong></p><p>可视化听歌排行，个人主页-听歌排行</p></li><li><p><strong>NcmDump</strong>  <span class="label label-success">推荐</span></p><p>使用NcmDump程序转换ncm文件为flac,map3</p></li><li><p><strong>liveSongPlayer</strong></p><p>最简单B站点个姬</p></li><li><p><strong>BGEnhanced</strong></p><p>高级背景设置，支持随机背景，支持视频，支持亚克力</p></li><li><p><strong>Transmission</strong></p><p>主题</p></li><li><p><strong>MoThem</strong> <span class="label label-success">推荐</span></p><p>主题 </p><p class="note note-info">提示<br>更换背景后根据色彩点stylesheetLoader的“切换字体颜色”配合使用</p></li><li><p><strong>Unbounded</strong></p><p>主题</p></li><li><p><strong>Microrange</strong></p><p>主题</p></li><li><p><strong>actionEnhancement</strong> <span class="label label-success">推荐</span></p><p>右键下载打开歌曲，右键分享复制歌曲id，鼠标滚轮调节音量</p></li></ul><br><h3 id="🤔betterNCM-Ⅱ-插件安装"><a href="#🤔betterNCM-Ⅱ-插件安装" class="headerlink" title="🤔betterNCM Ⅱ 插件安装"></a>🤔betterNCM Ⅱ 插件安装</h3><p>安装后betterNCM Ⅱ，进入网易云–&gt;<strong>设置</strong>–&gt;<strong>PluginMarket</strong>，点击<strong>加载插件</strong>，列表刷新出来后自己选择安装。</p><br><h3 id="😊小波整理BetterNCM-Installer-1-0-2打包百度云下载链接"><a href="#😊小波整理BetterNCM-Installer-1-0-2打包百度云下载链接" class="headerlink" title="😊小波整理BetterNCM Installer 1.0.2打包百度云下载链接"></a>😊小波整理BetterNCM Installer 1.0.2打包百度云下载链接</h3><h4 id="点我去廿壴博客的百度云下载"><a href="#点我去廿壴博客的百度云下载" class="headerlink" title="点我去廿壴博客的百度云下载"></a><a href="https://pan.baidu.com/s/1TI9K-5Da7BvmP0JIJqmy0g?pwd=l6kw" target="_blank" rel="noopener external nofollow noreferrer" data-download="goDown">点我去廿壴博客的百度云下载</a></h4><p>不放心百度云的可以去官方github地址下载<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://github.com/MicroCBer/BetterNCM-Installer/releases">[1]</span></a></sup></p><ul><li><h4 id="betterNCM-Ⅱ程序安装说明"><a href="#betterNCM-Ⅱ程序安装说明" class="headerlink" title="betterNCM Ⅱ程序安装说明"></a>betterNCM Ⅱ程序安装说明</h4><p>直接点击下载来的exe程序，如图点击安装即可。</p><img src="https://user-images.githubusercontent.com/66859419/210129835-11ceea16-f5dd-43b7-ba83-625a3c4d920e.png" alt="betterNCM Ⅱ安装说明"  /></li><li><h4 id="betterNCM-Ⅱ程序更新说明"><a href="#betterNCM-Ⅱ程序更新说明" class="headerlink" title="betterNCM Ⅱ程序更新说明"></a>betterNCM Ⅱ程序更新说明</h4><p>网易云上面的更新按钮无效，自己下载最新版安装程序exe重新安装即可。</p></li></ul><br><h3 id="🙂网易云美化插件betterNCM-Ⅱ相关链接"><a href="#🙂网易云美化插件betterNCM-Ⅱ相关链接" class="headerlink" title="🙂网易云美化插件betterNCM Ⅱ相关链接"></a>🙂网易云美化插件betterNCM Ⅱ相关链接</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://github.com/MicroCBer/BetterNCM-Installer/releases" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/MicroCBer/BetterNCM-Installer/releases</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;🙂前言&quot;&gt;&lt;a href=&quot;#🙂前言&quot; class=&quot;headerlink&quot; title=&quot;🙂前言&quot;&gt;&lt;/a&gt;🙂前言&lt;/h3&gt;&lt;p&gt;网易云对动漫和很多创作型歌手的支持一直比酷狗和qq音乐等其他听歌软件做的更好，也算是独一档了，所以小波N年前就果断选择听歌都</summary>
      
    
    
    
    <category term="软件应用" scheme="https://blog.ganxb2.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="windows" scheme="https://blog.ganxb2.com/tags/windows/"/>
    
    <category term="windows美化" scheme="https://blog.ganxb2.com/tags/windows%E7%BE%8E%E5%8C%96/"/>
    
    <category term="betterNCM Ⅱ" scheme="https://blog.ganxb2.com/tags/betterNCM-%E2%85%A1/"/>
    
  </entry>
  
  <entry>
    <title>「under no flag」</title>
    <link href="https://blog.ganxb2.com/22521.html"/>
    <id>https://blog.ganxb2.com/22521.html</id>
    <published>2023-01-09T21:58:42.000Z</published>
    <updated>2024-12-30T18:48:24.547Z</updated>
    
    <content type="html"><![CDATA[<p>夕阳染红了窗外一半的天空</p><p>四姑娘山沁人心脾的雪风徐徐吹来</p><p>米白色的窗帘跟随律动轻盈地舞动起来</p><p>书院街教堂的钟声，‘’铛‘‘铛’‘铛’’在雒城街道回响</p><p>西高金黄的麦田上，风车依然悠哉悠哉地转着</p><p>“鸭子河”犹如心脏中刚泵出的血液般鲜红，</p><p>顺着三星堆堤畔自西向东流淌</p><p>候鸟、野鸭在江面盘旋，和鸣共舞</p><p>飞院教练机从东方的三水飞来</p><p>俯瞰着“鸭子河”，从上空缓缓划过</p><p>销匿于橙红的落日中…</p><p>– for 广汉</p><br><p>“<strong>战地五</strong>”中最棒的曲子，「under no flag」- Johan Soderqvist，真的很让人动容。</p><p>曲子很容易让人联想到《勇敢的心》，《兄弟连》，《太平洋战争》</p><!--&high_quality=1-->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;夕阳染红了窗外一半的天空&lt;/p&gt;
&lt;p&gt;四姑娘山沁人心脾的雪风徐徐吹来&lt;/p&gt;
&lt;p&gt;米白色的窗帘跟随律动轻盈地舞动起来&lt;/p&gt;
&lt;p&gt;书院街教堂的钟声，‘’铛‘‘铛’‘铛’’在雒城街道回响&lt;/p&gt;
&lt;p&gt;西高金黄的麦田上，风车依然悠哉悠哉地转着&lt;/p&gt;
&lt;p&gt;“鸭子河”犹</summary>
      
    
    
    
    <category term="生活" scheme="https://blog.ganxb2.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="碎碎念" scheme="https://blog.ganxb2.com/categories/%E7%94%9F%E6%B4%BB/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
    <category term="廿壴(ganxb2)" scheme="https://blog.ganxb2.com/tags/%E5%BB%BF%E5%A3%B4-ganxb2/"/>
    
    <category term="小波生活随笔" scheme="https://blog.ganxb2.com/tags/%E5%B0%8F%E6%B3%A2%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
